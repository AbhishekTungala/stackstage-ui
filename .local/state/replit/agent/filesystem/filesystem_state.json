{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"127.0.0.1\"\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":1901},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { users, type User, type InsertUser } from \"@shared/schema\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  currentId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.currentId = 1;\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1012},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":533},"client/src/App.css":{"content":"#root {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\n.logo {\n  height: 6em;\n  padding: 1.5em;\n  will-change: filter;\n  transition: filter 300ms;\n}\n.logo:hover {\n  filter: drop-shadow(0 0 2em #646cffaa);\n}\n.logo.react:hover {\n  filter: drop-shadow(0 0 2em #61dafbaa);\n}\n\n@keyframes logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  a:nth-of-type(2) .logo {\n    animation: logo-spin infinite 20s linear;\n  }\n}\n\n.card {\n  padding: 2em;\n}\n\n.read-the-docs {\n  color: #888;\n}\n","size_bytes":606},"client/src/App.tsx":{"content":"import { Toaster } from \"@/components/ui/toaster\";\nimport { Toaster as Sonner } from \"@/components/ui/sonner\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Router, Route, Switch } from \"wouter\";\nimport { ThemeProvider } from \"@/hooks/use-theme\";\nimport Landing from \"./pages/Landing\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Pricing from \"./pages/Pricing\";\nimport Assistant from \"./pages/Assistant\";\nimport Analyze from \"./pages/Analyze\";\nimport Results from \"./pages/Results\";\nimport Fixes from \"./pages/Fixes\";\nimport Diagram from \"./pages/Diagram\";\nimport Share from \"./pages/Share\";\nimport Docs from \"./pages/Docs\";\nimport Enterprise from \"./pages/Enterprise\";\nimport About from \"./pages/About\";\nimport Privacy from \"./pages/Privacy\";\nimport Terms from \"./pages/Terms\";\nimport Support from \"./pages/Support\";\nimport Status from \"./pages/Status\";\nimport Community from \"./pages/Community\";\nimport Changelog from \"./pages/Changelog\";\nimport NotFound from \"./pages/NotFound\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <QueryClientProvider client={queryClient}>\n    <ThemeProvider defaultTheme=\"dark\">\n      <TooltipProvider>\n        <Toaster />\n        <Sonner />\n        <Router>\n          <Switch>\n            <Route path=\"/\" component={Landing} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/pricing\" component={Pricing} />\n            <Route path=\"/assistant\" component={Assistant} />\n            <Route path=\"/analyze\" component={Analyze} />\n            <Route path=\"/results\" component={Results} />\n            <Route path=\"/results/fixes\" component={Fixes} />\n            <Route path=\"/results/diagram\" component={Diagram} />\n            <Route path=\"/results/share\" component={Share} />\n            <Route path=\"/docs\" component={Docs} />\n            <Route path=\"/enterprise\" component={Enterprise} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/privacy\" component={Privacy} />\n            <Route path=\"/terms\" component={Terms} />\n            <Route path=\"/support\" component={Support} />\n            <Route path=\"/status\" component={Status} />\n            <Route path=\"/community\" component={Community} />\n            <Route path=\"/changelog\" component={Changelog} />\n            {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL \"*\" ROUTE */}\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </TooltipProvider>\n    </ThemeProvider>\n  </QueryClientProvider>\n);\n\nexport default App;\n","size_bytes":2713},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. \nAll colors MUST be HSL.\n*/\n\n@layer base {\n  :root {\n    /* StackStage Light Mode - Default */\n    --background: 0 0% 99%;\n    --foreground: 220 9% 9%;\n\n    /* Light glass morphism */\n    --glass: 0 0% 100% / 0.8;\n    --glass-border: 220 13% 91%;\n    --glass-shadow: 220 43% 11% / 0.1;\n    --glass-subtle: 0 0% 100% / 0.6;\n\n    --card: 0 0% 100%;\n    --card-foreground: 220 9% 9%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 220 9% 9%;\n\n    /* Premium brand colors */\n    --primary: 220 91% 56%;\n    --primary-foreground: 0 0% 100%;\n    --primary-glow: 220 100% 70%;\n    --primary-subtle: 220 91% 56% / 0.1;\n\n    --secondary: 220 14% 96%;\n    --secondary-foreground: 220 9% 9%;\n\n    --muted: 220 14% 96%;\n    --muted-foreground: 220 8% 46%;\n\n    --accent: 220 14% 96%;\n    --accent-foreground: 220 9% 9%;\n\n    --destructive: 0 84% 60%;\n    --destructive-foreground: 0 0% 98%;\n\n    --success: 142 71% 45%;\n    --success-foreground: 0 0% 98%;\n    --success-subtle: 142 71% 45% / 0.1;\n\n    --warning: 38 92% 50%;\n    --warning-foreground: 0 0% 98%;\n    --warning-subtle: 38 92% 50% / 0.1;\n\n    --border: 220 13% 91%;\n    --input: 220 13% 91%;\n    --ring: 220 91% 56%;\n\n    --radius: 20px;\n\n    /* Premium gradients */\n    --gradient-primary: linear-gradient(135deg, hsl(220 91% 56%), hsl(220 100% 70%));\n    --gradient-glass: linear-gradient(135deg, hsl(0 0% 100% / 0.25), hsl(0 0% 100% / 0.05));\n    --gradient-hero: linear-gradient(135deg, hsl(220 91% 56% / 0.1), hsl(220 100% 70% / 0.05));\n    --gradient-mesh: radial-gradient(at 40% 20%, hsl(220 91% 56% / 0.3) 0px, transparent 50%),\n                     radial-gradient(at 80% 0%, hsl(220 100% 70% / 0.2) 0px, transparent 50%),\n                     radial-gradient(at 0% 50%, hsl(220 91% 56% / 0.2) 0px, transparent 50%);\n\n    /* Premium shadows */\n    --shadow-glass: 0 8px 32px hsl(220 43% 11% / 0.12);\n    --shadow-elevated: 0 20px 25px -5px hsl(220 43% 11% / 0.1), 0 10px 10px -5px hsl(220 43% 11% / 0.04);\n    --shadow-glow: 0 0 40px hsl(220 91% 56% / 0.4);\n    --shadow-premium: 0 25px 50px -12px hsl(220 43% 11% / 0.25);\n\n    /* Animation timing */\n    --transition-base: 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n    --transition-smooth: 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    --transition-spring: 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);\n\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n\n    /* Aurora colors for light mode */\n    --aurora-primary: 99 102 241;\n    --aurora-secondary: 236 72 153;\n    --aurora-tertiary: 20 184 166;\n    \n    /* Professional fade gradients */\n    --fade-gradient-bottom: linear-gradient(to bottom, rgba(255,255,255,1) 0%, rgba(255,255,255,1) calc(100% - 300px), rgba(255,255,255,0) 100%);\n    --fade-gradient-top: linear-gradient(to bottom, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 300px, rgba(255,255,255,1) 100%);\n    --fade-gradient-both: linear-gradient(to bottom, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 300px, rgba(255,255,255,1) calc(100% - 300px), rgba(255,255,255,0) 100%);\n  }\n\n  .dark {\n    /* StackStage Dark Mode - Default */\n    --background: 222 47% 2%;\n    --foreground: 210 40% 98%;\n\n    /* Apple-grade glass morphism */\n    --glass: 0 0% 100% / 0.05;\n    --glass-border: 0 0% 100% / 0.1;\n    --glass-shadow: 0 0% 0% / 0.5;\n    --glass-subtle: 0 0% 100% / 0.03;\n\n    --card: 222 47% 4%;\n    --card-foreground: 210 40% 98%;\n\n    --popover: 222 47% 4%;\n    --popover-foreground: 210 40% 98%;\n\n    /* Premium brand colors - Apple-inspired */\n    --primary: 220 91% 65%;\n    --primary-foreground: 222 47% 2%;\n    --primary-glow: 220 100% 75%;\n    --primary-subtle: 220 91% 65% / 0.1;\n\n    --secondary: 222 47% 8%;\n    --secondary-foreground: 210 40% 98%;\n\n    --muted: 222 47% 6%;\n    --muted-foreground: 215 20% 65%;\n\n    --accent: 222 47% 8%;\n    --accent-foreground: 210 40% 98%;\n\n    --destructive: 0 62% 50%;\n    --destructive-foreground: 210 40% 98%;\n\n    --success: 142 71% 45%;\n    --success-foreground: 210 40% 98%;\n    --success-subtle: 142 71% 45% / 0.1;\n\n    --warning: 38 92% 50%;\n    --warning-foreground: 210 40% 98%;\n    --warning-subtle: 38 92% 50% / 0.1;\n\n    --border: 0 0% 100% / 0.1;\n    --input: 0 0% 100% / 0.1;\n    --ring: 220 91% 65%;\n\n    --radius: 20px;\n\n    /* Apple design tokens */\n    --steel: 220 9% 85%;\n    --slate: 220 14% 71%;\n    --graphite: 220 9% 20%;\n\n    /* Premium gradients */\n    --gradient-primary: linear-gradient(135deg, hsl(220 91% 65%), hsl(220 100% 75%));\n    --gradient-glass: linear-gradient(135deg, hsl(0 0% 100% / 0.1), hsl(0 0% 100% / 0.05));\n    --gradient-hero: linear-gradient(135deg, hsl(220 91% 65% / 0.2), hsl(220 100% 75% / 0.1));\n    --gradient-mesh: radial-gradient(at 40% 20%, hsl(220 91% 65% / 0.3) 0px, transparent 50%),\n                     radial-gradient(at 80% 0%, hsl(220 100% 75% / 0.2) 0px, transparent 50%),\n                     radial-gradient(at 0% 50%, hsl(220 91% 65% / 0.2) 0px, transparent 50%);\n\n    /* Apple-grade shadows */\n    --shadow-glass: 0 8px 32px hsl(0 0% 0% / 0.3);\n    --shadow-elevated: 0 20px 25px -5px hsl(0 0% 0% / 0.2), 0 10px 10px -5px hsl(0 0% 0% / 0.1);\n    --shadow-glow: 0 0 40px hsl(220 91% 65% / 0.5);\n    --shadow-premium: 0 25px 50px -12px hsl(0 0% 0% / 0.4);\n\n    /* Smooth animations */\n    --transition-base: 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n    --transition-smooth: 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    --transition-spring: 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);\n\n    --sidebar-background: 222 47% 3%;\n    --sidebar-foreground: 210 40% 98%;\n    --sidebar-primary: 220 91% 65%;\n    --sidebar-primary-foreground: 222 47% 2%;\n    --sidebar-accent: 222 47% 6%;\n    --sidebar-accent-foreground: 210 40% 98%;\n    --sidebar-border: 0 0% 100% / 0.1;\n    --sidebar-ring: 220 91% 65%;\n\n    /* Aurora colors for dark mode */\n    --aurora-primary: 99 102 241;\n    --aurora-secondary: 236 72 153;\n    --aurora-tertiary: 20 184 166;\n    \n    /* Professional fade gradients for dark mode */\n    --fade-gradient-bottom: linear-gradient(to bottom, rgba(5,8,21,1) 0%, rgba(5,8,21,1) calc(100% - 300px), rgba(5,8,21,0) 100%);\n    --fade-gradient-top: linear-gradient(to bottom, rgba(5,8,21,0) 0%, rgba(5,8,21,1) 300px, rgba(5,8,21,1) 100%);\n    --fade-gradient-both: linear-gradient(to bottom, rgba(5,8,21,0) 0%, rgba(5,8,21,1) 300px, rgba(5,8,21,1) calc(100% - 300px), rgba(5,8,21,0) 100%);\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n    font-feature-settings: \"cv02\", \"cv03\", \"cv04\", \"cv11\";\n    transition: background-color 0.3s ease, color 0.3s ease;\n  }\n\n  /* Smooth theme transitions */\n  * {\n    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;\n  }\n}\n\n@layer components {\n  .glass {\n    @apply backdrop-blur-xl rounded-2xl;\n    background-color: hsl(var(--glass));\n    border: 1px solid hsl(var(--glass-border));\n    box-shadow: var(--shadow-glass);\n  }\n\n  .glass-card {\n    @apply glass p-8;\n  }\n\n  .glass-subtle {\n    @apply backdrop-blur-lg rounded-xl;\n    background-color: hsl(var(--glass-subtle));\n    border: 1px solid hsl(var(--glass-border));\n    box-shadow: 0 4px 24px hsl(var(--glass-shadow) / 0.1);\n  }\n\n  .hero-glow {\n    background: var(--gradient-hero);\n  }\n\n  .mesh-bg {\n    background: var(--gradient-mesh);\n  }\n\n  .aurora-background {\n    will-change: transform, opacity;\n    backface-visibility: hidden;\n    transform: translateZ(0);\n  }\n  \n  /* Professional Aurora fade effects */\n  .aurora-fade-bottom {\n    mask-image: var(--fade-gradient-bottom);\n    -webkit-mask-image: var(--fade-gradient-bottom);\n  }\n  \n  .aurora-fade-top {\n    mask-image: var(--fade-gradient-top);\n    -webkit-mask-image: var(--fade-gradient-top);\n  }\n  \n  .aurora-fade-both {\n    mask-image: var(--fade-gradient-both);\n    -webkit-mask-image: var(--fade-gradient-both);\n  }\n\n  /* Ensure aurora renders behind all content */\n  .aurora-bg {\n    isolation: isolate;\n  }\n\n  /* Enhance glass effect to work beautifully with aurora */\n  .glass {\n    backdrop-filter: blur(24px) saturate(180%);\n  }\n\n  .glass-card {\n    backdrop-filter: blur(20px) saturate(160%);\n  }\n\n  .glass-subtle {\n    backdrop-filter: blur(16px) saturate(140%);\n  }\n\n  .text-gradient {\n    background: var(--gradient-primary);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n\n  .glow-on-hover {\n    transition: all var(--transition-smooth);\n  }\n\n  .glow-on-hover:hover {\n    box-shadow: var(--shadow-glow);\n    transform: translateY(-2px);\n  }\n\n  .premium-glow {\n    box-shadow: var(--shadow-premium);\n  }\n\n  .typewriter {\n    overflow: hidden;\n    border-right: 2px solid hsl(var(--primary));\n    white-space: nowrap;\n    animation: typewriter 3s steps(40, end), blink-caret 0.75s step-end infinite;\n  }\n\n  .fade-in-viewport {\n    opacity: 0;\n    transform: translateY(30px);\n    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .fade-in-viewport.in-view {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  .floating {\n    animation: floating 6s ease-in-out infinite;\n  }\n\n  .pulse-glow {\n    animation: pulse-glow 2s ease-in-out infinite;\n  }\n\n  /* Magic UI Components */\n  .aurora-bg {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    pointer-events: none;\n    z-index: 0;\n    background: linear-gradient(45deg, \n      hsla(var(--aurora-primary), 0.1), \n      hsla(var(--aurora-secondary), 0.1), \n      hsla(var(--aurora-tertiary), 0.1));\n    animation: aurora 15s ease-in-out infinite;\n  }\n\n  .magic-bento {\n    @apply rounded-2xl overflow-hidden relative;\n    background: rgba(255, 255, 255, 0.02);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(20px);\n    transition: all 0.3s ease;\n  }\n\n  .magic-bento:hover {\n    transform: translateY(-4px) scale(1.02);\n    box-shadow: 0 20px 40px rgba(99, 102, 241, 0.15);\n  }\n\n  .tilted-card {\n    perspective: 1000px;\n    transition: transform 0.3s ease;\n  }\n\n  .tilted-card:hover .card-inner {\n    transform: rotateY(12deg) rotateX(5deg);\n  }\n\n  .card-inner {\n    transform-style: preserve-3d;\n    transition: transform 0.3s ease;\n  }\n\n  .dock-container {\n    @apply fixed bottom-6 left-1/2 transform -translate-x-1/2 z-50;\n  }\n\n  .dock {\n    @apply flex items-end space-x-2 p-2 rounded-2xl backdrop-blur-xl bg-white/10 border border-white/20;\n  }\n\n  .dock-item {\n    @apply w-12 h-12 rounded-xl bg-white/10 flex items-center justify-center transition-all duration-300 hover:w-16 hover:h-16 cursor-pointer;\n  }\n}\n\n@layer utilities {\n  .animate-typewriter {\n    animation: typewriter 3s steps(40, end), blink-caret 0.75s step-end infinite;\n  }\n\n  .animate-fade-in-up {\n    animation: fadeInUp 0.6s ease-out;\n  }\n\n  .animate-fade-in-down {\n    animation: fadeInDown 0.6s ease-out;\n  }\n\n  .animate-scale-in {\n    animation: scaleIn 0.4s ease-out;\n  }\n\n  .animate-slide-in-left {\n    animation: slideInLeft 0.6s ease-out;\n  }\n\n  .animate-slide-in-right {\n    animation: slideInRight 0.6s ease-out;\n  }\n}\n\n@keyframes typewriter {\n  from { width: 0; }\n  to { width: 100%; }\n}\n\n@keyframes blink-caret {\n  from, to { border-color: transparent; }\n  50% { border-color: hsl(var(--primary)); }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes scaleIn {\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes floating {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes pulse-glow {\n  0%, 100% { \n    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);\n  }\n  50% { \n    box-shadow: 0 0 40px hsl(var(--primary) / 0.6);\n  }\n}\n\n@keyframes aurora {\n  0%, 100% {\n    transform: rotate(0deg) scale(1);\n    opacity: 0.7;\n  }\n  33% {\n    transform: rotate(120deg) scale(1.1);\n    opacity: 0.8;\n  }\n  66% {\n    transform: rotate(240deg) scale(0.9);\n    opacity: 0.6;\n  }\n}\n\n@keyframes tilt {\n  0%, 100% {\n    transform: rotateY(0deg) rotateX(0deg);\n  }\n  25% {\n    transform: rotateY(5deg) rotateX(2deg);\n  }\n  75% {\n    transform: rotateY(-5deg) rotateX(-2deg);\n  }\n}\n\n@keyframes magnetism {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}","size_bytes":13157},"client/src/main.tsx":{"content":"import { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\nimport '@fontsource/inter/400.css'\nimport '@fontsource/inter/500.css'\nimport '@fontsource/inter/600.css'\nimport '@fontsource/inter/700.css'\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":298},"client/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-theme.tsx":{"content":"import React, { createContext, useContext, useEffect, useState } from 'react';\n\ntype Theme = 'dark' | 'light';\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: 'dark',\n  setTheme: () => null,\n  toggleTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = 'dark',\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem('stackstage-theme') as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (newTheme: Theme) => {\n      localStorage.setItem('stackstage-theme', newTheme);\n      setTheme(newTheme);\n    },\n    toggleTheme: () => {\n      const newTheme = theme === 'dark' ? 'light' : 'dark';\n      localStorage.setItem('stackstage-theme', newTheme);\n      setTheme(newTheme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error('useTheme must be used within a ThemeProvider');\n\n  return context;\n};","size_bytes":1574},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Analyze.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { \n  Upload, \n  Cloud, \n  FileText, \n  Zap, \n  ArrowRight,\n  AlertCircle,\n  CheckCircle,\n  Loader2,\n  Shield,\n  BarChart3,\n  Settings,\n  Globe,\n  Database,\n  Server,\n  Lock,\n  Eye,\n  TrendingUp,\n  Activity,\n  Clock,\n  Users,\n  Cpu,\n  HardDrive,\n  Network,\n  DollarSign,\n  AlertTriangle,\n  Info,\n  Star,\n  Sparkles,\n  Crown\n} from \"lucide-react\";\n\nconst Analyze = () => {\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [cloudProvider, setCloudProvider] = useState(\"\");\n  const [cloudConnect, setCloudConnect] = useState(false);\n  const [textInput, setTextInput] = useState(\"\");\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisProgress, setAnalysisProgress] = useState(0);\n  const [currentStep, setCurrentStep] = useState(\"upload\");\n  const [dragActive, setDragActive] = useState(false);\n  const [validationResults, setValidationResults] = useState<any>(null);\n  const [activeTab, setActiveTab] = useState(\"upload\");\n  const [analysisMode, setAnalysisMode] = useState(\"comprehensive\");\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n    setSelectedFiles(files);\n    // Simulate validation\n    if (files.length > 0) {\n      setTimeout(() => {\n        setValidationResults({\n          totalFiles: files.length,\n          validFiles: files.length - 1,\n          errors: files.length > 3 ? 1 : 0,\n          warnings: files.length > 1 ? 2 : 0\n        });\n      }, 1000);\n    }\n  };\n\n  const handleDrag = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    if (e.dataTransfer.files) {\n      const files = Array.from(e.dataTransfer.files);\n      setSelectedFiles(files);\n    }\n  };\n\n  const handleAnalyze = async () => {\n    setIsAnalyzing(true);\n    setAnalysisProgress(0);\n    setCurrentStep(\"validating\");\n\n    // Simulate progressive analysis steps\n    const steps = [\n      { step: \"validating\", progress: 20, delay: 800 },\n      { step: \"parsing\", progress: 40, delay: 1200 },\n      { step: \"analyzing\", progress: 70, delay: 1500 },\n      { step: \"optimizing\", progress: 90, delay: 1000 },\n      { step: \"complete\", progress: 100, delay: 500 }\n    ];\n\n    for (const { step, progress, delay } of steps) {\n      setTimeout(() => {\n        setCurrentStep(step);\n        setAnalysisProgress(progress);\n      }, delay);\n    }\n\n    setTimeout(() => {\n      setIsAnalyzing(false);\n      window.location.href = \"/results\";\n    }, 5000);\n  };\n\n  useEffect(() => {\n    // Simulate real-time validation for text input\n    if (textInput.trim()) {\n      const timer = setTimeout(() => {\n        setValidationResults({\n          syntax: \"valid\",\n          resources: Math.floor(Math.random() * 15) + 5,\n          issues: Math.floor(Math.random() * 3),\n          estimatedCost: \"$\" + (Math.random() * 500 + 100).toFixed(0)\n        });\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [textInput]);\n\n  const cloudProviders = [\n    { value: \"aws\", label: \"Amazon Web Services\", icon: \"☁️\", color: \"orange\" },\n    { value: \"gcp\", label: \"Google Cloud Platform\", icon: \"🌐\", color: \"blue\" },\n    { value: \"azure\", label: \"Microsoft Azure\", icon: \"⚡\", color: \"cyan\" },\n    { value: \"alibaba\", label: \"Alibaba Cloud\", icon: \"🚀\", color: \"orange\" },\n    { value: \"hybrid\", label: \"Multi-Cloud/Hybrid\", icon: \"🔗\", color: \"purple\" }\n  ];\n\n  const analysisTypes = [\n    { \n      id: \"quick\", \n      name: \"Quick Scan\", \n      time: \"~2 mins\", \n      features: [\"Basic security\", \"Cost overview\", \"Resource inventory\"],\n      icon: Zap,\n      color: \"green\"\n    },\n    { \n      id: \"comprehensive\", \n      name: \"Comprehensive\", \n      time: \"~5 mins\", \n      features: [\"Deep security analysis\", \"Performance optimization\", \"Compliance checks\", \"Cost optimization\"],\n      icon: Shield,\n      color: \"blue\"\n    },\n    { \n      id: \"enterprise\", \n      name: \"Enterprise Plus\", \n      time: \"~10 mins\", \n      features: [\"Everything in Comprehensive\", \"Custom policies\", \"Governance analysis\", \"Risk assessment\"],\n      icon: Star,\n      color: \"purple\",\n      badge: \"Premium\"\n    }\n  ];\n\n  const getAnalysisStepMessage = (step: string) => {\n    switch(step) {\n      case \"validating\": return \"Validating infrastructure files...\";\n      case \"parsing\": return \"Parsing configuration syntax...\";\n      case \"analyzing\": return \"Running security & cost analysis...\";\n      case \"optimizing\": return \"Generating optimization recommendations...\";\n      case \"complete\": return \"Analysis complete!\";\n      default: return \"Initializing analysis...\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen relative flex flex-col\">\n      <Header />\n      \n      {/* Aurora Background with smooth fade */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.4} \n          speed={1.2} \n          className=\"aurora-background\"\n          fadeHeight={300}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n      \n      <main className=\"relative flex-1 pt-24 pb-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Hero Section */}\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Badge variant=\"outline\" className=\"mb-6 px-4 py-2\">\n              <Sparkles className=\"w-4 h-4 mr-2\" />\n              Enterprise-Grade Analysis\n            </Badge>\n            <h1 className=\"text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-primary to-primary-glow bg-clip-text text-transparent leading-tight\">\n              Analyze Your \n              <span className=\"block\">Cloud Architecture</span>\n            </h1>\n            <p className=\"text-xl md:text-2xl text-muted-foreground max-w-4xl mx-auto leading-normal py-2\">\n              Upload infrastructure files, connect cloud providers, or paste configurations \n              for AI-powered security analysis, cost optimization, and compliance checking.\n            </p>\n            \n            {/* Live Stats */}\n            <motion.div \n              className=\"flex flex-wrap justify-center gap-8 mt-12 mb-8\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-primary\">50K+</div>\n                <div className=\"text-sm text-muted-foreground\">Analyses Completed</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-green-500\">$2.4M</div>\n                <div className=\"text-sm text-muted-foreground\">Cost Savings Identified</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-orange-500\">99.9%</div>\n                <div className=\"text-sm text-muted-foreground\">Accuracy Rate</div>\n              </div>\n            </motion.div>\n          </motion.div>\n\n          {/* Analysis Mode Selection */}\n          <motion.div \n            className=\"mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n          >\n            <Card className=\"glass-card border-primary/20\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Settings className=\"w-5 h-5 text-primary\" />\n                  <span>Choose Analysis Type</span>\n                </CardTitle>\n                <CardDescription>\n                  Select the depth of analysis based on your needs\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  {analysisTypes.map((type) => (\n                    <motion.div\n                      key={type.id}\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                    >\n                      <Card \n                        className={`cursor-pointer transition-all duration-300 relative ${\n                          analysisMode === type.id \n                            ? 'ring-2 ring-primary shadow-xl bg-primary/5' \n                            : 'hover:shadow-lg'\n                        }`}\n                        onClick={() => setAnalysisMode(type.id)}\n                      >\n                        {type.badge && (\n                          <div className=\"absolute -top-2 -right-2\">\n                            <Badge variant=\"default\" className=\"bg-gradient-to-r from-purple-500 to-purple-600 text-white\">\n                              {type.badge}\n                            </Badge>\n                          </div>\n                        )}\n                        <CardContent className=\"p-6\">\n                          <div className=\"flex items-center space-x-3 mb-4\">\n                            <div className={`w-10 h-10 rounded-lg flex items-center justify-center bg-${type.color}-500/20`}>\n                              <type.icon className={`w-5 h-5 text-${type.color}-500`} />\n                            </div>\n                            <div>\n                              <h3 className=\"font-semibold\">{type.name}</h3>\n                              <p className=\"text-sm text-muted-foreground\">{type.time}</p>\n                            </div>\n                          </div>\n                          <ul className=\"space-y-2\">\n                            {type.features.map((feature, index) => (\n                              <li key={index} className=\"flex items-center text-sm\">\n                                <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\n                                {feature}\n                              </li>\n                            ))}\n                          </ul>\n                        </CardContent>\n                      </Card>\n                    </motion.div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Main Analysis Interface */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <Card className=\"glass-card border-primary/20\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Upload className=\"w-5 h-5 text-primary\" />\n                  <span>Infrastructure Analysis</span>\n                </CardTitle>\n                <CardDescription>\n                  Multiple ways to analyze your cloud infrastructure\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n                  <TabsList className=\"grid w-full grid-cols-3\">\n                    <TabsTrigger value=\"upload\">File Upload</TabsTrigger>\n                    <TabsTrigger value=\"paste\">Paste Code</TabsTrigger>\n                    <TabsTrigger value=\"connect\">Cloud Connect</TabsTrigger>\n                  </TabsList>\n                  \n                  <TabsContent value=\"upload\" className=\"space-y-6 mt-6\">\n                    {/* Enhanced File Upload */}\n                    <div \n                      className={`border-2 border-dashed rounded-xl p-12 text-center transition-all duration-300 ${\n                        dragActive \n                          ? 'border-primary bg-primary/5 scale-105' \n                          : 'border-border hover:border-primary/50'\n                      }`}\n                      onDragEnter={handleDrag}\n                      onDragLeave={handleDrag}\n                      onDragOver={handleDrag}\n                      onDrop={handleDrop}\n                    >\n                      <input\n                        type=\"file\"\n                        multiple\n                        accept=\".tf,.yaml,.yml,.json,.hcl,.py,.js,.ts\"\n                        onChange={handleFileUpload}\n                        className=\"hidden\"\n                        id=\"file-upload\"\n                      />\n                      <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n                        <motion.div\n                          whileHover={{ scale: 1.1 }}\n                          whileTap={{ scale: 0.9 }}\n                        >\n                          <Upload className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n                        </motion.div>\n                        <h3 className=\"text-2xl font-semibold text-foreground mb-3\">\n                          Drop files here or click to upload\n                        </h3>\n                        <p className=\"text-muted-foreground mb-4\">\n                          Supports Terraform, CloudFormation, Kubernetes, Docker, and more\n                        </p>\n                        <div className=\"flex flex-wrap justify-center gap-2\">\n                          {[\".tf\", \".yaml\", \".json\", \".hcl\", \".py\", \".js\", \".ts\", \".docker\"].map((ext) => (\n                            <Badge key={ext} variant=\"outline\" className=\"text-xs\">\n                              {ext}\n                            </Badge>\n                          ))}\n                        </div>\n                      </label>\n                    </div>\n\n                    {/* File Analysis Results */}\n                    <AnimatePresence>\n                      {selectedFiles.length > 0 && (\n                        <motion.div\n                          initial={{ opacity: 0, height: 0 }}\n                          animate={{ opacity: 1, height: \"auto\" }}\n                          exit={{ opacity: 0, height: 0 }}\n                          className=\"space-y-4\"\n                        >\n                          <div className=\"flex items-center justify-between\">\n                            <h4 className=\"font-semibold text-foreground\">Uploaded Files</h4>\n                            {validationResults && (\n                              <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-300\">\n                                <CheckCircle className=\"w-3 h-3 mr-1\" />\n                                Validated\n                              </Badge>\n                            )}\n                          </div>\n                          \n                          <div className=\"grid gap-3\">\n                            {selectedFiles.map((file, index) => (\n                              <motion.div\n                                key={index}\n                                initial={{ opacity: 0, x: -20 }}\n                                animate={{ opacity: 1, x: 0 }}\n                                transition={{ delay: index * 0.1 }}\n                                className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg border\"\n                              >\n                                <div className=\"flex items-center space-x-3\">\n                                  <FileText className=\"w-5 h-5 text-primary\" />\n                                  <div>\n                                    <span className=\"font-medium\">{file.name}</span>\n                                    <p className=\"text-sm text-muted-foreground\">\n                                      {(file.size / 1024).toFixed(1)} KB\n                                    </p>\n                                  </div>\n                                </div>\n                                <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                              </motion.div>\n                            ))}\n                          </div>\n\n                          {/* Validation Summary */}\n                          {validationResults && (\n                            <Card className=\"bg-gradient-to-r from-green-50 to-blue-50 border-green-200\">\n                              <CardContent className=\"p-4\">\n                                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n                                  <div>\n                                    <div className=\"text-2xl font-bold text-green-600\">{validationResults.totalFiles}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Total Files</div>\n                                  </div>\n                                  <div>\n                                    <div className=\"text-2xl font-bold text-blue-600\">{validationResults.validFiles}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Valid Files</div>\n                                  </div>\n                                  <div>\n                                    <div className=\"text-2xl font-bold text-orange-600\">{validationResults.warnings}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Warnings</div>\n                                  </div>\n                                  <div>\n                                    <div className=\"text-2xl font-bold text-red-600\">{validationResults.errors}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Errors</div>\n                                  </div>\n                                </div>\n                              </CardContent>\n                            </Card>\n                          )}\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </TabsContent>\n\n                  <TabsContent value=\"paste\" className=\"space-y-6 mt-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <Label htmlFor=\"config-input\" className=\"text-lg font-medium\">Infrastructure Configuration</Label>\n                        {textInput.trim() && validationResults && (\n                          <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700 border-blue-300\">\n                            <Activity className=\"w-3 h-3 mr-1\" />\n                            Live Analysis\n                          </Badge>\n                        )}\n                      </div>\n                      \n                      <Textarea\n                        id=\"config-input\"\n                        placeholder={`# Paste your infrastructure code here - supports multiple formats:\n\n# Terraform\nresource \"aws_instance\" \"web_server\" {\n  ami           = \"ami-12345678\"\n  instance_type = \"t3.medium\"\n  \n  vpc_security_group_ids = [aws_security_group.web.id]\n  \n  tags = {\n    Name = \"Production-WebServer\"\n    Environment = \"production\"\n  }\n}\n\n# CloudFormation, Kubernetes YAML, Docker Compose also supported...`}\n                        value={textInput}\n                        onChange={(e) => setTextInput(e.target.value)}\n                        className=\"min-h-[400px] font-mono text-sm resize-none\"\n                      />\n                      \n                      {/* Real-time Analysis Preview */}\n                      <AnimatePresence>\n                        {textInput.trim() && validationResults && (\n                          <motion.div\n                            initial={{ opacity: 0, y: 20 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            exit={{ opacity: 0, y: -20 }}\n                          >\n                            <Card className=\"bg-gradient-to-r from-blue-50 to-purple-50 border-blue-200\">\n                              <CardHeader className=\"pb-3\">\n                                <CardTitle className=\"flex items-center text-lg\">\n                                  <Eye className=\"w-5 h-5 mr-2 text-blue-600\" />\n                                  Live Analysis Preview\n                                </CardTitle>\n                              </CardHeader>\n                              <CardContent className=\"pt-0\">\n                                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                                  <div className=\"text-center\">\n                                    <Server className=\"w-6 h-6 mx-auto mb-2 text-blue-600\" />\n                                    <div className=\"text-xl font-bold\">{validationResults.resources}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Resources</div>\n                                  </div>\n                                  <div className=\"text-center\">\n                                    <Shield className=\"w-6 h-6 mx-auto mb-2 text-green-600\" />\n                                    <div className=\"text-xl font-bold\">{validationResults.syntax}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Syntax</div>\n                                  </div>\n                                  <div className=\"text-center\">\n                                    <AlertTriangle className=\"w-6 h-6 mx-auto mb-2 text-orange-600\" />\n                                    <div className=\"text-xl font-bold\">{validationResults.issues}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Issues</div>\n                                  </div>\n                                  <div className=\"text-center\">\n                                    <DollarSign className=\"w-6 h-6 mx-auto mb-2 text-purple-600\" />\n                                    <div className=\"text-xl font-bold\">{validationResults.estimatedCost}</div>\n                                    <div className=\"text-xs text-muted-foreground\">Est. Cost/mo</div>\n                                  </div>\n                                </div>\n                              </CardContent>\n                            </Card>\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"connect\" className=\"space-y-6 mt-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      {/* Cloud Provider Selection */}\n                      <div className=\"space-y-4\">\n                        <Label className=\"text-lg font-medium\">Cloud Provider</Label>\n                        <Select value={cloudProvider} onValueChange={setCloudProvider}>\n                          <SelectTrigger className=\"h-12\">\n                            <SelectValue placeholder=\"Select cloud provider\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {cloudProviders.map((provider) => (\n                              <SelectItem key={provider.value} value={provider.value}>\n                                <div className=\"flex items-center space-x-2\">\n                                  <span>{provider.icon}</span>\n                                  <span>{provider.label}</span>\n                                </div>\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      {/* Direct Connect Toggle */}\n                      <div className=\"space-y-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"cloud-connect\" className=\"text-lg font-medium\">\n                            Direct Cloud Connection\n                          </Label>\n                          <Switch\n                            id=\"cloud-connect\"\n                            checked={cloudConnect}\n                            onCheckedChange={setCloudConnect}\n                          />\n                        </div>\n                        \n                        <AnimatePresence>\n                          {cloudConnect && (\n                            <motion.div\n                              initial={{ opacity: 0, height: 0 }}\n                              animate={{ opacity: 1, height: \"auto\" }}\n                              exit={{ opacity: 0, height: 0 }}\n                              className=\"space-y-4\"\n                            >\n                              <Card className=\"bg-gradient-to-r from-purple-50 to-pink-50 border-purple-200\">\n                                <CardContent className=\"p-6\">\n                                  <div className=\"flex items-center space-x-3 mb-4\">\n                                    <div className=\"w-8 h-8 bg-purple-500/20 rounded-lg flex items-center justify-center\">\n                                      <Crown className=\"w-4 h-4 text-purple-600\" />\n                                    </div>\n                                    <div>\n                                      <h3 className=\"font-semibold text-purple-900\">Enterprise Feature</h3>\n                                      <p className=\"text-sm text-purple-700\">Real-time cloud scanning</p>\n                                    </div>\n                                  </div>\n                                  <ul className=\"space-y-2 text-sm text-purple-800\">\n                                    <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 mr-2 text-purple-600\" /> Live infrastructure discovery</li>\n                                    <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 mr-2 text-purple-600\" /> Real-time cost monitoring</li>\n                                    <li className=\"flex items-center\"><CheckCircle className=\"w-4 h-4 mr-2 text-purple-600\" /> Continuous compliance scanning</li>\n                                  </ul>\n                                  <Button variant=\"outline\" size=\"sm\" className=\"mt-4 border-purple-300 text-purple-700 hover:bg-purple-100\">\n                                    <Link href=\"/pricing\">Upgrade to Enterprise</Link>\n                                  </Button>\n                                </CardContent>\n                              </Card>\n                            </motion.div>\n                          )}\n                        </AnimatePresence>\n                      </div>\n                    </div>\n                  </TabsContent>\n                </Tabs>\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Analysis Control Panel */}\n          <motion.div\n            className=\"mt-8\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.5 }}\n          >\n            <Card className=\"glass-card border-primary/30\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Cpu className=\"w-5 h-5 text-primary\" />\n                  <span>Analysis Control Center</span>\n                </CardTitle>\n                <CardDescription>\n                  Configure and launch your infrastructure analysis\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                {/* Analysis Progress */}\n                <AnimatePresence>\n                  {isAnalyzing && (\n                    <motion.div\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: \"auto\" }}\n                      exit={{ opacity: 0, height: 0 }}\n                      className=\"space-y-4\"\n                    >\n                      <div className=\"text-center\">\n                        <h3 className=\"text-lg font-semibold mb-2\">\n                          {getAnalysisStepMessage(currentStep)}\n                        </h3>\n                        <Progress value={analysisProgress} className=\"w-full h-3\" />\n                        <p className=\"text-sm text-muted-foreground mt-2\">\n                          {analysisProgress}% Complete\n                        </p>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                        <div className=\"text-center\">\n                          <Activity className=\"w-6 h-6 mx-auto mb-2 text-blue-500\" />\n                          <div className=\"text-sm font-medium\">CPU Usage</div>\n                          <div className=\"text-xs text-muted-foreground\">High</div>\n                        </div>\n                        <div className=\"text-center\">\n                          <HardDrive className=\"w-6 h-6 mx-auto mb-2 text-green-500\" />\n                          <div className=\"text-sm font-medium\">Memory</div>\n                          <div className=\"text-xs text-muted-foreground\">Optimal</div>\n                        </div>\n                        <div className=\"text-center\">\n                          <Network className=\"w-6 h-6 mx-auto mb-2 text-orange-500\" />\n                          <div className=\"text-sm font-medium\">Network</div>\n                          <div className=\"text-xs text-muted-foreground\">Active</div>\n                        </div>\n                        <div className=\"text-center\">\n                          <Clock className=\"w-6 h-6 mx-auto mb-2 text-purple-500\" />\n                          <div className=\"text-sm font-medium\">ETA</div>\n                          <div className=\"text-xs text-muted-foreground\">2 min</div>\n                        </div>\n                      </div>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n\n                {/* Launch Analysis Button */}\n                {!isAnalyzing && (\n                  <div className=\"text-center space-y-4\">\n                    <motion.div\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <Button\n                        onClick={handleAnalyze}\n                        disabled={!selectedFiles.length && !textInput.trim() && !cloudConnect}\n                        className=\"px-12 py-4 text-lg font-semibold text-white drop-shadow-sm [&>*]:text-white [&]:text-white\"\n                        style={{ color: '#ffffff !important' }}\n                        size=\"lg\"\n                        variant=\"hero\"\n                      >\n                        <Zap className=\"mr-3 w-6 h-6\" />\n                        Launch {analysisTypes.find(t => t.id === analysisMode)?.name} Analysis\n                        <ArrowRight className=\"ml-3 w-6 h-6\" />\n                      </Button>\n                    </motion.div>\n                    \n                    <p className=\"text-sm text-muted-foreground\">\n                      Estimated time: {analysisTypes.find(t => t.id === analysisMode)?.time}\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Advanced Features Grid */}\n          <motion.div\n            className=\"mt-16\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n          >\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4\">Enterprise-Grade Features</h2>\n              <p className=\"text-muted-foreground text-lg\">\n                Professional cloud analysis tools trusted by leading organizations\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <motion.div whileHover={{ y: -5 }}>\n                <Card className=\"glass border-green-500/20 h-full\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"w-10 h-10 bg-green-500/20 rounded-xl flex items-center justify-center\">\n                        <Lock className=\"w-5 h-5 text-green-500\" />\n                      </div>\n                      <h3 className=\"font-semibold\">Enterprise Security</h3>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      SOC 2 compliant with end-to-end encryption and zero data retention.\n                    </p>\n                    <ul className=\"text-xs space-y-1\">\n                      <li>• Zero-trust architecture</li>\n                      <li>• GDPR compliant</li>\n                      <li>• Regular security audits</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              <motion.div whileHover={{ y: -5 }}>\n                <Card className=\"glass border-blue-500/20 h-full\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"w-10 h-10 bg-blue-500/20 rounded-xl flex items-center justify-center\">\n                        <TrendingUp className=\"w-5 h-5 text-blue-500\" />\n                      </div>\n                      <h3 className=\"font-semibold\">AI-Powered Insights</h3>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      Machine learning algorithms provide intelligent optimization recommendations.\n                    </p>\n                    <ul className=\"text-xs space-y-1\">\n                      <li>• Predictive cost analysis</li>\n                      <li>• Smart resource rightsizing</li>\n                      <li>• Anomaly detection</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              <motion.div whileHover={{ y: -5 }}>\n                <Card className=\"glass border-purple-500/20 h-full\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"w-10 h-10 bg-purple-500/20 rounded-xl flex items-center justify-center\">\n                        <BarChart3 className=\"w-5 h-5 text-purple-500\" />\n                      </div>\n                      <h3 className=\"font-semibold\">Real-time Analytics</h3>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      Live monitoring with instant alerts and comprehensive dashboards.\n                    </p>\n                    <ul className=\"text-xs space-y-1\">\n                      <li>• Custom dashboards</li>\n                      <li>• Slack/Teams integration</li>\n                      <li>• API webhooks</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              <motion.div whileHover={{ y: -5 }}>\n                <Card className=\"glass border-orange-500/20 h-full\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"w-10 h-10 bg-orange-500/20 rounded-xl flex items-center justify-center\">\n                        <Users className=\"w-5 h-5 text-orange-500\" />\n                      </div>\n                      <h3 className=\"font-semibold\">Team Collaboration</h3>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      Share analysis results with role-based access and commenting system.\n                    </p>\n                    <ul className=\"text-xs space-y-1\">\n                      <li>• Role-based permissions</li>\n                      <li>• Export to PDF/Excel</li>\n                      <li>• Version control integration</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n          </motion.div>\n\n          {/* Trust Indicators */}\n          <motion.div\n            className=\"mt-16 text-center\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.7 }}\n          >\n            <Card className=\"glass-card bg-gradient-to-r from-primary/5 to-purple/5 border-primary/20\">\n              <CardContent className=\"p-8\">\n                <h3 className=\"text-2xl font-bold mb-6\">Trusted by Industry Leaders</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-6 gap-8 items-center\">\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-primary\">99.9%</div>\n                    <div className=\"text-sm text-muted-foreground\">Uptime SLA</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-green-500\">SOC 2</div>\n                    <div className=\"text-sm text-muted-foreground\">Compliant</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-blue-500\">500+</div>\n                    <div className=\"text-sm text-muted-foreground\">Enterprise Clients</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-purple-500\">24/7</div>\n                    <div className=\"text-sm text-muted-foreground\">Expert Support</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-orange-500\">5M+</div>\n                    <div className=\"text-sm text-muted-foreground\">Resources Analyzed</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-red-500\">ISO</div>\n                    <div className=\"text-sm text-muted-foreground\">27001 Certified</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </main>\n\n      <div className=\"relative\">\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Analyze;","size_bytes":39608},"client/src/pages/Diagram.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport TiltedCard from \"@/components/ui/tilted-card\";\nimport { \n  Download, \n  ZoomIn, \n  ZoomOut, \n  RotateCcw,\n  Maximize2,\n  Eye,\n  EyeOff,\n  Share2,\n  Copy,\n  CheckCircle\n} from \"lucide-react\";\n\nconst Diagram = () => {\n  const [viewMode, setViewMode] = useState<\"all\" | \"problems\">(\"all\");\n  const [zoomLevel, setZoomLevel] = useState(100);\n  const [copied, setCopied] = useState(false);\n\n  const diagramCode = `\ngraph TB\n    subgraph \"VPC: 10.0.0.0/16\"\n        subgraph \"Public Subnet: 10.0.1.0/24\"\n            ALB[Application Load Balancer]\n            NAT[NAT Gateway]\n        end\n        \n        subgraph \"Private Subnet: 10.0.2.0/24\"\n            EC2_1[EC2 Instance 1<br/>t3.large]\n            EC2_2[EC2 Instance 2<br/>t3.large]\n            EC2_3[EC2 Instance 3<br/>t3.large]\n        end\n        \n        subgraph \"Database Subnet: 10.0.3.0/24\"\n            RDS[(RDS MySQL<br/>db.r5.large)]\n        end\n        \n        subgraph \"Storage\"\n            S3[S3 Bucket<br/>Public Read]\n            EBS1[EBS Volume<br/>Unattached]\n            EBS2[EBS Volume<br/>Unattached]\n        end\n    end\n    \n    subgraph \"CDN\"\n        CF[CloudFront<br/>Not Configured]\n    end\n    \n    Internet[Internet] --> ALB\n    ALB --> EC2_1\n    ALB --> EC2_2\n    ALB --> EC2_3\n    EC2_1 --> RDS\n    EC2_2 --> RDS\n    EC2_3 --> RDS\n    EC2_1 --> S3\n    EC2_2 --> S3\n    EC2_3 --> S3\n    Internet -.-> S3\n    CF -.-> S3\n    \n    %% Problem highlighting\n    classDef problem fill:#fef2f2,stroke:#ef4444,stroke-width:2px\n    classDef warning fill:#fefce8,stroke:#eab308,stroke-width:2px\n    classDef good fill:#f0fdf4,stroke:#22c55e,stroke-width:2px\n    \n    class S3,EBS1,EBS2 problem\n    class EC2_1,EC2_2,EC2_3,CF warning\n    class ALB,NAT,RDS good\n  `;\n\n  const copyDiagram = () => {\n    navigator.clipboard.writeText(diagramCode.trim());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const problems = [\n    { type: \"Critical\", count: 3, color: \"destructive\", items: [\"S3 Public Access\", \"Unattached EBS Volumes\"] },\n    { type: \"Warning\", count: 4, color: \"warning\", items: [\"Oversized EC2s\", \"Missing CloudFront\"] },\n    { type: \"Good\", count: 3, color: \"success\", items: [\"Load Balancer\", \"NAT Gateway\", \"RDS Setup\"] }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      <main className=\"pt-24 pb-16\">\n        <div className=\"max-w-screen-xl mx-auto px-6 md:px-20\">\n          {/* Header */}\n          <div className=\"text-center mb-8 space-y-6\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Architecture \n              <span className=\"text-gradient\"> Diagram</span>\n            </h1>\n            <p className=\"text-base text-muted-foreground max-w-3xl mx-auto\">\n              Visual representation of your cloud infrastructure with highlighted issues and recommendations.\n            </p>\n          </div>\n\n          {/* Controls */}\n          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 mb-8\">\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant={viewMode === \"all\" ? \"default\" : \"outline\"}\n                onClick={() => setViewMode(\"all\")}\n                size=\"sm\"\n              >\n                <Eye className=\"w-4 h-4 mr-2\" />\n                All Components\n              </Button>\n              <Button\n                variant={viewMode === \"problems\" ? \"default\" : \"outline\"}\n                onClick={() => setViewMode(\"problems\")}\n                size=\"sm\"\n              >\n                <EyeOff className=\"w-4 h-4 mr-2\" />\n                Problems Only\n              </Button>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setZoomLevel(Math.max(50, zoomLevel - 25))}\n                disabled={zoomLevel <= 50}\n              >\n                <ZoomOut className=\"w-4 h-4\" />\n              </Button>\n              <span className=\"text-sm font-medium min-w-[60px] text-center\">\n                {zoomLevel}%\n              </span>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setZoomLevel(Math.min(200, zoomLevel + 25))}\n                disabled={zoomLevel >= 200}\n              >\n                <ZoomIn className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setZoomLevel(100)}\n              >\n                <RotateCcw className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={copyDiagram}>\n                {copied ? (\n                  <CheckCircle className=\"w-4 h-4 mr-2 text-success\" />\n                ) : (\n                  <Copy className=\"w-4 h-4 mr-2\" />\n                )}\n                {copied ? \"Copied!\" : \"Copy Code\"}\n              </Button>\n              <Button variant=\"outline\" size=\"sm\">\n                <Download className=\"w-4 h-4 mr-2\" />\n                Export SVG\n              </Button>\n              <Button variant=\"outline\" size=\"sm\">\n                <Maximize2 className=\"w-4 h-4 mr-2\" />\n                Fullscreen\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n            {/* Diagram with Tilted Card */}\n            <div className=\"lg:col-span-3\">\n              <TiltedCard\n                captionText=\"Designed by StackStage AI\"\n                rotateAmplitude={8}\n                scaleOnHover={1.03}\n                displayOverlayContent={true}\n                overlayContent={\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">Diagram Controls</h3>\n                    <p className=\"text-sm opacity-90 mb-4\">\n                      Red = Critical Issues, Yellow = Warnings, Green = Healthy\n                    </p>\n                    <div className=\"flex flex-wrap justify-center gap-2\">\n                      <Button variant=\"outline\" size=\"sm\">\n                        <ZoomIn className=\"w-4 h-4 mr-2\" />\n                        Zoom\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\">\n                        <Download className=\"w-4 h-4 mr-2\" />\n                        Export\n                      </Button>\n                    </div>\n                  </div>\n                }\n              >\n                <div \n                  className=\"w-full overflow-auto border rounded-lg bg-white\"\n                  style={{ transform: `scale(${zoomLevel / 100})`, transformOrigin: 'top left' }}\n                >\n                  <div className=\"p-8 min-h-[600px] flex items-center justify-center\">\n                    {/* Mermaid Diagram Placeholder */}\n                    <div className=\"text-center space-y-4\">\n                      <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                        <Share2 className=\"w-8 h-8 text-primary\" />\n                      </div>\n                      <h3 className=\"text-xl font-semibold text-foreground\">\n                        Interactive Architecture Diagram\n                      </h3>\n                      <p className=\"text-muted-foreground max-w-md\">\n                        Your cloud infrastructure visualized with Mermaid.js. \n                        Red components indicate critical issues, yellow shows warnings.\n                      </p>\n                      <div className=\"bg-muted/20 rounded-lg p-4 text-left\">\n                        <pre className=\"text-xs text-muted-foreground whitespace-pre-wrap\">\n                          {diagramCode.trim()}\n                        </pre>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </TiltedCard>\n            </div>\n\n            {/* Legend & Stats */}\n            <div className=\"space-y-6\">\n              {/* Issue Summary */}\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Issue Summary</CardTitle>\n                  <CardDescription>\n                    Components grouped by status\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {problems.map((problem) => (\n                    <div key={problem.type} className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"font-medium\">{problem.type}</span>\n                        <Badge variant={problem.color as any}>\n                          {problem.count}\n                        </Badge>\n                      </div>\n                      <ul className=\"text-sm text-muted-foreground space-y-1\">\n                        {problem.items.map((item, index) => (\n                          <li key={index} className=\"pl-2\">• {item}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  ))}\n                </CardContent>\n              </Card>\n\n              {/* Legend */}\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Legend</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-4 h-4 bg-destructive/20 border-2 border-destructive rounded\"></div>\n                    <span className=\"text-sm\">Critical Issues</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-4 h-4 bg-warning/20 border-2 border-warning rounded\"></div>\n                    <span className=\"text-sm\">Warnings</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-4 h-4 bg-success/20 border-2 border-success rounded\"></div>\n                    <span className=\"text-sm\">Healthy</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-4 h-4 border-2 border-dashed border-muted-foreground rounded\"></div>\n                    <span className=\"text-sm\">Not Configured</span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Quick Actions */}\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Quick Actions</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\" asChild>\n                    <Link to=\"/results/fixes\">\n                      View All Fixes\n                    </Link>\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\" asChild>\n                    <Link to=\"/results/share\">\n                      Export Report\n                    </Link>\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\" asChild>\n                    <Link to=\"/assistant\">\n                      Ask AI Assistant\n                    </Link>\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"mt-12 text-center\">\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button variant=\"hero\" size=\"lg\" asChild>\n                <Link to=\"/results/fixes\">\n                  Fix Critical Issues\n                </Link>\n              </Button>\n              <Button variant=\"outline\" size=\"lg\" asChild>\n                <Link to=\"/results/share\">\n                  Share Diagram\n                </Link>\n              </Button>\n              <Button variant=\"outline\" size=\"lg\">\n                <Download className=\"mr-2 w-5 h-5\" />\n                Download PNG\n              </Button>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Diagram;","size_bytes":12931},"client/src/pages/Fixes.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  AlertTriangle, \n  Shield, \n  DollarSign, \n  Zap, \n  TrendingUp,\n  CheckCircle,\n  Copy,\n  ExternalLink,\n  Code,\n  Wrench,\n  Clock\n} from \"lucide-react\";\n\nconst Fixes = () => {\n  const [copiedIndex, setCopiedIndex] = useState<number | null>(null);\n\n  const fixes = [\n    {\n      category: \"Security\",\n      severity: \"high\",\n      icon: Shield,\n      color: \"destructive\",\n      issues: [\n        {\n          title: \"S3 Bucket Public Read Access\",\n          description: \"Your S3 bucket allows public read access which could expose sensitive data.\",\n          impact: \"Data breach risk, compliance violations\",\n          priority: \"Critical\",\n          timeToFix: \"5 minutes\",\n          code: `resource \"aws_s3_bucket_public_access_block\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}`,\n          language: \"terraform\"\n        },\n        {\n          title: \"RDS Instance Without Encryption\",\n          description: \"Database instance is not encrypted at rest, exposing sensitive data.\",\n          impact: \"Data confidentiality risk\",\n          priority: \"High\",\n          timeToFix: \"2 minutes\",\n          code: `resource \"aws_db_instance\" \"example\" {\n  # ... other configuration\n  \n  storage_encrypted = true\n  kms_key_id       = aws_kms_key.example.arn\n}`,\n          language: \"terraform\"\n        }\n      ]\n    },\n    {\n      category: \"Cost Optimization\",\n      severity: \"medium\",\n      icon: DollarSign,\n      color: \"warning\",\n      issues: [\n        {\n          title: \"Oversized EC2 Instances\",\n          description: \"Several EC2 instances are oversized for their current CPU utilization.\",\n          impact: \"Monthly cost savings: $450\",\n          priority: \"Medium\",\n          timeToFix: \"10 minutes\",\n          code: `resource \"aws_instance\" \"web\" {\n  ami           = \"ami-12345678\"\n  instance_type = \"t3.medium\"  # Changed from t3.large\n  \n  tags = {\n    Name        = \"WebServer\"\n    Environment = \"production\"\n  }\n}`,\n          language: \"terraform\"\n        },\n        {\n          title: \"Unused EBS Volumes\",\n          description: \"Found 3 unattached EBS volumes incurring unnecessary costs.\",\n          impact: \"Monthly savings: $120\",\n          priority: \"Low\",\n          timeToFix: \"5 minutes\",\n          code: `# Remove unused volumes or add lifecycle policy\nresource \"aws_ebs_volume\" \"data\" {\n  availability_zone = \"us-west-2a\"\n  size              = 40\n  type              = \"gp3\"  # More cost-effective than gp2\n  \n  tags = {\n    Name = \"data-volume\"\n  }\n}`,\n          language: \"terraform\"\n        }\n      ]\n    },\n    {\n      category: \"Performance\",\n      severity: \"low\",\n      icon: Zap,\n      color: \"success\",\n      issues: [\n        {\n          title: \"Missing CloudFront CDN\",\n          description: \"Static assets are served directly from S3 without CDN caching.\",\n          impact: \"40% faster page load times globally\",\n          priority: \"Medium\",\n          timeToFix: \"15 minutes\",\n          code: `resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n  origin {\n    domain_name = aws_s3_bucket.example.bucket_regional_domain_name\n    origin_id   = \"S3-example\"\n    \n    s3_origin_config {\n      origin_access_identity = aws_cloudfront_origin_access_identity.example.cloudfront_access_identity_path\n    }\n  }\n\n  enabled             = true\n  default_root_object = \"index.html\"\n\n  default_cache_behavior {\n    allowed_methods        = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n    cached_methods         = [\"GET\", \"HEAD\"]\n    target_origin_id       = \"S3-example\"\n    compress               = true\n    viewer_protocol_policy = \"redirect-to-https\"\n\n    forwarded_values {\n      query_string = false\n      cookies {\n        forward = \"none\"\n      }\n    }\n  }\n\n  restrictions {\n    geo_restriction {\n      restriction_type = \"none\"\n    }\n  }\n\n  viewer_certificate {\n    cloudfront_default_certificate = true\n  }\n}`,\n          language: \"terraform\"\n        }\n      ]\n    }\n  ];\n\n  const copyToClipboard = (text: string, index: number) => {\n    navigator.clipboard.writeText(text);\n    setCopiedIndex(index);\n    setTimeout(() => setCopiedIndex(null), 2000);\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case \"high\": return \"destructive\";\n      case \"medium\": return \"warning\";\n      case \"low\": return \"success\";\n      default: return \"secondary\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      <main className=\"pt-24 pb-16\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Architecture \n              <span className=\"text-gradient\"> Fix Suggestions</span>\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Actionable recommendations to improve your cloud infrastructure security, \n              performance, and cost efficiency.\n            </p>\n          </div>\n\n          {/* Summary Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-12\">\n            <Card className=\"glass-card\">\n              <CardContent className=\"p-6 text-center\">\n                <AlertTriangle className=\"w-8 h-8 text-destructive mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-destructive\">2</div>\n                <div className=\"text-sm text-muted-foreground\">Critical Issues</div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"glass-card\">\n              <CardContent className=\"p-6 text-center\">\n                <DollarSign className=\"w-8 h-8 text-warning mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-warning\">$570</div>\n                <div className=\"text-sm text-muted-foreground\">Monthly Savings</div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"glass-card\">\n              <CardContent className=\"p-6 text-center\">\n                <Clock className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-primary\">37m</div>\n                <div className=\"text-sm text-muted-foreground\">Time to Fix All</div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"glass-card\">\n              <CardContent className=\"p-6 text-center\">\n                <CheckCircle className=\"w-8 h-8 text-success mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-success\">0</div>\n                <div className=\"text-sm text-muted-foreground\">Fixed Issues</div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Fixes by Category */}\n          <div className=\"space-y-8\">\n            {fixes.map((category, categoryIndex) => {\n              const Icon = category.icon;\n              return (\n                <Card key={category.category} className=\"glass-card\">\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${\n                          category.color === 'destructive' ? 'bg-destructive/10' :\n                          category.color === 'warning' ? 'bg-warning/10' : 'bg-success/10'\n                        }`}>\n                          <Icon className={`w-5 h-5 ${\n                            category.color === 'destructive' ? 'text-destructive' :\n                            category.color === 'warning' ? 'text-warning' : 'text-success'\n                          }`} />\n                        </div>\n                        <div>\n                          <CardTitle className=\"text-xl\">{category.category}</CardTitle>\n                          <CardDescription>\n                            {category.issues.length} issue{category.issues.length !== 1 ? 's' : ''} found\n                          </CardDescription>\n                        </div>\n                      </div>\n                      <Badge variant={getSeverityColor(category.severity) as any}>\n                        {category.severity} priority\n                      </Badge>\n                    </div>\n                  </CardHeader>\n                  \n                  <CardContent>\n                    <Accordion type=\"single\" collapsible className=\"w-full\">\n                      {category.issues.map((issue, issueIndex) => {\n                        const fixIndex = categoryIndex * 100 + issueIndex;\n                        return (\n                          <AccordionItem key={issueIndex} value={`item-${fixIndex}`}>\n                            <AccordionTrigger className=\"hover:no-underline\">\n                              <div className=\"flex items-center justify-between w-full mr-4\">\n                                <div className=\"text-left\">\n                                  <div className=\"font-semibold\">{issue.title}</div>\n                                  <div className=\"text-sm text-muted-foreground\">\n                                    {issue.impact}\n                                  </div>\n                                </div>\n                                <div className=\"flex items-center space-x-2\">\n                                  <Badge variant=\"outline\">{issue.timeToFix}</Badge>\n                                  <Badge variant={\n                                    issue.priority === 'Critical' ? 'destructive' :\n                                    issue.priority === 'High' ? 'destructive' :\n                                    issue.priority === 'Medium' ? 'default' : 'secondary'\n                                  }>\n                                    {issue.priority}\n                                  </Badge>\n                                </div>\n                              </div>\n                            </AccordionTrigger>\n                            \n                            <AccordionContent className=\"space-y-4\">\n                              <p className=\"text-muted-foreground\">\n                                {issue.description}\n                              </p>\n                              \n                              <div className=\"space-y-3\">\n                                <div className=\"flex items-center justify-between\">\n                                  <h4 className=\"font-semibold flex items-center space-x-2\">\n                                    <Code className=\"w-4 h-4\" />\n                                    <span>Fix Implementation</span>\n                                  </h4>\n                                  <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => copyToClipboard(issue.code, fixIndex)}\n                                  >\n                                    {copiedIndex === fixIndex ? (\n                                      <CheckCircle className=\"w-4 h-4 text-success mr-2\" />\n                                    ) : (\n                                      <Copy className=\"w-4 h-4 mr-2\" />\n                                    )}\n                                    {copiedIndex === fixIndex ? \"Copied!\" : \"Copy Code\"}\n                                  </Button>\n                                </div>\n                                \n                                <div className=\"relative\">\n                                  <pre className=\"bg-muted/50 rounded-lg p-4 text-sm overflow-x-auto\">\n                                    <code>{issue.code}</code>\n                                  </pre>\n                                </div>\n                                \n                                <div className=\"flex gap-3\">\n                                  <Button variant=\"default\" size=\"sm\">\n                                    <Wrench className=\"w-4 h-4 mr-2\" />\n                                    Apply Fix\n                                  </Button>\n                                  <Button variant=\"outline\" size=\"sm\">\n                                    <ExternalLink className=\"w-4 h-4 mr-2\" />\n                                    View Documentation\n                                  </Button>\n                                </div>\n                              </div>\n                            </AccordionContent>\n                          </AccordionItem>\n                        );\n                      })}\n                    </Accordion>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"mt-12 text-center space-y-4\">\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button variant=\"hero\" size=\"lg\">\n                <CheckCircle className=\"mr-2 w-5 h-5\" />\n                Apply All Critical Fixes\n              </Button>\n              <Button variant=\"outline\" size=\"lg\" asChild>\n                <Link to=\"/results/diagram\">\n                  View Architecture Diagram\n                </Link>\n              </Button>\n              <Button variant=\"outline\" size=\"lg\" asChild>\n                <Link to=\"/results/share\">\n                  Export Fix Report\n                </Link>\n              </Button>\n            </div>\n            \n            <p className=\"text-sm text-muted-foreground\">\n              Need help implementing these fixes?{\" \"}\n              <Link to=\"/assistant\" className=\"text-primary hover:underline\">\n                Ask our AI Assistant\n              </Link>\n            </p>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Fixes;","size_bytes":14491},"client/src/pages/Index.tsx":{"content":"// Update this page (the content is just a fallback if you fail to update the page)\n\nconst Index = () => {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-background\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">Welcome to Your Blank App</h1>\n        <p className=\"text-xl text-muted-foreground\">Start building your amazing project here!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","size_bytes":469},"client/src/pages/Landing.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Hero from \"@/components/sections/Hero\";\nimport Features from \"@/components/sections/Features\";\n\nconst Landing = () => {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <Hero />\n        <Features />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Landing;","size_bytes":446},"client/src/pages/Login.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Zap, Github, Mail, Eye, EyeOff } from \"lucide-react\";\n\nconst Login = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center mesh-bg\">\n      <div className=\"w-full max-w-md p-6\">\n        {/* Logo */}\n        <div className=\"text-center mb-8\">\n          <Link to=\"/\" className=\"inline-flex items-center space-x-2\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-primary to-primary-glow rounded-xl flex items-center justify-center\">\n              <Zap className=\"w-6 h-6 text-white\" />\n            </div>\n            <span className=\"text-2xl font-bold text-gradient\">StackStage</span>\n          </Link>\n        </div>\n\n        {/* Login Card */}\n        <Card className=\"glass-card premium-glow animate-scale-in\">\n          <CardHeader className=\"text-center space-y-2\">\n            <CardTitle className=\"text-2xl font-bold\">\n              <span className=\"typewriter\">Welcome back to StackStage</span>\n            </CardTitle>\n            <CardDescription>\n              Sign in to analyze your cloud architecture\n            </CardDescription>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-6\">\n            {/* OAuth Buttons */}\n            <div className=\"space-y-3\">\n              <Button variant=\"outline\" className=\"w-full\" size=\"lg\">\n                <Github className=\"mr-2 w-5 h-5\" />\n                Continue with GitHub\n              </Button>\n              \n              <Button variant=\"outline\" className=\"w-full\" size=\"lg\">\n                <Mail className=\"mr-2 w-5 h-5\" />\n                Continue with Google\n              </Button>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <Separator />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-card px-2 text-muted-foreground\">\n                  Or continue with email\n                </span>\n              </div>\n            </div>\n\n            {/* Email & Password Form */}\n            <form className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"you@company.com\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"glass-subtle\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <Link\n                    to=\"/auth/reset\"\n                    className=\"text-sm text-primary hover:underline\"\n                  >\n                    Forgot password?\n                  </Link>\n                </div>\n                <div className=\"relative\">\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Enter your password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"glass-subtle pr-10\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"w-4 h-4 text-muted-foreground\" />\n                    ) : (\n                      <Eye className=\"w-4 h-4 text-muted-foreground\" />\n                    )}\n                  </Button>\n                </div>\n              </div>\n\n              <Button type=\"submit\" className=\"w-full\" size=\"lg\" variant=\"hero\">\n                Sign In\n              </Button>\n            </form>\n\n            {/* Sign Up Link */}\n            <div className=\"text-center text-sm\">\n              <span className=\"text-muted-foreground\">Don't have an account? </span>\n              <Link to=\"/signup\" className=\"text-primary hover:underline font-medium\">\n                Sign up\n              </Link>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className=\"text-center mt-8\">\n          <p className=\"text-xs text-muted-foreground\">\n            By signing in, you agree to our{\" \"}\n            <Link to=\"/terms\" className=\"text-primary hover:underline\">\n              Terms of Service\n            </Link>{\" \"}\n            and{\" \"}\n            <Link to=\"/privacy\" className=\"text-primary hover:underline\">\n              Privacy Policy\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","size_bytes":5526},"client/src/pages/NotFound.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { useEffect } from \"react\";\n\nconst NotFound = () => {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    console.error(\n      \"404 Error: User attempted to access non-existent route:\",\n      location\n    );\n  }, [location]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">404</h1>\n        <p className=\"text-xl text-gray-600 mb-4\">Oops! Page not found</p>\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","size_bytes":713},"client/src/pages/Results.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Shield, \n  DollarSign, \n  Zap, \n  TrendingUp, \n  CheckCircle,\n  AlertTriangle,\n  XCircle,\n  FileText,\n  Share2,\n  Download,\n  Eye,\n  Wrench,\n  ArrowRight\n} from \"lucide-react\";\nimport MagicBento from \"@/components/ui/magic-bento\";\nimport AnimatedList from \"@/components/ui/animated-list\";\n\nconst Results = () => {\n  const [overallScore] = useState(78);\n  \n  const scores = [\n    {\n      category: \"Security\",\n      score: 85,\n      icon: Shield,\n      color: \"text-success\",\n      bgColor: \"bg-success/10\",\n      status: \"Good\",\n      issues: 2\n    },\n    {\n      category: \"Cost Optimization\",\n      score: 65,\n      icon: DollarSign,\n      color: \"text-warning\",\n      bgColor: \"bg-warning/10\",\n      status: \"Needs Attention\",\n      issues: 5\n    },\n    {\n      category: \"Performance\",\n      score: 90,\n      icon: Zap,\n      color: \"text-success\",\n      bgColor: \"bg-success/10\",\n      status: \"Excellent\",\n      issues: 1\n    },\n    {\n      category: \"Scalability\",\n      score: 72,\n      icon: TrendingUp,\n      color: \"text-warning\",\n      bgColor: \"bg-warning/10\",\n      status: \"Good\",\n      issues: 3\n    },\n    {\n      category: \"Reliability\",\n      score: 80,\n      icon: CheckCircle,\n      color: \"text-success\",\n      bgColor: \"bg-success/10\",\n      status: \"Good\",\n      issues: 2\n    }\n  ];\n\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return \"text-success\";\n    if (score >= 60) return \"text-warning\";\n    return \"text-destructive\";\n  };\n\n  const getStatusIcon = (issues: number) => {\n    if (issues === 0) return <CheckCircle className=\"w-4 h-4 text-success\" />;\n    if (issues <= 2) return <AlertTriangle className=\"w-4 h-4 text-warning\" />;\n    return <XCircle className=\"w-4 h-4 text-destructive\" />;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      <main className=\"pt-24 pb-16\">\n        <div className=\"max-w-screen-xl mx-auto px-6 md:px-20\">\n          {/* Header */}\n          <div className=\"text-center mb-12 space-y-6\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Architecture \n              <span className=\"text-gradient\"> Analysis Results</span>\n            </h1>\n            <p className=\"text-base text-muted-foreground\">\n              Your cloud infrastructure has been analyzed. Here's what we found.\n            </p>\n          </div>\n\n          {/* Overall Score */}\n          <Card className=\"glass-card mb-12\">\n            <CardContent className=\"p-8\">\n              <div className=\"text-center\">\n                <h2 className=\"text-2xl font-semibold text-foreground mb-4\">\n                  Overall Architecture Health Score\n                </h2>\n                \n                {/* Score Circle */}\n                <div className=\"relative w-48 h-48 mx-auto mb-6\">\n                  <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 100 100\">\n                    <circle\n                      cx=\"50\"\n                      cy=\"50\"\n                      r=\"40\"\n                      stroke=\"hsl(var(--muted))\"\n                      strokeWidth=\"8\"\n                      fill=\"none\"\n                    />\n                    <circle\n                      cx=\"50\"\n                      cy=\"50\"\n                      r=\"40\"\n                      stroke=\"hsl(var(--primary))\"\n                      strokeWidth=\"8\"\n                      fill=\"none\"\n                      strokeDasharray={`${2 * Math.PI * 40}`}\n                      strokeDashoffset={`${2 * Math.PI * 40 * (1 - overallScore / 100)}`}\n                      className=\"transition-all duration-1000 ease-out\"\n                    />\n                  </svg>\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <div className={`text-4xl font-bold ${getScoreColor(overallScore)}`}>\n                        {overallScore}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">/ 100</div>\n                    </div>\n                  </div>\n                </div>\n\n                <Badge \n                  variant=\"outline\" \n                  className={`text-lg px-4 py-2 ${\n                    overallScore >= 80 ? 'border-success text-success' :\n                    overallScore >= 60 ? 'border-warning text-warning' :\n                    'border-destructive text-destructive'\n                  }`}\n                >\n                  {overallScore >= 80 ? 'Excellent' : overallScore >= 60 ? 'Good' : 'Needs Improvement'}\n                </Badge>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Category Scores with Magic Bento */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-6 mb-12\">\n            {scores.map((item) => {\n              const Icon = item.icon;\n              return (\n                <MagicBento \n                  key={item.category}\n                  enableTilt={true}\n                  enableBorderGlow={true}\n                  enableMagnetism={true}\n                  spotlightRadius={200}\n                  glowColor=\"132, 0, 255\"\n                >\n                  <div className=\"p-6\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className={`w-10 h-10 rounded-lg ${item.bgColor} flex items-center justify-center`}>\n                        <Icon className={`w-5 h-5 ${item.color}`} />\n                      </div>\n                      {getStatusIcon(item.issues)}\n                    </div>\n                    \n                    <h3 className=\"font-semibold text-foreground mb-2\">{item.category}</h3>\n                    \n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className={`text-2xl font-bold ${getScoreColor(item.score)}`}>\n                          {item.score}\n                        </span>\n                        <span className=\"text-sm text-muted-foreground\">/ 100</span>\n                      </div>\n                      \n                      <Progress value={item.score} className=\"h-2\" />\n                      \n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-muted-foreground\">{item.status}</span>\n                        <span className=\"text-muted-foreground\">\n                          {item.issues} issue{item.issues !== 1 ? 's' : ''}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </MagicBento>\n              );\n            })}\n          </div>\n\n          {/* Animated Issues List */}\n          <div className=\"mb-12\">\n            <h2 className=\"text-2xl font-bold text-foreground mb-6 text-center\">\n              Issues by Category\n            </h2>\n            <AnimatedList\n              items={scores.map(score => ({\n                label: score.category,\n                description: `${score.issues} issues found - ${score.status}`,\n                icon: <score.icon className={`w-5 h-5 ${score.color}`} />\n              }))}\n              showGradients={true}\n              enableArrowNavigation={true}\n              displayScrollbar={true}\n              className=\"max-w-2xl mx-auto\"\n            />\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n            <Card className=\"glass-card group hover:shadow-lg transition-all cursor-pointer\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center\">\n                    <Wrench className=\"w-6 h-6 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-foreground mb-1\">View Fix Suggestions</h3>\n                    <p className=\"text-sm text-muted-foreground\">Get actionable recommendations</p>\n                  </div>\n                  <ArrowRight className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"glass-card group hover:shadow-lg transition-all cursor-pointer\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 bg-success/10 rounded-lg flex items-center justify-center\">\n                    <Eye className=\"w-6 h-6 text-success\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-foreground mb-1\">View Architecture Diagram</h3>\n                    <p className=\"text-sm text-muted-foreground\">Visual representation</p>\n                  </div>\n                  <ArrowRight className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"glass-card group hover:shadow-lg transition-all cursor-pointer\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 bg-warning/10 rounded-lg flex items-center justify-center\">\n                    <FileText className=\"w-6 h-6 text-warning\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-foreground mb-1\">Export Report</h3>\n                    <p className=\"text-sm text-muted-foreground\">Download detailed analysis</p>\n                  </div>\n                  <ArrowRight className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Next Steps */}\n          <Card className=\"glass-card\">\n            <CardHeader>\n              <CardTitle>Recommended Next Steps</CardTitle>\n              <CardDescription>\n                Based on your analysis results, here's what we recommend focusing on first.\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex flex-col md:flex-row gap-4\">\n                <Button variant=\"hero\" size=\"lg\" asChild>\n                  <Link to=\"/results/fixes\">\n                    <Wrench className=\"mr-2 w-5 h-5\" />\n                    View All Fixes\n                  </Link>\n                </Button>\n                \n                <Button variant=\"outline\" size=\"lg\" asChild>\n                  <Link to=\"/results/diagram\">\n                    <Eye className=\"mr-2 w-5 h-5\" />\n                    Architecture Diagram\n                  </Link>\n                </Button>\n                \n                <Button variant=\"outline\" size=\"lg\" asChild>\n                  <Link to=\"/results/share\">\n                    <Share2 className=\"mr-2 w-5 h-5\" />\n                    Share Results\n                  </Link>\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Results;","size_bytes":11932},"client/src/pages/Share.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Download, \n  Share2, \n  Mail, \n  MessageSquare, \n  FileText,\n  Copy,\n  CheckCircle,\n  Send,\n  ExternalLink\n} from \"lucide-react\";\n\nconst Share = () => {\n  const [copied, setCopied] = useState(false);\n  const [emailData, setEmailData] = useState({\n    to: \"\",\n    subject: \"StackStage Architecture Analysis Report\",\n    message: \"Please find the attached architecture analysis report for review.\"\n  });\n\n  const reportSummary = {\n    overallScore: 78,\n    criticalIssues: 2,\n    warnings: 4,\n    monthlySavings: 570,\n    analysisDate: new Date().toLocaleDateString()\n  };\n\n  const markdownReport = `# StackStage Architecture Analysis Report\n\n**Analysis Date:** ${reportSummary.analysisDate}\n**Overall Health Score:** ${reportSummary.overallScore}/100\n\n## Executive Summary\n\nYour cloud infrastructure analysis has been completed. We identified ${reportSummary.criticalIssues} critical security issues and ${reportSummary.warnings} optimization opportunities that could save you $${reportSummary.monthlySavings}/month.\n\n## Key Findings\n\n### 🔴 Critical Issues (${reportSummary.criticalIssues})\n- **S3 Bucket Public Read Access**: Your S3 bucket allows public read access which could expose sensitive data\n- **RDS Instance Without Encryption**: Database instance is not encrypted at rest\n\n### 🟡 Optimization Opportunities (${reportSummary.warnings})\n- **Oversized EC2 Instances**: Several instances are oversized for current utilization (Save: $450/month)\n- **Unused EBS Volumes**: 3 unattached volumes found (Save: $120/month)\n- **Missing CloudFront CDN**: Static assets served directly from S3\n- **Suboptimal Instance Types**: Consider newer generation instances\n\n## Recommendations\n\n### Immediate Actions Required\n1. Enable S3 bucket public access blocking\n2. Enable RDS encryption at rest\n3. Remove unused EBS volumes\n\n### Cost Optimization\n1. Downsize EC2 instances based on utilization\n2. Implement CloudFront for static content delivery\n3. Migrate to newer instance types for better price-performance\n\n## Next Steps\n\n1. Review and implement critical security fixes\n2. Plan cost optimization changes for next maintenance window\n3. Monitor improvements with StackStage continuous monitoring\n\n---\n*Generated by StackStage - Build with Confidence*\n`;\n\n  const copyReport = () => {\n    navigator.clipboard.writeText(markdownReport);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const integrations = [\n    {\n      name: \"Slack\",\n      icon: MessageSquare,\n      description: \"Send report to Slack channel\",\n      action: \"Connect Slack\"\n    },\n    {\n      name: \"Notion\",\n      icon: FileText,\n      description: \"Create Notion page with findings\",\n      action: \"Connect Notion\"\n    },\n    {\n      name: \"Jira\",\n      icon: ExternalLink,\n      description: \"Create Jira tickets for issues\",\n      action: \"Connect Jira\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      <main className=\"pt-24 pb-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n              Share & Export \n              <span className=\"text-gradient\"> Report</span>\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Share your architecture analysis with your team and stakeholders.\n            </p>\n          </div>\n\n          {/* Report Summary */}\n          <Card className=\"glass-card mb-8\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                <span>Report Summary</span>\n                <Badge variant=\"outline\">\n                  Score: {reportSummary.overallScore}/100\n                </Badge>\n              </CardTitle>\n              <CardDescription>\n                Analysis completed on {reportSummary.analysisDate}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-destructive\">{reportSummary.criticalIssues}</div>\n                  <div className=\"text-sm text-muted-foreground\">Critical Issues</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-warning\">{reportSummary.warnings}</div>\n                  <div className=\"text-sm text-muted-foreground\">Warnings</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-success\">${reportSummary.monthlySavings}</div>\n                  <div className=\"text-sm text-muted-foreground\">Monthly Savings</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-primary\">{reportSummary.overallScore}</div>\n                  <div className=\"text-sm text-muted-foreground\">Health Score</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Tabs defaultValue=\"export\" className=\"space-y-6\">\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"export\">Export Report</TabsTrigger>\n              <TabsTrigger value=\"email\">Send via Email</TabsTrigger>\n              <TabsTrigger value=\"integrate\">Integrations</TabsTrigger>\n            </TabsList>\n\n            {/* Export Tab */}\n            <TabsContent value=\"export\" className=\"space-y-6\">\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle>Export Options</CardTitle>\n                  <CardDescription>\n                    Download your report in various formats\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <Button variant=\"outline\" className=\"h-20 flex-col space-y-2\">\n                      <Download className=\"w-6 h-6\" />\n                      <span>PDF Report</span>\n                    </Button>\n                    <Button variant=\"outline\" className=\"h-20 flex-col space-y-2\" onClick={copyReport}>\n                      {copied ? (\n                        <CheckCircle className=\"w-6 h-6 text-success\" />\n                      ) : (\n                        <Copy className=\"w-6 h-6\" />\n                      )}\n                      <span>{copied ? \"Copied!\" : \"Copy Markdown\"}</span>\n                    </Button>\n                    <Button variant=\"outline\" className=\"h-20 flex-col space-y-2\">\n                      <FileText className=\"w-6 h-6\" />\n                      <span>Excel Report</span>\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Report Preview */}\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle>Report Preview</CardTitle>\n                  <CardDescription>\n                    Preview of your markdown report\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"bg-muted/20 rounded-lg p-4 max-h-96 overflow-y-auto\">\n                    <pre className=\"text-sm whitespace-pre-wrap font-mono\">\n                      {markdownReport}\n                    </pre>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Email Tab */}\n            <TabsContent value=\"email\" className=\"space-y-6\">\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle>Send via Email</CardTitle>\n                  <CardDescription>\n                    Email the report to team members or stakeholders\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email-to\">To</Label>\n                    <Input\n                      id=\"email-to\"\n                      placeholder=\"team@company.com, stakeholder@company.com\"\n                      value={emailData.to}\n                      onChange={(e) => setEmailData({ ...emailData, to: e.target.value })}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email-subject\">Subject</Label>\n                    <Input\n                      id=\"email-subject\"\n                      value={emailData.subject}\n                      onChange={(e) => setEmailData({ ...emailData, subject: e.target.value })}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email-message\">Message</Label>\n                    <Textarea\n                      id=\"email-message\"\n                      placeholder=\"Add a personal message...\"\n                      value={emailData.message}\n                      onChange={(e) => setEmailData({ ...emailData, message: e.target.value })}\n                      className=\"min-h-[100px]\"\n                    />\n                  </div>\n\n                  <Button className=\"w-full\" variant=\"hero\">\n                    <Send className=\"w-4 h-4 mr-2\" />\n                    Send Report\n                  </Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Integrations Tab */}\n            <TabsContent value=\"integrate\" className=\"space-y-6\">\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle>Team Integrations</CardTitle>\n                  <CardDescription>\n                    Connect with your team tools to share findings\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {integrations.map((integration) => {\n                    const Icon = integration.icon;\n                    return (\n                      <div key={integration.name} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center\">\n                            <Icon className=\"w-5 h-5 text-primary\" />\n                          </div>\n                          <div>\n                            <h3 className=\"font-semibold\">{integration.name}</h3>\n                            <p className=\"text-sm text-muted-foreground\">{integration.description}</p>\n                          </div>\n                        </div>\n                        <Button variant=\"outline\" size=\"sm\">\n                          {integration.action}\n                        </Button>\n                      </div>\n                    );\n                  })}\n                </CardContent>\n              </Card>\n\n              <Card className=\"glass-card\">\n                <CardHeader>\n                  <CardTitle>Webhook Integration</CardTitle>\n                  <CardDescription>\n                    Send report data to custom webhook endpoints\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"webhook-url\">Webhook URL</Label>\n                    <Input\n                      id=\"webhook-url\"\n                      placeholder=\"https://your-webhook-endpoint.com/stackstage\"\n                    />\n                  </div>\n                  <Button variant=\"outline\" className=\"w-full\">\n                    <Send className=\"w-4 h-4 mr-2\" />\n                    Send to Webhook\n                  </Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n\n          {/* Quick Actions */}\n          <div className=\"mt-12 text-center\">\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button variant=\"outline\" size=\"lg\" asChild>\n                <Link to=\"/results\">\n                  Back to Results\n                </Link>\n              </Button>\n              <Button variant=\"outline\" size=\"lg\" asChild>\n                <Link to=\"/results/fixes\">\n                  View Fixes\n                </Link>\n              </Button>\n              <Button variant=\"hero\" size=\"lg\" asChild>\n                <Link to=\"/analyze\">\n                  New Analysis\n                </Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Share;","size_bytes":13630},"client/src/pages/Signup.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Zap, Github, Mail, Eye, EyeOff, CheckCircle } from \"lucide-react\";\n\nconst Signup = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    agreeToTerms: false,\n  });\n\n  const passwordRequirements = [\n    { text: \"At least 8 characters\", met: formData.password.length >= 8 },\n    { text: \"Contains uppercase letter\", met: /[A-Z]/.test(formData.password) },\n    { text: \"Contains number\", met: /\\d/.test(formData.password) },\n  ];\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center mesh-bg\">\n      <div className=\"w-full max-w-md p-6\">\n        {/* Logo */}\n        <div className=\"text-center mb-8\">\n          <Link to=\"/\" className=\"inline-flex items-center space-x-2\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-primary to-primary-glow rounded-xl flex items-center justify-center\">\n              <Zap className=\"w-6 h-6 text-white\" />\n            </div>\n            <span className=\"text-2xl font-bold text-gradient\">StackStage</span>\n          </Link>\n        </div>\n\n        {/* Signup Card */}\n        <Card className=\"glass-card premium-glow animate-scale-in\">\n          <CardHeader className=\"text-center space-y-2\">\n            <CardTitle className=\"text-2xl font-bold\">\n              <span className=\"typewriter\">Create your account</span>\n            </CardTitle>\n            <CardDescription>\n              Start optimizing your cloud architecture today\n            </CardDescription>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-6\">\n            {/* OAuth Buttons */}\n            <div className=\"space-y-3\">\n              <Button variant=\"outline\" className=\"w-full\" size=\"lg\">\n                <Github className=\"mr-2 w-5 h-5\" />\n                Continue with GitHub\n              </Button>\n              \n              <Button variant=\"outline\" className=\"w-full\" size=\"lg\">\n                <Mail className=\"mr-2 w-5 h-5\" />\n                Continue with Google\n              </Button>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <Separator />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-card px-2 text-muted-foreground\">\n                  Or continue with email\n                </span>\n              </div>\n            </div>\n\n            {/* Signup Form */}\n            <form className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"firstName\">First name</Label>\n                  <Input\n                    id=\"firstName\"\n                    placeholder=\"John\"\n                    value={formData.firstName}\n                    onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}\n                    className=\"glass-subtle\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"lastName\">Last name</Label>\n                  <Input\n                    id=\"lastName\"\n                    placeholder=\"Doe\"\n                    value={formData.lastName}\n                    onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}\n                    className=\"glass-subtle\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"you@company.com\"\n                  value={formData.email}\n                  onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                  className=\"glass-subtle\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\">Password</Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Create a strong password\"\n                    value={formData.password}\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                    className=\"glass-subtle pr-10\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"w-4 h-4 text-muted-foreground\" />\n                    ) : (\n                      <Eye className=\"w-4 h-4 text-muted-foreground\" />\n                    )}\n                  </Button>\n                </div>\n\n                {/* Password Requirements */}\n                {formData.password && (\n                  <div className=\"space-y-2 mt-3\">\n                    {passwordRequirements.map((req, index) => (\n                      <div key={index} className=\"flex items-center space-x-2\">\n                        <CheckCircle\n                          className={`w-4 h-4 ${\n                            req.met ? \"text-success\" : \"text-muted-foreground\"\n                          }`}\n                        />\n                        <span\n                          className={`text-xs ${\n                            req.met ? \"text-success\" : \"text-muted-foreground\"\n                          }`}\n                        >\n                          {req.text}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Terms Agreement */}\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"terms\"\n                  checked={formData.agreeToTerms}\n                  onCheckedChange={(checked) =>\n                    setFormData({ ...formData, agreeToTerms: checked as boolean })\n                  }\n                />\n                <Label htmlFor=\"terms\" className=\"text-sm\">\n                  I agree to the{\" \"}\n                  <Link to=\"/terms\" className=\"text-primary hover:underline\">\n                    Terms of Service\n                  </Link>{\" \"}\n                  and{\" \"}\n                  <Link to=\"/privacy\" className=\"text-primary hover:underline\">\n                    Privacy Policy\n                  </Link>\n                </Label>\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                size=\"lg\"\n                variant=\"hero\"\n                disabled={!formData.agreeToTerms}\n              >\n                Create Account\n              </Button>\n            </form>\n\n            {/* Login Link */}\n            <div className=\"text-center text-sm\">\n              <span className=\"text-muted-foreground\">Already have an account? </span>\n              <Link to=\"/login\" className=\"text-primary hover:underline font-medium\">\n                Sign in\n              </Link>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;","size_bytes":7994},"client/src/components/layout/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { \n  Github, \n  Linkedin, \n  Zap, \n  Building2,\n  FileText,\n  Shield,\n  Scale,\n  Mail,\n  Phone,\n  MapPin,\n  ArrowRight,\n  Star,\n  Users,\n  Award,\n  Globe,\n  Heart,\n  ExternalLink\n} from \"lucide-react\";\nimport { SiSlack } from \"react-icons/si\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\n\nconst Footer = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.3\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  return (\n    <footer className=\"relative border-t border-border/50 bg-background/95 backdrop-blur-md\">\n      {/* Premium gradient overlay */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-background/50 to-background/90 pointer-events-none\" />\n      \n      <div className=\"relative max-w-[1600px] mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Main Footer Content - Further reduced padding */}\n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true }}\n          className=\"py-4\"\n        >\n          <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n            \n            {/* Brand Section - More compact */}\n            <motion.div variants={itemVariants} className=\"lg:col-span-5 space-y-3\">\n              <Link to=\"/\" className=\"group flex items-center space-x-2 w-fit\">\n                <div className=\"w-8 h-8 bg-gradient-to-br from-primary via-primary-glow to-purple-600 rounded-xl flex items-center justify-center shadow-md group-hover:shadow-primary/25 transition-all duration-300\">\n                  <Zap className=\"w-4 h-4 text-white\" />\n                </div>\n                <span className=\"text-lg font-bold bg-gradient-to-r from-foreground to-foreground/80 bg-clip-text text-transparent\">\n                  StackStage\n                </span>\n              </Link>\n              \n              <div className=\"space-y-3\">\n                <p className=\"text-muted-foreground leading-relaxed max-w-md text-sm\">\n                  AI-powered cloud architecture analysis platform. Build with confidence using intelligent insights and enterprise-grade security.\n                </p>\n                \n                {/* Trust Indicators - Restored size */}\n                <div className=\"flex flex-wrap items-center gap-2\">\n                  <Badge variant=\"secondary\" className=\"flex items-center space-x-1 bg-green-500/10 text-green-700 dark:text-green-300 border-green-500/20 text-xs\">\n                    <Shield className=\"w-2.5 h-2.5\" />\n                    <span>SOC 2</span>\n                  </Badge>\n                  <Badge variant=\"secondary\" className=\"flex items-center space-x-1 bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20 text-xs\">\n                    <Users className=\"w-2.5 h-2.5\" />\n                    <span>10K+ Users</span>\n                  </Badge>\n                  <Badge variant=\"secondary\" className=\"flex items-center space-x-1 bg-purple-500/10 text-purple-700 dark:text-purple-300 border-purple-500/20 text-xs\">\n                    <Star className=\"w-2.5 h-2.5\" />\n                    <span>99.9% Uptime</span>\n                  </Badge>\n                </div>\n              </div>\n\n              {/* Social Links - More compact */}\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"flex space-x-1.5\">\n                  {[\n                    { icon: Github, href: \"https://github.com\", label: \"GitHub\" },\n                    { icon: Mail, href: \"mailto:hello@stackstage.com\", label: \"Email\" },\n                    { icon: SiSlack, href: \"https://slack.stackstage.com\", label: \"Slack\" },\n                    { icon: Linkedin, href: \"https://linkedin.com\", label: \"LinkedIn\" }\n                  ].map(({ icon: Icon, href, label }) => (\n                    <motion.a\n                      key={label}\n                      href={href}\n                      whileHover={{ scale: 1.05, y: -1 }}\n                      whileTap={{ scale: 0.95 }}\n                      className=\"w-7 h-7 rounded-lg bg-muted/80 hover:bg-primary/10 border border-border/50 hover:border-primary/30 flex items-center justify-center text-muted-foreground hover:text-primary transition-all duration-300 group\"\n                      aria-label={label}\n                    >\n                      <Icon className=\"w-3 h-3 group-hover:scale-110 transition-transform duration-300\" />\n                    </motion.a>\n                  ))}\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Navigation Sections - More compact */}\n            <div className=\"lg:col-span-7 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n              \n              {/* Product */}\n              <motion.div variants={itemVariants} className=\"space-y-3\">\n                <h3 className=\"font-bold text-base text-foreground flex items-center\">\n                  <Zap className=\"w-3.5 h-3.5 mr-2 text-primary\" />\n                  Product\n                </h3>\n                <ul className=\"space-y-2\">\n                  {[\n                    { to: \"/analyze\", label: \"Architecture Analysis\", icon: Building2 },\n                    { to: \"/assistant\", label: \"AI Assistant\", icon: Star },\n                    { to: \"/pricing\", label: \"Pricing\", icon: Award },\n                    { to: \"/enterprise\", label: \"Enterprise\", icon: Shield }\n                  ].map(({ to, label, icon: Icon }) => (\n                    <li key={to}>\n                      <Link to={to}>\n                        <motion.div\n                          whileHover={{ x: 4 }}\n                          className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors duration-200 group\"\n                        >\n                          <Icon className=\"w-3.5 h-3.5 opacity-60 group-hover:opacity-100 transition-opacity\" />\n                          <span className=\"group-hover:underline underline-offset-4 text-sm\">{label}</span>\n                        </motion.div>\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </motion.div>\n\n              {/* Company */}\n              <motion.div variants={itemVariants} className=\"space-y-3\">\n                <h3 className=\"font-bold text-base text-foreground flex items-center\">\n                  <Building2 className=\"w-3.5 h-3.5 mr-2 text-primary\" />\n                  Company\n                </h3>\n                <ul className=\"space-y-2\">\n                  {[\n                    { to: \"/about\", label: \"About\", icon: Users },\n                    { to: \"/docs\", label: \"Documentation\", icon: FileText },\n                    { to: \"/privacy\", label: \"Privacy\", icon: Shield },\n                    { to: \"/terms\", label: \"Terms\", icon: Scale }\n                  ].map(({ to, label, icon: Icon }) => (\n                    <li key={to}>\n                      <Link to={to}>\n                        <motion.div\n                          whileHover={{ x: 4 }}\n                          className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors duration-200 group\"\n                        >\n                          <Icon className=\"w-3.5 h-3.5 opacity-60 group-hover:opacity-100 transition-opacity\" />\n                          <span className=\"group-hover:underline underline-offset-4 text-sm\">{label}</span>\n                        </motion.div>\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </motion.div>\n\n              {/* Resources & Support */}\n              <motion.div variants={itemVariants} className=\"space-y-3\">\n                <h3 className=\"font-bold text-base text-foreground flex items-center\">\n                  <Globe className=\"w-3.5 h-3.5 mr-2 text-primary\" />\n                  Resources\n                </h3>\n                <ul className=\"space-y-2\">\n                  {[\n                    { href: \"mailto:support@stackstage.com\", label: \"Support\", icon: Mail },\n                    { href: \"https://status.stackstage.com\", label: \"Status\", icon: Heart, external: true },\n                    { href: \"https://community.stackstage.com\", label: \"Community\", icon: Users, external: true },\n                    { to: \"/changelog\", label: \"Changelog\", icon: FileText }\n                  ].map((item) => {\n                    const { href, to, label, icon: Icon, external } = item;\n                    const content = (\n                      <motion.div\n                        whileHover={{ x: 4 }}\n                        className=\"flex items-center space-x-2 text-muted-foreground hover:text-primary transition-colors duration-200 group\"\n                      >\n                        <Icon className=\"w-3.5 h-3.5 opacity-60 group-hover:opacity-100 transition-opacity\" />\n                        <span className=\"group-hover:underline underline-offset-4 text-sm\">{label}</span>\n                        {external && <ExternalLink className=\"w-2.5 h-2.5 opacity-50\" />}\n                      </motion.div>\n                    );\n\n                    return (\n                      <li key={label}>\n                        {href ? (\n                          <a href={href} target={external ? \"_blank\" : undefined} rel={external ? \"noopener noreferrer\" : undefined}>\n                            {content}\n                          </a>\n                        ) : (\n                          <Link to={to!}>{content}</Link>\n                        )}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </motion.div>\n            </div>\n          </div>\n        </motion.div>\n\n        <Separator className=\"opacity-50\" />\n\n        {/* Bottom Section - Restored font sizes, minimal gap */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n          className=\"py-1\"\n        >\n          <div className=\"flex flex-col lg:flex-row justify-between items-center space-y-2 lg:space-y-0\">\n            <div className=\"flex flex-col sm:flex-row items-center space-y-1 sm:space-y-0 sm:space-x-4\">\n              <p className=\"text-muted-foreground text-xs\">\n                © 2025 StackStage. All rights reserved.\n              </p>\n              <div className=\"hidden sm:block w-1 h-1 bg-muted-foreground/50 rounded-full\" />\n              <p className=\"text-muted-foreground text-xs\">\n                Made with <Heart className=\"w-2.5 h-2.5 inline mx-1 text-red-500\" /> for developers\n              </p>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full animate-pulse\" />\n                <span className=\"text-xs font-medium text-muted-foreground\">All systems operational</span>\n              </div>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-muted-foreground hover:text-primary h-7 px-3 text-xs\">\n                Build with confidence\n                <ArrowRight className=\"w-2.5 h-2.5 ml-1\" />\n              </Button>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","size_bytes":11816},"client/src/components/layout/Header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu, X, Github, Zap, Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"@/hooks/use-theme\";\n\nconst Header = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [location] = useLocation();\n  const { theme, toggleTheme } = useTheme();\n\n  const navigation = [\n    { name: \"Analyze\", href: \"/analyze\" },\n    { name: \"Features\", href: \"/#features\" },\n    { name: \"AI Assistant\", href: \"/assistant\" },\n    { name: \"Docs\", href: \"/docs\" },\n    { name: \"Pricing\", href: \"/pricing\" },\n  ];\n\n  return (\n    <header className=\"fixed top-0 w-full z-50 glass border-b border-glass-border\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <Link to=\"/\" className=\"flex items-center space-x-2 group\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-primary to-primary-glow rounded-lg flex items-center justify-center\">\n              <Zap className=\"w-5 h-5 text-white\" />\n            </div>\n            <span className=\"text-xl font-bold text-gradient\">StackStage</span>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-8\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                to={item.href}\n                className=\"text-muted-foreground hover:text-foreground transition-colors duration-200 font-medium\"\n              >\n                {item.name}\n              </Link>\n            ))}\n          </nav>\n\n          {/* Desktop Actions */}\n          <div className=\"hidden md:flex items-center space-x-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={toggleTheme}\n              className=\"rounded-full\"\n            >\n              {theme === 'dark' ? (\n                <Sun className=\"h-4 w-4\" />\n              ) : (\n                <Moon className=\"h-4 w-4\" />\n              )}\n            </Button>\n            <Button variant=\"ghost\" asChild>\n              <Link to=\"/login\">Login</Link>\n            </Button>\n            <Button variant=\"hero\" asChild className=\"text-white\">\n              <Link to=\"/analyze\">Try Free</Link>\n            </Button>\n          </div>\n\n          {/* Mobile menu button */}\n          <button\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            className=\"md:hidden p-2 rounded-lg hover:bg-accent transition-colors\"\n          >\n            {isMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n          </button>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMenuOpen && (\n          <div className=\"md:hidden border-t border-glass-border animate-fade-in-down\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className=\"block px-3 py-2 text-base font-medium text-muted-foreground hover:text-foreground transition-colors\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {item.name}\n                </Link>\n              ))}\n              <div className=\"flex flex-col space-y-2 px-3 pt-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-sm text-muted-foreground\">Theme</span>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={toggleTheme}\n                    className=\"rounded-full h-8 w-8\"\n                  >\n                    {theme === 'dark' ? (\n                      <Sun className=\"h-4 w-4\" />\n                    ) : (\n                      <Moon className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                </div>\n                <Button variant=\"ghost\" asChild className=\"justify-start\">\n                  <Link to=\"/login\">Login</Link>\n                </Button>\n                <Button variant=\"hero\" asChild className=\"text-white\">\n                  <Link to=\"/analyze\">Try Free</Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","size_bytes":4451},"client/src/components/sections/Features.tsx":{"content":"import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport AnimatedList from \"@/components/ui/animated-list\";\nimport { \n  Shield, \n  DollarSign, \n  Zap, \n  TrendingUp, \n  FileText, \n  Share2,\n  Eye,\n  Wrench,\n  AlertTriangle,\n  BarChart3,\n  Lock,\n  Cloud,\n  X,\n  CheckCircle,\n  ArrowRight,\n  ExternalLink\n} from \"lucide-react\";\n\nconst Features = () => {\n  const [selectedFeature, setSelectedFeature] = useState<number | null>(null);\n  \n  const features = [\n    {\n      icon: Shield,\n      title: \"Security Analysis\",\n      description: \"Identify vulnerabilities, compliance issues, and security misconfigurations across your cloud infrastructure.\",\n      features: [\"Vulnerability scanning\", \"Compliance checks\", \"Risk assessment\", \"Security recommendations\"],\n      detailedContent: {\n        title: \"Security Analysis Dashboard\",\n        description: \"Comprehensive security analysis with real-time vulnerability detection and compliance monitoring.\",\n        items: [\n          \"CVE vulnerability scanning\",\n          \"OWASP Top 10 compliance\",\n          \"IAM permissions audit\",\n          \"Network security analysis\",\n          \"Data encryption validation\",\n          \"SSL/TLS certificate monitoring\"\n        ],\n        stats: [\n          { label: \"Vulnerabilities Detected\", value: \"127\", status: \"critical\" },\n          { label: \"Compliance Score\", value: \"78%\", status: \"warning\" },\n          { label: \"Security Recommendations\", value: \"23\", status: \"info\" },\n          { label: \"Critical Issues\", value: \"5\", status: \"critical\" }\n        ]\n      }\n    },\n    {\n      icon: DollarSign,\n      title: \"Cost Optimization\",\n      description: \"Discover opportunities to reduce cloud spending without compromising performance or reliability.\",\n      features: [\"Resource rightsizing\", \"Unused resource detection\", \"Reserved instance recommendations\", \"Billing optimization\"],\n      detailedContent: {\n        title: \"Cost Optimization Insights\",\n        description: \"Analyze spending patterns and identify cost-saving opportunities across your infrastructure.\",\n        items: [\n          \"Underutilized EC2 instances\",\n          \"Idle load balancers\",\n          \"Oversized storage volumes\",\n          \"Reserved instance opportunities\",\n          \"Savings plan recommendations\",\n          \"Resource scheduling automation\"\n        ],\n        stats: [\n          { label: \"Monthly Savings\", value: \"$12,450\", status: \"success\" },\n          { label: \"Underutilized Resources\", value: \"34\", status: \"warning\" },\n          { label: \"RI Coverage\", value: \"67%\", status: \"info\" },\n          { label: \"Potential Savings\", value: \"28%\", status: \"success\" }\n        ]\n      }\n    },\n    {\n      icon: Zap,\n      title: \"Performance Insights\",\n      description: \"Analyze your infrastructure performance and get actionable recommendations for improvements.\",\n      features: [\"Performance bottlenecks\", \"Scaling recommendations\", \"Load balancing optimization\", \"Network analysis\"],\n      detailedContent: {\n        title: \"Performance Analytics\",\n        description: \"Deep dive into performance metrics with bottleneck identification and optimization recommendations.\",\n        items: [\n          \"CPU utilization monitoring\",\n          \"Memory usage analysis\",\n          \"Network latency tracking\",\n          \"Database query optimization\",\n          \"CDN performance analysis\",\n          \"Auto-scaling triggers\"\n        ],\n        stats: [\n          { label: \"Avg Response Time\", value: \"245ms\", status: \"success\" },\n          { label: \"CPU Utilization\", value: \"73%\", status: \"warning\" },\n          { label: \"Memory Usage\", value: \"58%\", status: \"info\" },\n          { label: \"Network Latency\", value: \"12ms\", status: \"success\" }\n        ]\n      }\n    },\n    {\n      icon: TrendingUp,\n      title: \"Scalability Planning\",\n      description: \"Plan for future growth with intelligent scaling recommendations and capacity planning.\",\n      features: [\"Auto-scaling setup\", \"Capacity planning\", \"Growth projections\", \"Architecture recommendations\"],\n      detailedContent: {\n        title: \"Scalability Roadmap\",\n        description: \"Future-ready scaling strategies with intelligent capacity planning and growth projections.\",\n        items: [\n          \"Auto-scaling group configuration\",\n          \"Load balancer distribution\",\n          \"Database sharding strategy\",\n          \"CDN edge location planning\",\n          \"Microservices decomposition\",\n          \"Traffic pattern analysis\"\n        ],\n        stats: [\n          { label: \"Traffic Growth\", value: \"+145%\", status: \"success\" },\n          { label: \"Scaling Events\", value: \"23\", status: \"info\" },\n          { label: \"Capacity Utilization\", value: \"82%\", status: \"warning\" },\n          { label: \"Growth Projection\", value: \"+67%\", status: \"info\" }\n        ]\n      }\n    },\n    {\n      icon: Eye,\n      title: \"Visual Architecture\",\n      description: \"Generate interactive diagrams of your cloud infrastructure with highlighted issues and improvements.\",\n      features: [\"Interactive diagrams\", \"Architecture visualization\", \"Dependency mapping\", \"Issue highlighting\"],\n      detailedContent: {\n        title: \"Architecture Visualization\",\n        description: \"Interactive infrastructure diagrams with real-time dependency mapping and issue visualization.\",\n        items: [\n          \"Mermaid diagram generation\",\n          \"Service dependency graph\",\n          \"Data flow visualization\",\n          \"Security boundary mapping\",\n          \"Cost allocation view\",\n          \"Performance hotspot overlay\"\n        ],\n        stats: [\n          { label: \"Services Mapped\", value: \"47\", status: \"info\" },\n          { label: \"Dependencies\", value: \"128\", status: \"info\" },\n          { label: \"Critical Paths\", value: \"8\", status: \"warning\" },\n          { label: \"Diagram Accuracy\", value: \"94%\", status: \"success\" }\n        ]\n      }\n    },\n    {\n      icon: Share2,\n      title: \"Team Collaboration\",\n      description: \"Share reports and collaborate with your team on infrastructure improvements and decisions.\",\n      features: [\"Report sharing\", \"Team collaboration\", \"Export capabilities\", \"Integration support\"],\n      detailedContent: {\n        title: \"Collaboration Hub\",\n        description: \"Streamlined team collaboration with advanced sharing, export, and integration capabilities.\",\n        items: [\n          \"Real-time report sharing\",\n          \"Team workspace management\",\n          \"PDF/CSV export options\",\n          \"Slack/Teams integration\",\n          \"JIRA ticket creation\",\n          \"Role-based access control\"\n        ],\n        stats: [\n          { label: \"Team Members\", value: \"12\", status: \"info\" },\n          { label: \"Shared Reports\", value: \"156\", status: \"success\" },\n          { label: \"Integrations Active\", value: \"5\", status: \"info\" },\n          { label: \"Export Downloads\", value: \"89\", status: \"success\" }\n        ]\n      }\n    }\n  ];\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'critical': return 'text-destructive';\n      case 'warning': return 'text-warning';\n      case 'success': return 'text-success';\n      default: return 'text-muted-foreground';\n    }\n  };\n\n  return (\n    <section className=\"py-24 bg-background\" id=\"features\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold text-foreground mb-6\">\n            Comprehensive\n            <span className=\"text-gradient\"> Cloud Analysis</span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Everything you need to optimize, secure, and scale your cloud infrastructure\n            with confidence and precision.\n          </p>\n        </div>\n\n        {/* Features Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1, duration: 0.5 }}\n              whileHover={{ scale: 1.02, y: -5 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Card \n                className=\"glass-card group h-full cursor-pointer transition-all duration-300 hover:shadow-xl hover:ring-2 hover:ring-primary/20\"\n                onClick={() => setSelectedFeature(selectedFeature === index ? null : index)}\n                data-testid={`feature-card-${index}`}\n              >\n                <CardHeader>\n                  <div className=\"flex items-center space-x-4 mb-4\">\n                    <div className=\"flex items-center justify-center w-12 h-12 bg-primary/10 rounded-xl group-hover:bg-primary/20 transition-colors\">\n                      <feature.icon className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <CardTitle className=\"text-xl font-semibold\">{feature.title}</CardTitle>\n                  </div>\n                  <CardDescription className=\"text-base leading-relaxed\">\n                    {feature.description}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2 mb-4\">\n                    {feature.features.map((item, itemIndex) => (\n                      <li key={itemIndex} className=\"flex items-center text-sm text-muted-foreground\">\n                        <div className=\"w-1.5 h-1.5 bg-primary rounded-full mr-3\" />\n                        {item}\n                      </li>\n                    ))}\n                  </ul>\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\" \n                    className=\"w-full group-hover:bg-primary/10\"\n                    data-testid={`button-explore-${index}`}\n                  >\n                    <span>Explore Details</span>\n                    <ArrowRight className=\"w-4 h-4 ml-2 transition-transform group-hover:translate-x-1\" />\n                  </Button>\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Detailed Feature Modal */}\n        <AnimatePresence>\n          {selectedFeature !== null && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\"\n              onClick={() => setSelectedFeature(null)}\n            >\n              <motion.div\n                initial={{ scale: 0.9, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                exit={{ scale: 0.9, opacity: 0 }}\n                className=\"glass-card max-w-4xl w-full max-h-[90vh] overflow-y-auto\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                <div className=\"p-8\">\n                  <div className=\"flex items-start justify-between mb-6\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"flex items-center justify-center w-16 h-16 bg-primary/10 rounded-xl\">\n                        {React.createElement(features[selectedFeature].icon, { className: \"w-8 h-8 text-primary\" })}\n                      </div>\n                      <div>\n                        <h3 className=\"text-2xl font-bold text-foreground\">\n                          {features[selectedFeature].detailedContent.title}\n                        </h3>\n                        <p className=\"text-muted-foreground mt-1\">\n                          {features[selectedFeature].detailedContent.description}\n                        </p>\n                      </div>\n                    </div>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      onClick={() => setSelectedFeature(null)}\n                      className=\"rounded-full\"\n                    >\n                      <X className=\"w-5 h-5\" />\n                    </Button>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                    {/* Feature List */}\n                    <div>\n                      <h4 className=\"text-lg font-semibold mb-4 text-foreground\">Key Features</h4>\n                      <AnimatedList\n                        items={features[selectedFeature].detailedContent.items}\n                        onItemSelect={(item, index) => console.log(`Selected: ${item}`)}\n                        showGradients={true}\n                        enableArrowNavigation={false}\n                        displayScrollbar={false}\n                      />\n                    </div>\n\n                    {/* Stats */}\n                    <div>\n                      <h4 className=\"text-lg font-semibold mb-4 text-foreground\">Analytics Overview</h4>\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        {features[selectedFeature].detailedContent.stats.map((stat, index) => (\n                          <motion.div\n                            key={index}\n                            initial={{ opacity: 0, y: 20 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ delay: index * 0.1 }}\n                            className=\"glass-subtle p-4 rounded-xl\"\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <div>\n                                <p className=\"text-sm text-muted-foreground mb-1\">{stat.label}</p>\n                                <p className={`text-xl font-bold ${getStatusColor(stat.status)}`}>\n                                  {stat.value}\n                                </p>\n                              </div>\n                              <div className={`w-2 h-2 rounded-full ${\n                                stat.status === 'critical' ? 'bg-destructive' :\n                                stat.status === 'warning' ? 'bg-warning' :\n                                stat.status === 'success' ? 'bg-success' :\n                                'bg-muted-foreground'\n                              }`} />\n                            </div>\n                          </motion.div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"flex flex-col sm:flex-row gap-4 justify-center mt-8 pt-6 border-t border-glass-border\">\n                    <Button className=\"flex items-center\">\n                      <ExternalLink className=\"w-4 h-4 mr-2\" />\n                      View Full Report\n                    </Button>\n                    <Button variant=\"outline\" onClick={() => setSelectedFeature(null)}>\n                      Close Details\n                    </Button>\n                  </div>\n                </div>\n              </motion.div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Bottom CTA */}\n        <div className=\"text-center mt-16\">\n          <p className=\"text-lg text-muted-foreground mb-8\">\n            Ready to optimize your cloud infrastructure?\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <a href=\"/analyze\" className=\"inline-flex items-center justify-center px-6 py-3 bg-primary text-primary-foreground rounded-lg font-medium hover:bg-primary/90 transition-colors\">\n              Start Free Analysis\n            </a>\n            <a href=\"/login\" className=\"inline-flex items-center justify-center px-6 py-3 border border-border rounded-lg font-medium hover:bg-muted transition-colors\">\n              Learn More\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Features;","size_bytes":16175},"client/src/components/sections/Hero.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Zap, ArrowRight, Shield, DollarSign, TrendingUp } from \"lucide-react\";\nimport Aurora from \"@/components/ui/aurora\";\nimport TrueFocus from \"@/components/ui/true-focus\";\n\nconst Hero = () => {\n  return (\n    <section className=\"relative pt-32 pb-20 overflow-hidden\">\n      {/* Aurora Background with smooth fade */}\n      <Aurora \n        intensity={0.3}\n        speed={1.2}\n        className=\"aurora-background\"\n        fadeHeight={300}\n        fadeDirection=\"bottom\"\n      />\n      \n      {/* Content */}\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center\">\n          {/* Badge */}\n          <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-primary/10 border border-primary/20 text-primary text-sm font-medium mb-8\">\n            <Zap className=\"w-4 h-4 mr-2\" />\n            Cloud Architecture Analysis Platform\n          </div>\n          \n          {/* Animated Heading */}\n          <div className=\"mb-8\">\n            <TrueFocus \n              sentence=\"Build with Confidence\"\n              manualMode={false}\n              blurAmount={5}\n              borderColor=\"#6366f1\"\n              glowColor=\"rgba(99, 102, 241, 0.6)\"\n              animationDuration={1.2}\n              pauseBetweenAnimations={1.5}\n            />\n          </div>\n          \n          {/* Subheading */}\n          <p className=\"text-xl md:text-2xl text-muted-foreground max-w-3xl mx-auto mb-12 leading-relaxed\">\n            Analyze your cloud infrastructure for security vulnerabilities, \n            cost optimization opportunities, and performance improvements.\n          </p>\n          \n          {/* CTA Buttons */}\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center mb-16\">\n            <Link href=\"/analyze\">\n              <Button size=\"lg\" className=\"px-8 py-6 text-lg\" variant=\"hero\">\n                Start Analysis\n                <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/login\">\n              <Button size=\"lg\" variant=\"outline\" className=\"px-8 py-6 text-lg\">\n                Sign In\n              </Button>\n            </Link>\n          </div>\n          \n          {/* Animated Stats */}\n          <motion.div \n            className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 40 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.8, duration: 0.6 }}\n          >\n            {[\n              { icon: Shield, value: \"99.9%\", label: \"Security Detection Rate\", delay: 0.9 },\n              { icon: DollarSign, value: \"30%\", label: \"Average Cost Savings\", delay: 1.0 },\n              { icon: TrendingUp, value: \"2x\", label: \"Performance Improvement\", delay: 1.1 }\n            ].map((stat, index) => (\n              <motion.div \n                key={index}\n                className=\"text-center\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: stat.delay, duration: 0.5 }}\n                whileHover={{ scale: 1.05, y: -5 }}\n              >\n                <div className=\"flex items-center justify-center w-12 h-12 bg-primary/10 rounded-xl mx-auto mb-4 group-hover:bg-primary/20 transition-colors\">\n                  <stat.icon className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"text-2xl font-bold text-foreground mb-2\">{stat.value}</h3>\n                <p className=\"text-muted-foreground\">{stat.label}</p>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;","size_bytes":3849},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/animated-list.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ChevronRight, Check } from 'lucide-react';\n\ninterface AnimatedListProps {\n  items: string[];\n  onItemSelect?: (item: string, index: number) => void;\n  showGradients?: boolean;\n  enableArrowNavigation?: boolean;\n  displayScrollbar?: boolean;\n}\n\nconst AnimatedList: React.FC<AnimatedListProps> = ({\n  items,\n  onItemSelect,\n  showGradients = true,\n  enableArrowNavigation = true,\n  displayScrollbar = true,\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [hoveredIndex, setHoveredIndex] = useState(-1);\n\n  useEffect(() => {\n    if (enableArrowNavigation) {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          setSelectedIndex((prev) => (prev + 1) % items.length);\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          setSelectedIndex((prev) => (prev - 1 + items.length) % items.length);\n        } else if (e.key === 'Enter' && selectedIndex >= 0) {\n          onItemSelect?.(items[selectedIndex], selectedIndex);\n        }\n      };\n\n      window.addEventListener('keydown', handleKeyDown);\n      return () => window.removeEventListener('keydown', handleKeyDown);\n    }\n  }, [enableArrowNavigation, items, selectedIndex, onItemSelect]);\n\n  const handleItemClick = (item: string, index: number) => {\n    setSelectedIndex(index);\n    onItemSelect?.(item, index);\n  };\n\n  return (\n    <div className={`space-y-2 ${displayScrollbar ? 'max-h-96 overflow-y-auto' : ''}`}>\n      <AnimatePresence>\n        {items.map((item, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: 20 }}\n            transition={{ delay: index * 0.1, duration: 0.3 }}\n            className={`\n              relative p-4 rounded-xl cursor-pointer transition-all duration-200\n              ${showGradients ? 'glass-subtle' : 'bg-muted/50'}\n              ${selectedIndex === index ? 'ring-2 ring-primary' : ''}\n              ${hoveredIndex === index ? 'scale-[1.02] shadow-lg' : ''}\n            `}\n            onMouseEnter={() => setHoveredIndex(index)}\n            onMouseLeave={() => setHoveredIndex(-1)}\n            onClick={() => handleItemClick(item, index)}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <motion.div\n                  className={`\n                    w-2 h-2 rounded-full transition-colors duration-200\n                    ${selectedIndex === index ? 'bg-primary' : 'bg-muted-foreground/40'}\n                  `}\n                  animate={{\n                    scale: selectedIndex === index ? 1.2 : 1,\n                  }}\n                />\n                <span className={`\n                  font-medium transition-colors duration-200\n                  ${selectedIndex === index ? 'text-primary' : 'text-foreground'}\n                `}>\n                  {item}\n                </span>\n              </div>\n              \n              <motion.div\n                initial={{ opacity: 0, scale: 0 }}\n                animate={{\n                  opacity: selectedIndex === index ? 1 : hoveredIndex === index ? 0.7 : 0,\n                  scale: selectedIndex === index ? 1 : hoveredIndex === index ? 0.8 : 0,\n                }}\n                transition={{ duration: 0.2 }}\n              >\n                {selectedIndex === index ? (\n                  <Check className=\"w-4 h-4 text-primary\" />\n                ) : (\n                  <ChevronRight className=\"w-4 h-4 text-muted-foreground\" />\n                )}\n              </motion.div>\n            </div>\n\n            {showGradients && (selectedIndex === index || hoveredIndex === index) && (\n              <motion.div\n                className=\"absolute inset-0 rounded-xl bg-gradient-to-r from-primary/10 via-transparent to-primary/10\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 0.3 }}\n              />\n            )}\n          </motion.div>\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default AnimatedList;","size_bytes":4454},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/aurora.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface AuroraProps {\n  colorStops?: string[];\n  intensity?: number;\n  speed?: number;\n  className?: string;\n  fadeHeight?: number;\n  fadeDirection?: 'bottom' | 'top' | 'both';\n}\n\nconst Aurora: React.FC<AuroraProps> = ({\n  colorStops = [\n    \"#3b82f6\", // Primary Blue\n    \"#7c3aed\", // Violet\n    \"#06b6d4\", // Cyan\n    \"#6366f1\", // Indigo  \n    \"#8b5cf6\"  // Purple\n  ],\n  intensity = 0.4,\n  speed = 1.2,\n  className = \"\",\n  fadeHeight = 200,\n  fadeDirection = 'bottom'\n}) => {\n  // Create fade mask based on direction\n  const getFadeMask = () => {\n    switch (fadeDirection) {\n      case 'top':\n        return `linear-gradient(to bottom, transparent 0%, rgba(0,0,0,1) ${fadeHeight}px, rgba(0,0,0,1) 100%)`;\n      case 'both':\n        return `linear-gradient(to bottom, transparent 0%, rgba(0,0,0,1) ${fadeHeight}px, rgba(0,0,0,1) calc(100% - ${fadeHeight}px), transparent 100%)`;\n      case 'bottom':\n      default:\n        return `linear-gradient(to bottom, rgba(0,0,0,1) 0%, rgba(0,0,0,1) calc(100% - ${fadeHeight}px), transparent 100%)`;\n    }\n  };\n\n  return (\n    <div className={`absolute inset-0 overflow-hidden pointer-events-none ${className}`}>\n      {/* Primary Aurora with professional softness and fade */}\n      <motion.div\n        className=\"absolute inset-0 z-[-1] pointer-events-none mix-blend-screen\"\n        style={{\n          background: `\n            radial-gradient(circle at 30% 30%, rgba(59, 130, 246, 0.35) 0%, transparent 60%),\n            radial-gradient(circle at 70% 70%, rgba(124, 58, 237, 0.35) 0%, transparent 60%),\n            radial-gradient(circle at 50% 90%, rgba(6, 182, 212, 0.3) 0%, transparent 60%)\n          `,\n          filter: 'blur(100px)',\n          opacity: 0.6,\n          maskImage: getFadeMask(),\n          WebkitMaskImage: getFadeMask(),\n        }}\n        animate={{\n          background: [\n            `\n              radial-gradient(circle at 30% 30%, rgba(59, 130, 246, 0.35) 0%, transparent 60%),\n              radial-gradient(circle at 70% 70%, rgba(124, 58, 237, 0.35) 0%, transparent 60%),\n              radial-gradient(circle at 50% 90%, rgba(6, 182, 212, 0.3) 0%, transparent 60%)\n            `,\n            `\n              radial-gradient(circle at 70% 20%, rgba(124, 58, 237, 0.4) 0%, transparent 60%),\n              radial-gradient(circle at 30% 80%, rgba(6, 182, 212, 0.35) 0%, transparent 60%),\n              radial-gradient(circle at 90% 50%, rgba(99, 102, 241, 0.32) 0%, transparent 60%)\n            `,\n            `\n              radial-gradient(circle at 20% 70%, rgba(6, 182, 212, 0.38) 0%, transparent 60%),\n              radial-gradient(circle at 80% 30%, rgba(139, 92, 246, 0.32) 0%, transparent 60%),\n              radial-gradient(circle at 40% 10%, rgba(59, 130, 246, 0.35) 0%, transparent 60%)\n            `,\n            `\n              radial-gradient(circle at 30% 30%, rgba(59, 130, 246, 0.35) 0%, transparent 60%),\n              radial-gradient(circle at 70% 70%, rgba(124, 58, 237, 0.35) 0%, transparent 60%),\n              radial-gradient(circle at 50% 90%, rgba(6, 182, 212, 0.3) 0%, transparent 60%)\n            `,\n          ],\n        }}\n        transition={{\n          duration: 25,\n          repeat: Infinity,\n          ease: \"easeInOut\",\n        }}\n      />\n      \n      {/* Subtle floating orbs with reduced intensity and fade */}\n      {[...Array(3)].map((_, i) => (\n        <motion.div\n          key={i}\n          className=\"absolute rounded-full z-[-2]\"\n          style={{\n            background: `radial-gradient(circle, rgba(${i === 0 ? '59, 130, 246' : i === 1 ? '124, 58, 237' : '6, 182, 212'}, 0.15), transparent)`,\n            filter: 'blur(80px)',\n            width: '400px',\n            height: '400px',\n            maskImage: getFadeMask(),\n            WebkitMaskImage: getFadeMask(),\n          }}\n          animate={{\n            x: [0, 60, 0],\n            y: [0, -30, 0],\n            scale: [1, 1.1, 1],\n            opacity: [0.25, 0.4, 0.25],\n          }}\n          transition={{\n            duration: 12 + i * 3,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: i * 4,\n          }}\n          initial={{\n            x: `${25 + i * 25}%`,\n            y: `${40 + i * 15}%`,\n          }}\n        />\n      ))}\n      \n      {/* Very subtle center breathing glow with fade */}\n      <motion.div\n        className=\"absolute inset-0 flex items-center justify-center z-[-3]\"\n      >\n        <motion.div\n          className=\"rounded-full\"\n          style={{\n            background: `radial-gradient(circle, rgba(99, 102, 241, 0.12), transparent)`,\n            filter: 'blur(120px)',\n            width: '800px',\n            height: '800px',\n            maskImage: getFadeMask(),\n            WebkitMaskImage: getFadeMask(),\n          }}\n          animate={{\n            scale: [1, 1.2, 1],\n            opacity: [0.2, 0.35, 0.2],\n          }}\n          transition={{\n            duration: 10,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n          }}\n        />\n      </motion.div>\n    </div>\n  );\n};\n\nexport default Aurora;","size_bytes":5134},"client/src/components/ui/avatar.tsx":{"content":"import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1405},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-lg border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1126},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2701},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-2xl text-sm font-semibold ring-offset-background transition-all duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow-lg hover:shadow-glow hover:scale-[1.02] hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-lg hover:shadow-xl hover:scale-[1.02] hover:bg-destructive/90\",\n        outline:\n          \"border border-border backdrop-blur-sm shadow-sm hover:bg-accent hover:text-accent-foreground hover:shadow-md hover:scale-[1.02]\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:shadow-md hover:scale-[1.02] hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground hover:scale-[1.02]\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        glass: \"backdrop-blur-xl bg-glass border border-glass-border hover:bg-glass-subtle shadow-glass hover:scale-[1.02]\",\n        hero: \"bg-gradient-to-r from-primary to-primary-glow text-primary-foreground shadow-premium hover:shadow-glow hover:scale-[1.02] font-semibold\",\n        premium: \"bg-gradient-to-r from-purple-600 to-blue-600 text-white shadow-premium hover:shadow-glow hover:scale-[1.02] hover:from-purple-700 hover:to-blue-700\"\n      },\n      size: {\n        default: \"h-11 px-6 py-3\",\n        sm: \"h-9 px-4 text-sm\",\n        lg: \"h-12 px-8 text-base\",\n        icon: \"h-11 w-11\",\n        hero: \"h-16 px-12 text-xl\"\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2595},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { DayPicker } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/button\";\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>;\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ..._props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ..._props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}\nCalendar.displayName = \"Calendar\";\n\nexport { Calendar };\n","size_bytes":2620},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1877},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"import * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10466},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":315},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4879},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7246},"client/src/components/ui/dialog.tsx":{"content":"import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3835},"client/src/components/ui/dock.tsx":{"content":"import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface DockItem {\n  icon: React.ReactNode;\n  label: string;\n  onClick: () => void;\n}\n\ninterface DockProps {\n  items: DockItem[];\n  panelHeight?: number;\n  baseItemSize?: number;\n  magnification?: number;\n  className?: string;\n}\n\nconst Dock: React.FC<DockProps> = ({\n  items,\n  panelHeight = 68,\n  baseItemSize = 50,\n  magnification = 70,\n  className = \"\"\n}) => {\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\n\n  const getItemSize = (index: number) => {\n    if (hoveredIndex === null) return baseItemSize;\n    \n    const distance = Math.abs(index - hoveredIndex);\n    if (distance === 0) return magnification;\n    if (distance === 1) return baseItemSize + (magnification - baseItemSize) * 0.5;\n    if (distance === 2) return baseItemSize + (magnification - baseItemSize) * 0.25;\n    \n    return baseItemSize;\n  };\n\n  return (\n    <div className={`dock-container ${className}`}>\n      <motion.div\n        className=\"dock\"\n        style={{ height: panelHeight }}\n        initial={{ y: 100, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n      >\n        {items.map((item, index) => {\n          const size = getItemSize(index);\n          \n          return (\n            <motion.div\n              key={index}\n              className=\"dock-item group relative\"\n              style={{\n                width: size,\n                height: size,\n              }}\n              onMouseEnter={() => setHoveredIndex(index)}\n              onMouseLeave={() => setHoveredIndex(null)}\n              onClick={item.onClick}\n              whileHover={{ y: -8 }}\n              whileTap={{ scale: 0.95 }}\n              animate={{\n                width: size,\n                height: size,\n              }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 30 }}\n            >\n              <div className=\"w-full h-full flex items-center justify-center text-foreground hover:text-primary transition-colors\">\n                {item.icon}\n              </div>\n\n              {/* Tooltip */}\n              <motion.div\n                className=\"absolute bottom-full mb-2 left-1/2 transform -translate-x-1/2\"\n                initial={{ opacity: 0, y: 10, scale: 0.8 }}\n                whileHover={{ opacity: 1, y: 0, scale: 1 }}\n                transition={{ duration: 0.2 }}\n              >\n                <div className=\"glass-card py-1 px-2 text-xs text-foreground whitespace-nowrap\">\n                  {item.label}\n                </div>\n              </motion.div>\n\n              {/* Glow effect */}\n              <motion.div\n                className=\"absolute inset-0 rounded-xl bg-primary/20 blur-md\"\n                initial={{ opacity: 0 }}\n                whileHover={{ opacity: 1 }}\n                transition={{ duration: 0.2 }}\n              />\n            </motion.div>\n          );\n        })}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default Dock;","size_bytes":3049},"client/src/components/ui/drawer.tsx":{"content":"import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3007},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7295},"client/src/components/ui/form.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4085},"client/src/components/ui/hover-card.tsx":{"content":"import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1184},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/magic-bento.tsx":{"content":"import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface MagicBentoProps {\n  children: React.ReactNode;\n  textAutoHide?: boolean;\n  enableStars?: boolean;\n  enableSpotlight?: boolean;\n  enableBorderGlow?: boolean;\n  enableTilt?: boolean;\n  enableMagnetism?: boolean;\n  clickEffect?: boolean;\n  spotlightRadius?: number;\n  particleCount?: number;\n  glowColor?: string;\n  className?: string;\n}\n\nconst MagicBento: React.FC<MagicBentoProps> = ({\n  children,\n  textAutoHide = true,\n  enableStars = true,\n  enableSpotlight = true,\n  enableBorderGlow = true,\n  enableTilt = true,\n  enableMagnetism = true,\n  clickEffect = true,\n  spotlightRadius = 300,\n  particleCount = 12,\n  glowColor = \"132, 0, 255\",\n  className = \"\"\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMousePosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n    });\n  };\n\n  const spotlightStyle = enableSpotlight ? {\n    background: `radial-gradient(${spotlightRadius}px circle at ${mousePosition.x}px ${mousePosition.y}px, rgba(${glowColor}, 0.1), transparent 80%)`,\n  } : {};\n\n  return (\n    <motion.div\n      className={`magic-bento relative overflow-hidden ${className}`}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onMouseMove={handleMouseMove}\n      whileHover={enableTilt ? { rotateX: 5, rotateY: 10 } : {}}\n      whileTap={clickEffect ? { scale: 0.98 } : {}}\n      animate={enableMagnetism && isHovered ? { scale: 1.02 } : { scale: 1 }}\n      transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n    >\n      {/* Spotlight effect */}\n      {enableSpotlight && (\n        <div\n          className=\"absolute inset-0 opacity-0 hover:opacity-100 transition-opacity duration-500\"\n          style={spotlightStyle}\n        />\n      )}\n\n      {/* Border glow */}\n      {enableBorderGlow && (\n        <div className=\"absolute inset-0 rounded-2xl bg-gradient-to-r from-primary/20 via-primary-glow/20 to-primary/20 opacity-0 hover:opacity-100 transition-opacity duration-500 blur-sm\" />\n      )}\n\n      {/* Stars effect */}\n      {enableStars && (\n        <div className=\"absolute inset-0\">\n          {Array.from({ length: particleCount }).map((_, i) => (\n            <motion.div\n              key={i}\n              className=\"absolute w-1 h-1 bg-primary rounded-full\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n              }}\n              animate={{\n                opacity: [0, 1, 0],\n                scale: [0, 1, 0],\n              }}\n              transition={{\n                duration: 2,\n                repeat: Infinity,\n                delay: Math.random() * 2,\n              }}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Content */}\n      <div className=\"relative z-10\">\n        {children}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default MagicBento;","size_bytes":3161},"client/src/components/ui/menubar.tsx":{"content":"import * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":7974},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5046},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1230},"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":777},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"import { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1709},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-xl border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-xl border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5615},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"import * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n  VariantProps<typeof sheetVariants> { }\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet, SheetClose,\n  SheetContent, SheetDescription, SheetFooter, SheetHeader, SheetOverlay, SheetPortal, SheetTitle, SheetTrigger\n}\n\n","size_bytes":4250},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23367},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/sonner.tsx":{"content":"import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, toast } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster, toast }\n","size_bytes":894},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-xl border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":772},"client/src/components/ui/tilted-card.tsx":{"content":"import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface TiltedCardProps {\n  imageSrc?: string;\n  captionText?: string;\n  rotateAmplitude?: number;\n  scaleOnHover?: number;\n  displayOverlayContent?: boolean;\n  overlayContent?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TiltedCard: React.FC<TiltedCardProps> = ({\n  imageSrc,\n  captionText,\n  rotateAmplitude = 12,\n  scaleOnHover = 1.2,\n  displayOverlayContent = true,\n  overlayContent,\n  children,\n  className = \"\"\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n\n    const rotateX = ((mouseY - centerY) / centerY) * rotateAmplitude;\n    const rotateY = ((mouseX - centerX) / centerX) * rotateAmplitude;\n\n    setMousePosition({ x: rotateY, y: -rotateX });\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n    setMousePosition({ x: 0, y: 0 });\n  };\n\n  return (\n    <motion.div\n      className={`tilted-card ${className}`}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={handleMouseLeave}\n      onMouseMove={handleMouseMove}\n      animate={{\n        rotateX: mousePosition.y,\n        rotateY: mousePosition.x,\n        scale: isHovered ? scaleOnHover : 1,\n      }}\n      transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n      style={{ transformStyle: \"preserve-3d\" }}\n    >\n      <div className=\"card-inner relative rounded-2xl overflow-hidden glass-card\">\n        {imageSrc && (\n          <div className=\"aspect-video bg-gradient-to-br from-muted/50 to-muted/20 rounded-xl overflow-hidden\">\n            <img \n              src={imageSrc} \n              alt={captionText || \"Card image\"} \n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n        )}\n\n        {children && (\n          <div className=\"p-6\">\n            {children}\n          </div>\n        )}\n\n        {/* Overlay Content */}\n        {displayOverlayContent && overlayContent && (\n          <motion.div\n            className=\"absolute inset-0 bg-black/60 backdrop-blur-sm rounded-2xl flex items-center justify-center\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: isHovered ? 1 : 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <div className=\"text-center text-white p-6\">\n              {overlayContent}\n            </div>\n          </motion.div>\n        )}\n\n        {captionText && (\n          <div className=\"absolute bottom-4 left-4 right-4\">\n            <div className=\"glass-card\">\n              <p className=\"text-sm font-medium text-foreground\">{captionText}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default TiltedCard;","size_bytes":3059},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1739},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1435},"client/src/components/ui/tooltip.tsx":{"content":"import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1145},"client/src/components/ui/use-toast.ts":{"content":"import { useToast, toast } from \"@/hooks/use-toast\";\n\nexport { useToast, toast };\n","size_bytes":82},"replit.md":{"content":"# StackStage - Cloud Architecture Analysis Platform\n\n## Project Overview\nStackStage is a modern cloud architecture analysis platform that helps users analyze their cloud infrastructure for security vulnerabilities, cost optimization opportunities, and performance improvements. The application features a beautiful, professional design with Aurora animated backgrounds and glass morphism effects.\n\n## Architecture\n- **Frontend**: React with TypeScript, Vite, Tailwind CSS\n- **Routing**: Wouter (Replit-optimized routing library)\n- **Backend**: Express.js with TypeScript\n- **Storage**: In-memory storage (MemStorage implementation)\n- **UI Components**: shadcn/ui components with custom glass morphism styling\n- **Animations**: Custom Aurora background with smooth gradient animations\n\n## Key Features\n- Landing page with Hero and Features sections\n- User authentication (Login/Signup pages)\n- Professional SaaS pricing page with 3 tiers\n- Premium AI Assistant with enterprise chat interface\n- Enhanced architecture analysis workflow with real-time validation\n- Results visualization with diagrams\n- Report sharing and export functionality\n- Professional Aurora animated background\n- Glass morphism design elements\n- Enterprise-grade trust indicators and security features\n\n## Recent Changes\n- **2025-01-04**: Successfully migrated from Lovable to Replit\n  - Converted React Router to wouter for Replit compatibility\n  - Fixed all import issues and missing dependencies\n  - Created missing Hero and Features components\n  - Transformed Aurora background to world-class modern aesthetic\n  - Enhanced glass components for perfect backdrop interaction\n  - Fixed dark mode implementation with proper light/dark theme CSS structure\n  - Added interactive feature cards with detailed content modals\n  - Implemented TrueFocus text animation for \"Build with Confidence\"\n  - Added AnimatedList component for dynamic feature listings\n  - Enhanced Aurora background with deeper, more saturated colors\n  - Added Framer Motion animations throughout the application\n  - Created comprehensive feature detail modals with stats and analytics\n\n- **2025-01-04**: Migration from Replit Agent to Replit Environment Completed\n  - Fixed cross-env dependency issue that was preventing startup\n  - Enhanced Aurora background with professional fade transitions to eliminate harsh cutoffs\n  - Added configurable fadeHeight and fadeDirection props to Aurora component\n  - Implemented smooth gradient masks for seamless background blending\n  - Updated all pages to use new fade Aurora effects (Hero, Pricing, Analyze, About, etc.)\n  - Added professional CSS fade gradients for both light and dark modes\n  - Eliminated solid line separations when scrolling for premium SaaS UI experience\n  - Enhanced TrueFocus component with polished word-by-word animation\n  - Perfect glass morphism interaction with faded Aurora background\n  - All components now maintain consistent professional aesthetic throughout\n\n- **2025-01-04**: AI Assistant Premium Enhancement\n  - Transformed AI Assistant with enterprise-grade content and professional messaging\n  - Added comprehensive cloud architecture intelligence platform features\n  - Enhanced conversation templates with advanced enterprise scenarios\n  - Implemented premium template cards with badges, stats, and professional styling\n  - Created rich AI response examples with detailed technical analysis\n  - Added enterprise metrics, compliance information, and ROI projections\n  - Enhanced sidebar with sophisticated AI status indicators and trust badges\n  - Integrated premium quick actions with detailed descriptions and professional UI\n\n- **2025-01-04**: Major UI Enhancement Phase Completed\n  - Created comprehensive professional SaaS pricing page with 3-tier structure\n  - Enhanced Analyze page with enterprise-grade features and premium UI\n  - Implemented premium AI Assistant interface with professional chat experience\n  - Added real-time analysis, drag & drop file upload, and progressive workflows\n  - Built enterprise trust indicators and professional feature grids\n  - Integrated sophisticated animations and glass morphism throughout\n  - All pages now maintain consistent $100M SaaS aesthetic and user experience\n\n- **2025-01-04**: Premium Footer & Complete Page Suite\n  - Redesigned footer with premium SaaS aesthetic, glass morphism, and trust badges\n  - Created comprehensive suite of 8 professional pages: Enterprise, About, Privacy, Terms, Support, Status, Community, and Changelog\n  - All pages feature consistent premium design with Aurora backgrounds and professional content\n  - Integrated advanced features like trust indicators, team profiles, compliance information, and interactive elements\n  - Enhanced navigation with proper routing for all new pages\n  - Footer includes organized sections with icons, hover effects, and operational status indicators\n\n## User Preferences\n- Modern, professional design aesthetic\n- Smooth, subtle animations (not harsh or intrusive)\n- World-class UI patterns similar to Framer, Linear, or Apple\n\n## Technical Notes\n- Uses ESLint-disabled Tailwind CSS custom classes\n- Aurora background optimized for performance with device pixel ratio handling\n- Glass components enhanced with backdrop blur and saturation effects\n- All routing converted to wouter for Replit environment compatibility\n\n## Development Status\n✅ Project fully migrated and operational on Replit\n✅ Aurora background implemented with professional aesthetic\n✅ All core pages and components functional\n✅ Ready for continued development","size_bytes":5569},"client/src/pages/Pricing.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Check, X, Zap, Shield, Users, Building2, Crown, Sparkles } from \"lucide-react\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\n\nconst pricingPlans = [\n  {\n    name: \"Starter\",\n    description: \"Perfect for small teams and individual developers\",\n    price: 29,\n    period: \"per month\",\n    icon: Zap,\n    badge: null,\n    features: [\n      { name: \"Up to 5 cloud resources\", included: true },\n      { name: \"Basic security scans\", included: true },\n      { name: \"Cost optimization insights\", included: true },\n      { name: \"Email support\", included: true },\n      { name: \"Basic reporting\", included: true },\n      { name: \"API access\", included: false },\n      { name: \"Custom integrations\", included: false },\n      { name: \"Priority support\", included: false },\n      { name: \"Advanced compliance checks\", included: false },\n    ],\n    cta: \"Start Free Trial\",\n    popular: false,\n  },\n  {\n    name: \"Professional\",\n    description: \"Ideal for growing teams and mid-size companies\",\n    price: 99,\n    period: \"per month\",\n    icon: Shield,\n    badge: \"Most Popular\",\n    features: [\n      { name: \"Up to 100 cloud resources\", included: true },\n      { name: \"Advanced security analysis\", included: true },\n      { name: \"Real-time cost tracking\", included: true },\n      { name: \"Priority email & chat support\", included: true },\n      { name: \"Advanced reporting & analytics\", included: true },\n      { name: \"Full API access\", included: true },\n      { name: \"Slack/Teams integrations\", included: true },\n      { name: \"Custom compliance frameworks\", included: false },\n      { name: \"Dedicated account manager\", included: false },\n    ],\n    cta: \"Start Free Trial\",\n    popular: true,\n  },\n  {\n    name: \"Enterprise\",\n    description: \"For large organizations with complex infrastructure\",\n    price: 299,\n    period: \"per month\",\n    icon: Building2,\n    badge: \"Advanced\",\n    features: [\n      { name: \"Unlimited cloud resources\", included: true },\n      { name: \"Enterprise-grade security\", included: true },\n      { name: \"Advanced cost optimization\", included: true },\n      { name: \"24/7 priority support\", included: true },\n      { name: \"Custom reporting & dashboards\", included: true },\n      { name: \"Full API & webhook access\", included: true },\n      { name: \"All integrations included\", included: true },\n      { name: \"Custom compliance frameworks\", included: true },\n      { name: \"Dedicated account manager\", included: true },\n    ],\n    cta: \"Contact Sales\",\n    popular: false,\n  },\n];\n\nconst Pricing = () => {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      \n      {/* Aurora Background with smooth fade */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.3} \n          speed={1.5} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n        \n      <main className=\"relative flex-1\">\n        {/* Hero Section */}\n          <section className=\"pt-32 pb-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"text-center mb-16\">\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6 }}\n                >\n                  <Badge variant=\"outline\" className=\"mb-6 px-4 py-2\">\n                    <Sparkles className=\"w-4 h-4 mr-2\" />\n                    Transparent Pricing\n                  </Badge>\n                  <h1 className=\"text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-primary to-primary-glow bg-clip-text text-transparent leading-tight\">\n                    Simple, Scalable Pricing\n                  </h1>\n                  <p className=\"text-xl md:text-2xl text-muted-foreground max-w-3xl mx-auto leading-normal py-2\">\n                    Choose the perfect plan for your cloud infrastructure needs. \n                    Start with a 14-day free trial, no credit card required.\n                  </p>\n                </motion.div>\n              </div>\n\n              {/* Pricing Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto mt-6\">\n                {pricingPlans.map((plan, index) => (\n                  <motion.div\n                    key={plan.name}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6, delay: index * 0.1 }}\n                    whileHover={{ y: -5 }}\n                    className=\"relative\"\n                  >\n                    <Card className={`p-8 h-full relative overflow-hidden ${\n                      plan.popular \n                        ? 'ring-2 ring-primary shadow-2xl scale-105' \n                        : 'hover:shadow-xl'\n                    } transition-all duration-300`}>\n                      {plan.badge && (\n                        <div className=\"absolute top-0 left-1/2 transform -translate-x-1/2 z-10\">\n                          <Badge \n                            variant=\"default\" \n                            className={`px-2 py-0.5 text-[10px] font-medium shadow-md ${\n                              plan.badge === \"Most Popular\" \n                                ? 'bg-gradient-to-r from-primary to-primary-glow text-white border-none' \n                                : 'bg-gradient-to-r from-orange-500 to-orange-600 text-white border-none'\n                            }`}\n                          >\n                            {plan.badge}\n                          </Badge>\n                        </div>\n                      )}\n                      \n                      <div className=\"text-center mb-8\">\n                        <div className=\"flex items-center justify-center w-16 h-16 bg-primary/10 rounded-2xl mx-auto mb-4\">\n                          <plan.icon className=\"w-8 h-8 text-primary\" />\n                        </div>\n                        <h3 className=\"text-2xl font-bold mb-2\">{plan.name}</h3>\n                        <p className=\"text-muted-foreground mb-4\">{plan.description}</p>\n                        <div className=\"mb-6\">\n                          <span className=\"text-4xl font-bold\">${plan.price}</span>\n                          <span className=\"text-muted-foreground\">/{plan.period}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"space-y-4 mb-8\">\n                        {plan.features.map((feature, featureIndex) => (\n                          <div key={featureIndex} className=\"flex items-center\">\n                            {feature.included ? (\n                              <Check className=\"w-5 h-5 text-green-500 mr-3 flex-shrink-0\" />\n                            ) : (\n                              <X className=\"w-5 h-5 text-muted-foreground mr-3 flex-shrink-0\" />\n                            )}\n                            <span className={feature.included ? \"text-foreground\" : \"text-muted-foreground\"}>\n                              {feature.name}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n\n                      <div className=\"mt-auto\">\n                        {plan.name === \"Enterprise\" ? (\n                          <Button \n                            size=\"lg\" \n                            variant=\"outline\" \n                            className=\"w-full\"\n                            asChild\n                          >\n                            <Link href=\"/contact\">\n                              {plan.cta}\n                            </Link>\n                          </Button>\n                        ) : (\n                          <Button \n                            size=\"lg\" \n                            className={`w-full ${plan.popular ? 'bg-primary hover:bg-primary/90' : ''}`}\n                            variant={plan.popular ? \"default\" : \"outline\"}\n                            asChild\n                          >\n                            <Link href=\"/signup\">\n                              {plan.cta}\n                            </Link>\n                          </Button>\n                        )}\n                      </div>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n\n              {/* FAQ Section */}\n              <motion.div\n                className=\"mt-20 text-center\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.4 }}\n              >\n                <h2 className=\"text-3xl font-bold mb-8\">Frequently Asked Questions</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto text-left\">\n                  <div className=\"glass-card\">\n                    <h3 className=\"font-semibold mb-2\">Can I change plans anytime?</h3>\n                    <p className=\"text-muted-foreground\">\n                      Yes, you can upgrade or downgrade your plan at any time. Changes take effect immediately with prorated billing.\n                    </p>\n                  </div>\n                  <div className=\"glass-card\">\n                    <h3 className=\"font-semibold mb-2\">Is there a free trial?</h3>\n                    <p className=\"text-muted-foreground\">\n                      All plans come with a 14-day free trial. No credit card required to get started.\n                    </p>\n                  </div>\n                  <div className=\"glass-card\">\n                    <h3 className=\"font-semibold mb-2\">What payment methods do you accept?</h3>\n                    <p className=\"text-muted-foreground\">\n                      We accept all major credit cards, PayPal, and wire transfers for Enterprise customers.\n                    </p>\n                  </div>\n                  <div className=\"glass-card\">\n                    <h3 className=\"font-semibold mb-2\">Do you offer custom enterprise solutions?</h3>\n                    <p className=\"text-muted-foreground\">\n                      Yes, we provide custom solutions for large enterprises. Contact our sales team for more details.\n                    </p>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n        </section>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n};\n\nexport default Pricing;","size_bytes":10821},"client/src/components/ui/true-focus.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface TrueFocusProps {\n  sentence: string;\n  manualMode?: boolean;\n  blurAmount?: number;\n  borderColor?: string;\n  glowColor?: string;\n  animationDuration?: number;\n  pauseBetweenAnimations?: number;\n}\n\nconst TrueFocus: React.FC<TrueFocusProps> = ({\n  sentence,\n  manualMode = false,\n  blurAmount = 5,\n  borderColor = \"#6366f1\",\n  glowColor = \"rgba(99, 102, 241, 0.6)\",\n  animationDuration = 0.7,\n  pauseBetweenAnimations = 1,\n}) => {\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const words = sentence.split(' ');\n\n  useEffect(() => {\n    if (!manualMode) {\n      const interval = setInterval(() => {\n        setFocusedIndex((prev) => {\n          return (prev + 1) % words.length;\n        });\n      }, (animationDuration + pauseBetweenAnimations) * 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [words.length, manualMode, animationDuration, pauseBetweenAnimations]);\n\n  const handleMouseEnter = (index: number) => {\n    if (manualMode) {\n      setFocusedIndex(index);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-wrap items-center justify-center gap-4\">\n      {words.map((word, index) => (\n        <motion.div\n          key={index}\n          className=\"relative inline-block\"\n          onMouseEnter={() => handleMouseEnter(index)}\n          whileHover={manualMode ? { scale: 1.05 } : {}}\n        >\n          <motion.span\n            className=\"font-black text-4xl md:text-6xl leading-tight relative z-10 cursor-default select-none\"\n            style={{\n              filter: focusedIndex === index ? 'none' : `blur(${blurAmount}px)`,\n              transition: `all ${animationDuration}s cubic-bezier(0.4, 0, 0.2, 1)`,\n              color: focusedIndex === index ? 'transparent' : 'currentColor',\n              backgroundImage: focusedIndex === index \n                ? `linear-gradient(135deg, ${borderColor}, ${borderColor}dd)` \n                : 'none',\n              backgroundClip: focusedIndex === index ? 'text' : 'unset',\n              WebkitBackgroundClip: focusedIndex === index ? 'text' : 'unset',\n            }}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1, duration: 0.5 }}\n          >\n            {word}\n          </motion.span>\n          \n          {/* Camera focus corners around active word */}\n          {focusedIndex === index && (\n            <motion.div\n              className=\"absolute -inset-3 pointer-events-none z-0\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.5, ease: \"easeOut\" }}\n            >\n              {/* Gradient blur shadow background */}\n              <motion.div\n                className=\"absolute inset-0 rounded-lg\"\n                style={{\n                  background: `linear-gradient(135deg, ${glowColor}40, ${glowColor}20, transparent)`,\n                  filter: 'blur(8px)',\n                  boxShadow: `0 0 24px ${glowColor}60`,\n                }}\n                initial={{ scale: 0.8 }}\n                animate={{ scale: 1 }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n              />\n              \n              {/* Top Left Corner */}\n              <motion.div\n                className=\"absolute top-0 left-0 w-5 h-5 z-10\"\n                style={{\n                  borderTop: `2px solid ${borderColor}`,\n                  borderLeft: `2px solid ${borderColor}`,\n                  filter: `drop-shadow(0 0 4px ${glowColor})`,\n                }}\n                initial={{ x: -3, y: -3 }}\n                animate={{ x: 0, y: 0 }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n              />\n              \n              {/* Top Right Corner */}\n              <motion.div\n                className=\"absolute top-0 right-0 w-5 h-5 z-10\"\n                style={{\n                  borderTop: `2px solid ${borderColor}`,\n                  borderRight: `2px solid ${borderColor}`,\n                  filter: `drop-shadow(0 0 4px ${glowColor})`,\n                }}\n                initial={{ x: 3, y: -3 }}\n                animate={{ x: 0, y: 0 }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n              />\n              \n              {/* Bottom Left Corner */}\n              <motion.div\n                className=\"absolute bottom-0 left-0 w-5 h-5 z-10\"\n                style={{\n                  borderBottom: `2px solid ${borderColor}`,\n                  borderLeft: `2px solid ${borderColor}`,\n                  filter: `drop-shadow(0 0 4px ${glowColor})`,\n                }}\n                initial={{ x: -3, y: 3 }}\n                animate={{ x: 0, y: 0 }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n              />\n              \n              {/* Bottom Right Corner */}\n              <motion.div\n                className=\"absolute bottom-0 right-0 w-5 h-5 z-10\"\n                style={{\n                  borderBottom: `2px solid ${borderColor}`,\n                  borderRight: `2px solid ${borderColor}`,\n                  filter: `drop-shadow(0 0 4px ${glowColor})`,\n                }}\n                initial={{ x: 3, y: 3 }}\n                animate={{ x: 0, y: 0 }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n              />\n            </motion.div>\n          )}\n        </motion.div>\n      ))}\n    </div>\n  );\n};\n\nexport default TrueFocus;","size_bytes":5545},"client/src/pages/Assistant.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  Send,\n  Bot,\n  User,\n  Sparkles,\n  Zap,\n  Brain,\n  MessageSquare,\n  Settings,\n  Mic,\n  PaperclipIcon,\n  MoreHorizontal,\n  Copy,\n  ThumbsUp,\n  ThumbsDown,\n  RefreshCw,\n  Download,\n  Share,\n  Clock,\n  Shield,\n  Cpu,\n  BarChart3,\n  Code,\n  Database,\n  Cloud,\n  FileText,\n  CheckCircle,\n  AlertTriangle,\n  Info,\n  Star,\n  Lightbulb,\n  Target,\n  TrendingUp,\n  X,\n  Upload,\n  Search,\n  Share2\n} from \"lucide-react\";\n\ninterface Message {\n  id: string;\n  type: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n  status?: 'sending' | 'sent' | 'error';\n  suggestions?: string[];\n}\n\nconst Assistant = () => {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      type: 'assistant',\n      content: `Welcome to StackStage AI Assistant! I'm here to help you with cloud architecture analysis, optimization, and best practices. I can:\n\n• Analyze your infrastructure configurations\n• Provide security recommendations\n• Suggest cost optimization strategies\n• Answer questions about cloud best practices\n• Help with compliance requirements\n\nHow can I assist you today?`,\n      timestamp: new Date(),\n      suggestions: [\n        \"Analyze my AWS setup for security issues\",\n        \"How can I reduce my cloud costs?\",\n        \"Best practices for Kubernetes security\",\n        \"Explain Infrastructure as Code benefits\"\n      ]\n    }\n  ]);\n\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [settings, setSettings] = useState({\n    responseLength: 'medium',\n    technicality: 'balanced',\n    autoSuggestions: true,\n    soundNotifications: false,\n    saveChatHistory: true,\n    includeCodeExamples: true,\n    realTimeAnalysis: true,\n    complianceMode: false\n  });\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const conversationTemplates = [\n    {\n      id: \"security\",\n      title: \"Security Analysis\",\n      description: \"Get security recommendations for your infrastructure\",\n      icon: Shield,\n      prompt: \"Please analyze my cloud infrastructure for potential security vulnerabilities and provide detailed recommendations.\",\n      color: \"green\"\n    },\n    {\n      id: \"cost\",\n      title: \"Cost Optimization\",\n      description: \"Reduce cloud spending with AI insights\",\n      icon: TrendingUp,\n      prompt: \"Help me identify cost optimization opportunities in my cloud infrastructure and provide specific recommendations to reduce expenses.\",\n      color: \"blue\"\n    },\n    {\n      id: \"performance\",\n      title: \"Performance Tuning\",\n      description: \"Optimize infrastructure performance\",\n      icon: Cpu,\n      prompt: \"Analyze my infrastructure performance and suggest optimizations for better efficiency and response times.\",\n      color: \"purple\"\n    },\n    {\n      id: \"compliance\",\n      title: \"Compliance Check\",\n      description: \"Ensure regulatory compliance\",\n      icon: CheckCircle,\n      prompt: \"Review my infrastructure for compliance with industry standards like SOC 2, GDPR, and HIPAA.\",\n      color: \"orange\"\n    }\n  ];\n\n  const quickActions = [\n    { label: \"Upload Config\", icon: FileText },\n    { label: \"Scan Infrastructure\", icon: BarChart3 },\n    { label: \"Generate Report\", icon: Download },\n    { label: \"Share Analysis\", icon: Share }\n  ];\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: inputMessage,\n      timestamp: new Date(),\n      status: 'sent'\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage(\"\");\n    setIsTyping(true);\n\n    // Simulate AI response\n    setTimeout(() => {\n      const responses = [\n        {\n          content: `I've analyzed your request about \"${inputMessage.slice(0, 50)}...\". Here's my detailed analysis:\n\n**Key Findings:**\n• Identified 3 potential security improvements\n• Found 2 cost optimization opportunities\n• Detected 1 performance bottleneck\n\n**Recommendations:**\n1. **Security**: Enable MFA for all admin accounts\n2. **Cost**: Consider reserved instances for stable workloads\n3. **Performance**: Implement auto-scaling for dynamic loads\n\nWould you like me to elaborate on any of these recommendations?`,\n          suggestions: [\n            \"Tell me more about the security improvements\",\n            \"Show me the cost savings calculation\",\n            \"How do I implement auto-scaling?\",\n            \"Generate a detailed report\"\n          ]\n        },\n        {\n          content: `Based on your infrastructure analysis request, I've generated the following insights:\n\n**Infrastructure Overview:**\n• 15 EC2 instances across 3 regions\n• 8 RDS databases with varying configurations\n• 12 S3 buckets with mixed access patterns\n\n**Critical Issues Found:**\n🔴 **High Priority**: Unencrypted data at rest in 3 databases\n🟡 **Medium Priority**: Over-provisioned instances costing $2,400/month\n🟢 **Low Priority**: Missing backup policies on 4 resources\n\n**Immediate Actions Required:**\n1. Enable encryption on RDS instances\n2. Right-size EC2 instances (potential $1,200/month savings)\n3. Implement automated backup schedules\n\nShall I provide step-by-step implementation guides for these fixes?`,\n          suggestions: [\n            \"Show me how to enable RDS encryption\",\n            \"Create a rightsizing implementation plan\",\n            \"Generate backup policy templates\",\n            \"Calculate total potential savings\"\n          ]\n        }\n      ];\n\n      const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n      \n      const assistantMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        type: 'assistant',\n        content: randomResponse.content,\n        timestamp: new Date(),\n        suggestions: randomResponse.suggestions\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n      setIsTyping(false);\n    }, 2000 + Math.random() * 1000);\n  };\n\n  const handleTemplateSelect = (template: any) => {\n    setInputMessage(template.prompt);\n    setSelectedTemplate(template.id);\n    textareaRef.current?.focus();\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    setInputMessage(suggestion);\n    textareaRef.current?.focus();\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.3} \n          speed={1.5} \n          className=\"aurora-background\"\n          fadeHeight={300}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20 pb-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex-1\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 h-full\">\n            \n            {/* Sidebar */}\n            <div className=\"lg:col-span-1 space-y-6\">\n              {/* AI Assistant Info */}\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6 }}\n              >\n                <Card className=\"glass-card border-primary/20\">\n                  <CardHeader className=\"pb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-primary-glow rounded-xl flex items-center justify-center\">\n                        <Brain className=\"w-6 h-6 text-white\" />\n                      </div>\n                      <div>\n                        <CardTitle className=\"text-lg\">StackStage AI</CardTitle>\n                        <CardDescription>Cloud Architecture Expert</CardDescription>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"pt-0\">\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center text-sm\">\n                        <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                        <span className=\"text-muted-foreground\">Online & Ready</span>\n                      </div>\n                      <div className=\"flex items-center text-sm\">\n                        <Clock className=\"w-4 h-4 mr-2 text-muted-foreground\" />\n                        <span className=\"text-muted-foreground\">Response time: ~2s</span>\n                      </div>\n                      <div className=\"flex items-center text-sm\">\n                        <Star className=\"w-4 h-4 mr-2 text-yellow-500\" />\n                        <span className=\"text-muted-foreground\">99.9% accuracy</span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              {/* Quick Start Templates */}\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.1 }}\n                className=\"space-y-3\"\n              >\n                <h3 className=\"text-lg font-semibold text-foreground flex items-center\">\n                  <Lightbulb className=\"w-5 h-5 mr-2 text-primary\" />\n                  Quick Start\n                </h3>\n                <div className=\"space-y-2\">\n                  {conversationTemplates.map((template) => (\n                    <motion.div\n                      key={template.id}\n                      whileHover={{ scale: 1.01 }}\n                      whileTap={{ scale: 0.99 }}\n                    >\n                      <Card \n                        className={`cursor-pointer transition-all duration-200 glass-card border-border/30 ${\n                          selectedTemplate === template.id \n                            ? 'ring-1 ring-primary bg-primary/5' \n                            : 'hover:shadow-sm hover:border-primary/20'\n                        }`}\n                        onClick={() => handleTemplateSelect(template)}\n                      >\n                        <CardContent className=\"p-1\">\n                          <div className=\"flex items-center space-x-1\">\n                            <div className={`w-3.5 h-3.5 rounded flex items-center justify-center bg-${template.color}-500/20 flex-shrink-0`}>\n                              <template.icon className={`w-2 h-2 text-${template.color}-500`} />\n                            </div>\n                            <div className=\"min-w-0 flex-1\">\n                              <h4 className=\"font-medium text-sm leading-tight\">{template.title}</h4>\n                              <p className=\"text-xs text-muted-foreground leading-tight mt-0.5 line-clamp-2\">{template.description}</p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </motion.div>\n                  ))}\n                </div>\n              </motion.div>\n\n              {/* Quick Actions */}\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.2 }}\n                className=\"space-y-3\"\n              >\n                <h3 className=\"text-lg font-semibold text-foreground\">Quick Actions</h3>\n                <div className=\"space-y-1\">\n                  {quickActions.map((action, index) => (\n                    <Button\n                      key={index}\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"w-full justify-center glass-card h-7 px-1.5 text-sm\"\n                    >\n                      <action.icon className=\"w-2.5 h-2.5 mr-1\" />\n                      {action.label}\n                    </Button>\n                  ))}\n                </div>\n              </motion.div>\n            </div>\n\n            {/* Main Chat Interface */}\n            <div className=\"lg:col-span-3\">\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6 }}\n                className=\"h-full\"\n              >\n                <Card className=\"glass-card border-primary/20 h-full flex flex-col\">\n                  {/* Chat Header */}\n                  <CardHeader className=\"border-b border-border/50 py-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Avatar className=\"w-8 h-8\">\n                          <AvatarImage src=\"/ai-avatar.png\" />\n                          <AvatarFallback className=\"bg-gradient-to-br from-primary to-primary-glow text-white\">\n                            <Bot className=\"w-4 h-4\" />\n                          </AvatarFallback>\n                        </Avatar>\n                        <div>\n                          <h3 className=\"font-medium text-sm\">StackStage AI Assistant</h3>\n                          <div className=\"flex items-center text-xs text-muted-foreground\">\n                            <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mr-2 animate-pulse\"></div>\n                            <span>Active now</span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-1\">\n                        <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-300 text-xs py-0\">\n                          <Sparkles className=\"w-2.5 h-2.5 mr-1\" />\n                          AI Powered\n                        </Badge>\n                        <Button variant=\"outline\" size=\"sm\" onClick={() => setIsSettingsOpen(true)}>\n                          <Settings className=\"w-3.5 h-3.5\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </CardHeader>\n\n                  {/* Messages Area */}\n                  <ScrollArea className=\"flex-1 p-4\">\n                    <div className=\"space-y-4\">\n                      {messages.map((message) => (\n                        <motion.div\n                          key={message.id}\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.2 }}\n                          className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n                        >\n                          <div className={`max-w-[85%] ${message.type === 'user' ? 'order-2' : 'order-1'}`}>\n                            <div className=\"flex items-start space-x-2\">\n                              {message.type === 'assistant' && (\n                                <Avatar className=\"w-6 h-6 mt-1\">\n                                  <AvatarFallback className=\"bg-gradient-to-br from-primary to-primary-glow text-white\">\n                                    <Bot className=\"w-3 h-3\" />\n                                  </AvatarFallback>\n                                </Avatar>\n                              )}\n                              \n                              <div className=\"space-y-2 flex-1\">\n                                <div\n                                  className={`rounded-lg px-3 py-2 ${\n                                    message.type === 'user'\n                                      ? 'bg-primary text-primary-foreground ml-auto'\n                                      : 'bg-muted'\n                                  } ${message.id === '1' && message.type === 'assistant' ? 'max-h-64 overflow-auto' : ''}`}\n                                >\n                                  <div className=\"whitespace-pre-wrap text-sm leading-relaxed\">\n                                    {message.content}\n                                  </div>\n                                </div>\n                                \n                                {/* Message Actions */}\n                                {message.type === 'assistant' && (\n                                  <div className=\"flex items-center space-x-1 text-xs text-muted-foreground\">\n                                    <span>{message.timestamp.toLocaleTimeString()}</span>\n                                    <Button variant=\"ghost\" size=\"sm\" className=\"h-5 px-1.5\">\n                                      <Copy className=\"w-2.5 h-2.5\" />\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"sm\" className=\"h-5 px-1.5\">\n                                      <ThumbsUp className=\"w-2.5 h-2.5\" />\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"sm\" className=\"h-5 px-1.5\">\n                                      <ThumbsDown className=\"w-2.5 h-2.5\" />\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"sm\" className=\"h-5 px-1.5\">\n                                      <RefreshCw className=\"w-2.5 h-2.5\" />\n                                    </Button>\n                                  </div>\n                                )}\n                                \n                                {/* Suggestions */}\n                                {message.suggestions && (\n                                  <div className=\"space-y-1.5\">\n                                    <p className=\"text-xs text-muted-foreground\">Suggested follow-ups:</p>\n                                    <div className=\"flex flex-wrap gap-1.5\">\n                                      {message.suggestions.map((suggestion, index) => (\n                                        <Button\n                                          key={index}\n                                          variant=\"outline\"\n                                          size=\"sm\"\n                                          className=\"text-xs h-6 px-2\"\n                                          onClick={() => handleSuggestionClick(suggestion)}\n                                        >\n                                          {suggestion}\n                                        </Button>\n                                      ))}\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                              \n                              {message.type === 'user' && (\n                                <Avatar className=\"w-6 h-6 mt-1\">\n                                  <AvatarFallback className=\"bg-gradient-to-br from-blue-500 to-blue-600 text-white\">\n                                    <User className=\"w-3 h-3\" />\n                                  </AvatarFallback>\n                                </Avatar>\n                              )}\n                            </div>\n                          </div>\n                        </motion.div>\n                      ))}\n                      \n                      {/* Typing Indicator */}\n                      <AnimatePresence>\n                        {isTyping && (\n                          <motion.div\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            exit={{ opacity: 0, y: -10 }}\n                            className=\"flex justify-start\"\n                          >\n                            <div className=\"flex items-start space-x-2\">\n                              <Avatar className=\"w-6 h-6 mt-1\">\n                                <AvatarFallback className=\"bg-gradient-to-br from-primary to-primary-glow text-white\">\n                                  <Bot className=\"w-3 h-3\" />\n                                </AvatarFallback>\n                              </Avatar>\n                              <div className=\"bg-muted rounded-lg px-3 py-2\">\n                                <div className=\"flex space-x-1\">\n                                  <div className=\"w-1.5 h-1.5 bg-primary rounded-full animate-bounce\"></div>\n                                  <div className=\"w-1.5 h-1.5 bg-primary rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                                  <div className=\"w-1.5 h-1.5 bg-primary rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                                </div>\n                              </div>\n                            </div>\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                      \n                      <div ref={messagesEndRef} />\n                    </div>\n                  </ScrollArea>\n\n                  {/* Input Area */}\n                  <div className=\"border-t border-border/50 p-3\">\n                    <div className=\"flex items-end space-x-2\">\n                      <div className=\"flex-1 relative\">\n                        <Textarea\n                          ref={textareaRef}\n                          value={inputMessage}\n                          onChange={(e) => setInputMessage(e.target.value)}\n                          onKeyPress={handleKeyPress}\n                          placeholder=\"Ask about cloud architecture, security, costs...\"\n                          className=\"min-h-[44px] max-h-24 resize-none pr-16 text-sm\"\n                        />\n                        <div className=\"absolute bottom-2 right-2 flex items-center space-x-0.5\">\n                          <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n                            <PaperclipIcon className=\"w-3.5 h-3.5\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n                            <Mic className=\"w-3.5 h-3.5\" />\n                          </Button>\n                        </div>\n                      </div>\n                      <motion.div\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                      >\n                        <Button\n                          onClick={handleSendMessage}\n                          disabled={!inputMessage.trim() || isTyping}\n                          className=\"h-[44px] px-4\"\n                          variant=\"hero\"\n                        >\n                          <Send className=\"w-4 h-4 text-white\" />\n                        </Button>\n                      </motion.div>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between mt-2 text-xs text-muted-foreground\">\n                      <p>Press Enter to send</p>\n                      <div className=\"flex items-center space-x-3\">\n                        <span>Powered by StackStage AI</span>\n                        <div className=\"flex items-center space-x-1\">\n                          <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></div>\n                          <span>Secure</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              </motion.div>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      {/* Settings Dialog */}\n      <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n        <DialogContent className=\"glass-card border-primary/20 max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center text-xl\">\n              <Settings className=\"w-5 h-5 mr-2 text-primary\" />\n              AI Assistant Settings\n            </DialogTitle>\n          </DialogHeader>\n          \n          <div className=\"space-y-6 py-4\">\n            {/* Response Preferences */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold flex items-center\">\n                <MessageSquare className=\"w-4 h-4 mr-2 text-primary\" />\n                Response Preferences\n              </h3>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"responseLength\">Response Length</Label>\n                  <Select value={settings.responseLength} onValueChange={(value) => setSettings({...settings, responseLength: value})}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"brief\">Brief - Quick answers</SelectItem>\n                      <SelectItem value=\"medium\">Medium - Balanced detail</SelectItem>\n                      <SelectItem value=\"detailed\">Detailed - Comprehensive</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"technicality\">Technical Level</Label>\n                  <Select value={settings.technicality} onValueChange={(value) => setSettings({...settings, technicality: value})}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"beginner\">Beginner - Simple terms</SelectItem>\n                      <SelectItem value=\"balanced\">Balanced - Mixed approach</SelectItem>\n                      <SelectItem value=\"expert\">Expert - Technical depth</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Features */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold flex items-center\">\n                <Sparkles className=\"w-4 h-4 mr-2 text-primary\" />\n                AI Features\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Auto Suggestions</Label>\n                    <p className=\"text-sm text-muted-foreground\">Show suggested questions after responses</p>\n                  </div>\n                  <Switch \n                    checked={settings.autoSuggestions} \n                    onCheckedChange={(checked) => setSettings({...settings, autoSuggestions: checked})}\n                  />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Include Code Examples</Label>\n                    <p className=\"text-sm text-muted-foreground\">Provide code snippets when relevant</p>\n                  </div>\n                  <Switch \n                    checked={settings.includeCodeExamples} \n                    onCheckedChange={(checked) => setSettings({...settings, includeCodeExamples: checked})}\n                  />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Real-time Analysis</Label>\n                    <p className=\"text-sm text-muted-foreground\">Enable live infrastructure monitoring insights</p>\n                  </div>\n                  <Switch \n                    checked={settings.realTimeAnalysis} \n                    onCheckedChange={(checked) => setSettings({...settings, realTimeAnalysis: checked})}\n                  />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Compliance Mode</Label>\n                    <p className=\"text-sm text-muted-foreground\">Enhanced security and compliance checking</p>\n                  </div>\n                  <Switch \n                    checked={settings.complianceMode} \n                    onCheckedChange={(checked) => setSettings({...settings, complianceMode: checked})}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Privacy & Storage */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold flex items-center\">\n                <Shield className=\"w-4 h-4 mr-2 text-primary\" />\n                Privacy & Storage\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Save Chat History</Label>\n                    <p className=\"text-sm text-muted-foreground\">Store conversations for future reference</p>\n                  </div>\n                  <Switch \n                    checked={settings.saveChatHistory} \n                    onCheckedChange={(checked) => setSettings({...settings, saveChatHistory: checked})}\n                  />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Sound Notifications</Label>\n                    <p className=\"text-sm text-muted-foreground\">Play sound when receiving responses</p>\n                  </div>\n                  <Switch \n                    checked={settings.soundNotifications} \n                    onCheckedChange={(checked) => setSettings({...settings, soundNotifications: checked})}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex justify-end space-x-2 pt-4 border-t border-border/50\">\n            <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n              Cancel\n            </Button>\n            <Button onClick={() => setIsSettingsOpen(false)} className=\"bg-primary\">\n              Save Settings\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Assistant;","size_bytes":31874},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool\n[x] 4. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool","size_bytes":298},"client/src/pages/About.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Target,\n  Users,\n  Globe,\n  Award,\n  Rocket,\n  Heart,\n  Zap,\n  Building2,\n  TrendingUp,\n  Shield,\n  Star,\n  Linkedin,\n  Twitter,\n  Github,\n  MapPin,\n  Calendar,\n  Coffee,\n  BookOpen,\n  Lightbulb,\n  ArrowRight\n} from \"lucide-react\";\n\nconst About = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const stats = [\n    { value: \"2021\", label: \"Founded\" },\n    { value: \"50+\", label: \"Team Members\" },\n    { value: \"10K+\", label: \"Active Users\" },\n    { value: \"99.9%\", label: \"Uptime\" }\n  ];\n\n  const values = [\n    {\n      icon: Target,\n      title: \"Innovation First\",\n      description: \"We push the boundaries of what's possible in cloud architecture analysis\"\n    },\n    {\n      icon: Users,\n      title: \"Customer Success\",\n      description: \"Your success is our success. We're committed to delivering exceptional value\"\n    },\n    {\n      icon: Shield,\n      title: \"Security & Trust\",\n      description: \"Enterprise-grade security and transparency in everything we do\"\n    },\n    {\n      icon: Globe,\n      title: \"Global Impact\",\n      description: \"Helping organizations worldwide build better, more secure infrastructure\"\n    }\n  ];\n\n  const team = [\n    {\n      name: \"Sarah Chen\",\n      role: \"CEO & Co-founder\",\n      bio: \"Former AWS architect with 10+ years in cloud infrastructure\",\n      avatar: \"/api/placeholder/150/150\",\n      socials: {\n        linkedin: \"https://linkedin.com\",\n        twitter: \"https://twitter.com\"\n      }\n    },\n    {\n      name: \"Marcus Rodriguez\",\n      role: \"CTO & Co-founder\", \n      bio: \"Ex-Google engineer specializing in AI and machine learning\",\n      avatar: \"/api/placeholder/150/150\",\n      socials: {\n        linkedin: \"https://linkedin.com\",\n        github: \"https://github.com\"\n      }\n    },\n    {\n      name: \"Emily Watson\",\n      role: \"VP of Engineering\",\n      bio: \"Cloud security expert with extensive enterprise experience\",\n      avatar: \"/api/placeholder/150/150\", \n      socials: {\n        linkedin: \"https://linkedin.com\",\n        twitter: \"https://twitter.com\"\n      }\n    },\n    {\n      name: \"David Kim\",\n      role: \"Head of Product\",\n      bio: \"Product leader focused on developer experience and usability\",\n      avatar: \"/api/placeholder/150/150\",\n      socials: {\n        linkedin: \"https://linkedin.com\",\n        twitter: \"https://twitter.com\"\n      }\n    }\n  ];\n\n  const milestones = [\n    {\n      year: \"2021\",\n      title: \"Company Founded\",\n      description: \"StackStage was born from the need for better cloud architecture analysis\"\n    },\n    {\n      year: \"2022\", \n      title: \"Series A Funding\",\n      description: \"Raised $10M to accelerate product development and team growth\"\n    },\n    {\n      year: \"2023\",\n      title: \"Enterprise Launch\", \n      description: \"Launched enterprise features and achieved SOC 2 Type II compliance\"\n    },\n    {\n      year: \"2024\",\n      title: \"AI Integration\",\n      description: \"Introduced AI-powered analysis and optimization recommendations\"\n    },\n    {\n      year: \"2025\",\n      title: \"Global Expansion\",\n      description: \"Expanding to serve customers across all major cloud platforms\"\n    }\n  ];\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.2} \n          speed={2} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className=\"bg-primary/10 text-primary border-primary/20 px-4 py-2\">\n                  <Heart className=\"w-4 h-4 mr-2\" />\n                  Our Story\n                </Badge>\n                <h1 className=\"text-5xl md:text-7xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    Building the Future of\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    Cloud Intelligence\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  We're on a mission to help organizations build secure, optimized, and cost-effective \n                  cloud infrastructures through the power of AI and automation.\n                </p>\n              </motion.div>\n\n              {/* Stats */}\n              <motion.div variants={itemVariants} className=\"grid grid-cols-2 md:grid-cols-4 gap-8 pt-16\">\n                {stats.map((stat, index) => (\n                  <div key={index} className=\"text-center\">\n                    <div className=\"text-3xl md:text-4xl font-bold text-primary mb-2\">{stat.value}</div>\n                    <div className=\"text-muted-foreground\">{stat.label}</div>\n                  </div>\n                ))}\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Mission Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <h2 className=\"text-4xl font-bold\">Our Mission</h2>\n                  <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                    We believe that every organization should have access to enterprise-grade cloud intelligence. \n                    Our platform democratizes advanced cloud architecture analysis, making it accessible to teams \n                    of all sizes.\n                  </p>\n                  <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                    Through AI-powered insights, automated optimization recommendations, and comprehensive security \n                    analysis, we help teams build with confidence and scale efficiently.\n                  </p>\n                </div>\n                <Button className=\"text-lg px-6 py-3\">\n                  <Rocket className=\"w-5 h-5 mr-2\" />\n                  Join Our Mission\n                </Button>\n              </motion.div>\n\n              <motion.div variants={itemVariants}>\n                <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"grid grid-cols-2 gap-6\">\n                      <div className=\"text-center\">\n                        <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-3\">\n                          <TrendingUp className=\"w-8 h-8 text-primary\" />\n                        </div>\n                        <div className=\"text-2xl font-bold mb-1\">500%</div>\n                        <div className=\"text-sm text-muted-foreground\">Cost Savings</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-3\">\n                          <Shield className=\"w-8 h-8 text-primary\" />\n                        </div>\n                        <div className=\"text-2xl font-bold mb-1\">1000+</div>\n                        <div className=\"text-sm text-muted-foreground\">Vulnerabilities Fixed</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-3\">\n                          <Zap className=\"w-8 h-8 text-primary\" />\n                        </div>\n                        <div className=\"text-2xl font-bold mb-1\">10x</div>\n                        <div className=\"text-sm text-muted-foreground\">Faster Analysis</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-3\">\n                          <Users className=\"w-8 h-8 text-primary\" />\n                        </div>\n                        <div className=\"text-2xl font-bold mb-1\">10K+</div>\n                        <div className=\"text-sm text-muted-foreground\">Happy Users</div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Values Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-16\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-4xl font-bold\">Our Values</h2>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n                  The principles that guide everything we do\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n                {values.map((value, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card h-full text-center border-primary/10 hover:border-primary/30 transition-all duration-300\">\n                      <CardHeader>\n                        <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                          <value.icon className=\"w-8 h-8 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-xl\">{value.title}</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <CardDescription className=\"text-base leading-relaxed\">\n                          {value.description}\n                        </CardDescription>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Team Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-16\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-4xl font-bold\">Meet Our Team</h2>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n                  Passionate experts dedicated to revolutionizing cloud infrastructure\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n                {team.map((member, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card text-center border-primary/10 hover:border-primary/30 transition-all duration-300\">\n                      <CardHeader>\n                        <Avatar className=\"w-24 h-24 mx-auto mb-4\">\n                          <AvatarImage src={member.avatar} alt={member.name} />\n                          <AvatarFallback className=\"text-lg\">\n                            {member.name.split(' ').map(n => n[0]).join('')}\n                          </AvatarFallback>\n                        </Avatar>\n                        <div>\n                          <CardTitle className=\"text-xl mb-1\">{member.name}</CardTitle>\n                          <CardDescription className=\"text-primary font-medium\">\n                            {member.role}\n                          </CardDescription>\n                        </div>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <p className=\"text-sm text-muted-foreground\">{member.bio}</p>\n                        <div className=\"flex justify-center space-x-3\">\n                          {member.socials.linkedin && (\n                            <a href={member.socials.linkedin} className=\"text-muted-foreground hover:text-primary transition-colors\">\n                              <Linkedin className=\"w-4 h-4\" />\n                            </a>\n                          )}\n                          {member.socials.twitter && (\n                            <a href={member.socials.twitter} className=\"text-muted-foreground hover:text-primary transition-colors\">\n                              <Twitter className=\"w-4 h-4\" />\n                            </a>\n                          )}\n                          {member.socials.github && (\n                            <a href={member.socials.github} className=\"text-muted-foreground hover:text-primary transition-colors\">\n                              <Github className=\"w-4 h-4\" />\n                            </a>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Timeline Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-16\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-4xl font-bold\">Our Journey</h2>\n                <p className=\"text-xl text-muted-foreground\">\n                  Key milestones in our mission to transform cloud infrastructure\n                </p>\n              </motion.div>\n\n              <div className=\"space-y-8\">\n                {milestones.map((milestone, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <div className=\"flex items-start space-x-6\">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center\">\n                          <Calendar className=\"w-6 h-6 text-primary\" />\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-3\">\n                          <Badge variant=\"outline\" className=\"font-mono\">\n                            {milestone.year}\n                          </Badge>\n                          <h3 className=\"text-xl font-semibold\">{milestone.title}</h3>\n                        </div>\n                        <p className=\"text-muted-foreground leading-relaxed\">\n                          {milestone.description}\n                        </p>\n                      </div>\n                    </div>\n                    {index < milestones.length - 1 && (\n                      <div className=\"ml-6 mt-4 w-px h-8 bg-border/50\" />\n                    )}\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-12 text-center space-y-6\">\n                  <div className=\"space-y-4\">\n                    <h2 className=\"text-3xl font-bold\">Join Our Journey</h2>\n                    <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                      We're always looking for talented individuals who share our passion for \n                      innovation and excellence. Join us in building the future of cloud intelligence.\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                    <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <Users className=\"w-5 h-5 mr-2\" />\n                      View Open Positions\n                    </Button>\n                    <Button variant=\"outline\" size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <Coffee className=\"w-5 h-5 mr-2\" />\n                      Contact Us\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default About;","size_bytes":19005},"client/src/pages/Changelog.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  FileText,\n  Calendar,\n  Star,\n  Zap,\n  Bug,\n  Shield,\n  Plus,\n  Wrench,\n  AlertTriangle,\n  CheckCircle,\n  Search,\n  Filter,\n  Download,\n  Rss,\n  Bell,\n  ArrowRight,\n  Github,\n  ExternalLink\n} from \"lucide-react\";\n\nconst Changelog = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const releases = [\n    {\n      version: \"v2.4.0\",\n      date: \"January 4, 2025\",\n      type: \"feature\",\n      title: \"Enhanced AI Analysis Engine\",\n      description: \"Major improvements to our AI-powered analysis capabilities with better accuracy and performance.\",\n      changes: [\n        {\n          type: \"feature\",\n          title: \"Advanced ML Models\",\n          description: \"Deployed new machine learning models for improved cost optimization recommendations\"\n        },\n        {\n          type: \"feature\", \n          title: \"Real-time Analysis\",\n          description: \"Added support for real-time infrastructure monitoring and instant alerts\"\n        },\n        {\n          type: \"improvement\",\n          title: \"Performance Boost\",\n          description: \"Analysis speed improved by 40% through optimization of processing algorithms\"\n        },\n        {\n          type: \"fix\",\n          title: \"Memory Leak Fix\",\n          description: \"Resolved memory leak in the analysis engine affecting long-running processes\"\n        }\n      ],\n      breaking: false,\n      stats: {\n        commits: 47,\n        contributors: 8,\n        linesChanged: 12500\n      }\n    },\n    {\n      version: \"v2.3.2\",\n      date: \"December 28, 2024\",\n      type: \"fix\",\n      title: \"Security Updates & Bug Fixes\",\n      description: \"Critical security patches and various bug fixes to improve stability.\",\n      changes: [\n        {\n          type: \"security\",\n          title: \"Authentication Security\",\n          description: \"Enhanced authentication system with improved session management\"\n        },\n        {\n          type: \"fix\",\n          title: \"API Rate Limiting\",\n          description: \"Fixed issues with API rate limiting causing unexpected errors\"\n        },\n        {\n          type: \"fix\",\n          title: \"Dashboard Loading\",\n          description: \"Resolved dashboard loading issues for users with large datasets\"\n        }\n      ],\n      breaking: false,\n      stats: {\n        commits: 23,\n        contributors: 5,\n        linesChanged: 3200\n      }\n    },\n    {\n      version: \"v2.3.0\",\n      date: \"December 15, 2024\",\n      type: \"feature\",\n      title: \"Enterprise Features & Integrations\",\n      description: \"New enterprise-grade features including SSO, advanced integrations, and compliance tools.\",\n      changes: [\n        {\n          type: \"feature\",\n          title: \"Single Sign-On (SSO)\",\n          description: \"Added support for SAML and OAuth SSO providers for enterprise customers\"\n        },\n        {\n          type: \"feature\",\n          title: \"Kubernetes Integration\",\n          description: \"Native Kubernetes cluster analysis and optimization recommendations\"\n        },\n        {\n          type: \"feature\",\n          title: \"Compliance Dashboard\",\n          description: \"New dashboard for tracking SOC 2, GDPR, and other compliance requirements\"\n        },\n        {\n          type: \"improvement\",\n          title: \"API Documentation\",\n          description: \"Completely redesigned API documentation with interactive examples\"\n        }\n      ],\n      breaking: true,\n      stats: {\n        commits: 89,\n        contributors: 12,\n        linesChanged: 25600\n      }\n    },\n    {\n      version: \"v2.2.1\",\n      date: \"November 30, 2024\",\n      type: \"fix\",\n      title: \"Performance Optimizations\",\n      description: \"Various performance improvements and bug fixes based on user feedback.\",\n      changes: [\n        {\n          type: \"improvement\",\n          title: \"Database Optimization\",\n          description: \"Optimized database queries reducing average response time by 25%\"\n        },\n        {\n          type: \"fix\",\n          title: \"Export Functionality\",\n          description: \"Fixed issues with PDF and CSV export for large reports\"\n        },\n        {\n          type: \"improvement\",\n          title: \"Mobile Experience\",\n          description: \"Improved mobile responsiveness across all dashboard views\"\n        }\n      ],\n      breaking: false,\n      stats: {\n        commits: 31,\n        contributors: 6,\n        linesChanged: 5800\n      }\n    },\n    {\n      version: \"v2.2.0\",\n      date: \"November 15, 2024\",\n      type: \"feature\",\n      title: \"Advanced Security Scanning\",\n      description: \"Comprehensive security analysis with vulnerability detection and remediation suggestions.\",\n      changes: [\n        {\n          type: \"feature\",\n          title: \"Vulnerability Scanner\",\n          description: \"Added comprehensive vulnerability scanning for cloud infrastructure\"\n        },\n        {\n          type: \"feature\",\n          title: \"Security Recommendations\",\n          description: \"AI-powered security recommendations with prioritized action items\"\n        },\n        {\n          type: \"feature\",\n          title: \"Compliance Checks\",\n          description: \"Automated compliance checking against industry standards\"\n        },\n        {\n          type: \"improvement\",\n          title: \"Reporting Engine\",\n          description: \"Enhanced reporting with security-focused dashboards and metrics\"\n        }\n      ],\n      breaking: false,\n      stats: {\n        commits: 67,\n        contributors: 10,\n        linesChanged: 18900\n      }\n    }\n  ];\n\n  const changeTypeConfig = {\n    feature: {\n      icon: Plus,\n      color: \"bg-green-500/10 text-green-700 dark:text-green-300 border-green-500/20\",\n      label: \"New Feature\"\n    },\n    improvement: {\n      icon: Zap,\n      color: \"bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20\",\n      label: \"Improvement\"\n    },\n    fix: {\n      icon: Bug,\n      color: \"bg-orange-500/10 text-orange-700 dark:text-orange-300 border-orange-500/20\",\n      label: \"Bug Fix\"\n    },\n    security: {\n      icon: Shield,\n      color: \"bg-red-500/10 text-red-700 dark:text-red-300 border-red-500/20\",\n      label: \"Security\"\n    },\n    breaking: {\n      icon: AlertTriangle,\n      color: \"bg-purple-500/10 text-purple-700 dark:text-purple-300 border-purple-500/20\",\n      label: \"Breaking Change\"\n    }\n  };\n\n  const releaseTypeConfig = {\n    feature: {\n      color: \"bg-green-500/10 text-green-700 dark:text-green-300 border-green-500/20\",\n      label: \"Feature Release\"\n    },\n    fix: {\n      color: \"bg-orange-500/10 text-orange-700 dark:text-orange-300 border-orange-500/20\",\n      label: \"Bug Fix Release\"\n    },\n    security: {\n      color: \"bg-red-500/10 text-red-700 dark:text-red-300 border-red-500/20\",\n      label: \"Security Release\"\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background with smooth fade */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.2} \n          speed={2} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className=\"bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20 px-4 py-2\">\n                  <FileText className=\"w-4 h-4 mr-2\" />\n                  Changelog\n                </Badge>\n                <h1 className=\"text-5xl md:text-6xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    What's\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    New\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  Stay up to date with the latest features, improvements, and fixes in StackStage. \n                  We're constantly evolving to serve you better.\n                </p>\n              </motion.div>\n\n              {/* Quick Actions */}\n              <motion.div variants={itemVariants} className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                <div className=\"relative flex-1 max-w-md\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Search releases...\"\n                    className=\"pl-10 glass-input\"\n                  />\n                </div>\n                <Button variant=\"outline\">\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  Filter\n                </Button>\n                <Button variant=\"outline\">\n                  <Rss className=\"w-4 h-4 mr-2\" />\n                  RSS Feed\n                </Button>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Latest Release Highlight */}\n        <section className=\"py-8\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Badge className=\"bg-primary/10 text-primary border-primary/20\">\n                        <Star className=\"w-3 h-3 mr-1\" />\n                        Latest Release\n                      </Badge>\n                      <Badge className={releaseTypeConfig[releases[0].type].color}>\n                        {releaseTypeConfig[releases[0].type].label}\n                      </Badge>\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">{releases[0].date}</div>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h2 className=\"text-2xl font-bold mb-2\">{releases[0].version}: {releases[0].title}</h2>\n                      <p className=\"text-muted-foreground\">{releases[0].description}</p>\n                    </div>\n                    <div className=\"flex items-center space-x-6 text-sm\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Github className=\"w-4 h-4 text-muted-foreground\" />\n                        <span>{releases[0].stats.commits} commits</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <FileText className=\"w-4 h-4 text-muted-foreground\" />\n                        <span>{releases[0].stats.linesChanged.toLocaleString()} lines changed</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <CheckCircle className=\"w-4 h-4 text-muted-foreground\" />\n                        <span>{releases[0].stats.contributors} contributors</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                      <Button>\n                        <Download className=\"w-4 h-4 mr-2\" />\n                        View Release\n                      </Button>\n                      <Button variant=\"outline\">\n                        <Github className=\"w-4 h-4 mr-2\" />\n                        GitHub Release\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Release History */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Release History</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Complete history of all StackStage releases\n                </p>\n              </motion.div>\n\n              <div className=\"space-y-8\">\n                {releases.map((release, index) => (\n                  <motion.div key={index} variants={itemVariants} id={`release-${release.version}`}>\n                    <Card className=\"glass-card border-border/50\">\n                      <CardHeader>\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"space-y-3\">\n                            <div className=\"flex items-center space-x-3\">\n                              <Badge className={releaseTypeConfig[release.type].color}>\n                                {releaseTypeConfig[release.type].label}\n                              </Badge>\n                              {release.breaking && (\n                                <Badge className={changeTypeConfig.breaking.color}>\n                                  <AlertTriangle className=\"w-3 h-3 mr-1\" />\n                                  Breaking Changes\n                                </Badge>\n                              )}\n                              <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                                <Calendar className=\"w-4 h-4\" />\n                                <span>{release.date}</span>\n                              </div>\n                            </div>\n                            <div>\n                              <CardTitle className=\"text-2xl mb-2\">{release.version}: {release.title}</CardTitle>\n                              <CardDescription className=\"text-base\">{release.description}</CardDescription>\n                            </div>\n                          </div>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <ExternalLink className=\"w-4 h-4 mr-2\" />\n                            View on GitHub\n                          </Button>\n                        </div>\n                      </CardHeader>\n                      <CardContent className=\"space-y-6\">\n                        {/* Changes List */}\n                        <div className=\"space-y-4\">\n                          <h4 className=\"font-semibold\">What's Changed</h4>\n                          <div className=\"space-y-3\">\n                            {release.changes.map((change, changeIndex) => {\n                              const config = changeTypeConfig[change.type];\n                              const IconComponent = config.icon;\n                              return (\n                                <div key={changeIndex} className=\"flex items-start space-x-3\">\n                                  <div className={`w-6 h-6 rounded-lg flex items-center justify-center flex-shrink-0 ${config.color}`}>\n                                    <IconComponent className=\"w-3 h-3\" />\n                                  </div>\n                                  <div>\n                                    <div className=\"font-medium\">{change.title}</div>\n                                    <div className=\"text-sm text-muted-foreground\">{change.description}</div>\n                                  </div>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        </div>\n\n                        {/* Release Stats */}\n                        <div className=\"flex items-center space-x-6 text-sm border-t border-border/50 pt-4\">\n                          <div className=\"flex items-center space-x-2\">\n                            <Github className=\"w-4 h-4 text-muted-foreground\" />\n                            <span>{release.stats.commits} commits</span>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <FileText className=\"w-4 h-4 text-muted-foreground\" />\n                            <span>{release.stats.linesChanged.toLocaleString()} lines changed</span>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"w-4 h-4 text-muted-foreground\" />\n                            <span>{release.stats.contributors} contributors</span>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                    {index < releases.length - 1 && <Separator className=\"opacity-30\" />}\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Subscribe to Updates */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-12 text-center space-y-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto\">\n                      <Bell className=\"w-8 h-8 text-primary\" />\n                    </div>\n                    <h2 className=\"text-3xl font-bold\">Stay Updated</h2>\n                    <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                      Never miss a release! Subscribe to our changelog to get notified about \n                      new features, improvements, and important updates.\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                    <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <Bell className=\"w-5 h-5 mr-2\" />\n                      Subscribe to Updates\n                    </Button>\n                    <Button variant=\"outline\" size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <Rss className=\"w-5 h-5 mr-2\" />\n                      RSS Feed\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Changelog;","size_bytes":20398},"client/src/pages/Community.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Users,\n  MessageCircle,\n  Github,\n  Twitter,\n  Linkedin,\n  Youtube,\n  BookOpen,\n  Calendar,\n  Award,\n  TrendingUp,\n  Heart,\n  ExternalLink,\n  Star,\n  Code,\n  Lightbulb,\n  Coffee,\n  Globe,\n  Zap,\n  Target,\n  ArrowRight,\n  Download,\n  Play\n} from \"lucide-react\";\n\nconst Community = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const stats = [\n    { value: \"12K+\", label: \"Community Members\" },\n    { value: \"2.5K\", label: \"Monthly Active Users\" },\n    { value: \"450+\", label: \"Discussions\" },\n    { value: \"89%\", label: \"Questions Answered\" }\n  ];\n\n  const platforms = [\n    {\n      name: \"Discord\",\n      description: \"Real-time chat with the community and team\",\n      members: \"8,200+\",\n      icon: MessageCircle,\n      color: \"bg-indigo-500/10 text-indigo-700 dark:text-indigo-300 border-indigo-500/20\",\n      link: \"https://discord.gg/stackstage\",\n      features: [\"Live discussions\", \"Technical support\", \"Feature announcements\"]\n    },\n    {\n      name: \"GitHub\",\n      description: \"Contribute code, report issues, and collaborate\",\n      members: \"3,400+\",\n      icon: Github,\n      color: \"bg-gray-500/10 text-gray-700 dark:text-gray-300 border-gray-500/20\",\n      link: \"https://github.com/stackstage\",\n      features: [\"Open source projects\", \"Bug reports\", \"Feature requests\"]\n    },\n    {\n      name: \"Forum\",\n      description: \"In-depth discussions and knowledge sharing\",\n      members: \"5,600+\",\n      icon: BookOpen,\n      color: \"bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20\",\n      link: \"https://forum.stackstage.com\",\n      features: [\"Q&A discussions\", \"Best practices\", \"Use case sharing\"]\n    },\n    {\n      name: \"LinkedIn\",\n      description: \"Professional networking and industry insights\",\n      members: \"2,800+\",\n      icon: Linkedin,\n      color: \"bg-blue-600/10 text-blue-700 dark:text-blue-300 border-blue-600/20\",\n      link: \"https://linkedin.com/company/stackstage\",\n      features: [\"Industry updates\", \"Professional network\", \"Job opportunities\"]\n    }\n  ];\n\n  const events = [\n    {\n      title: \"StackStage Monthly Meetup\",\n      date: \"Jan 15, 2025\",\n      time: \"3:00 PM PST\",\n      type: \"Virtual\",\n      description: \"Monthly community meetup featuring user presentations and Q&A\",\n      attendees: 150,\n      status: \"upcoming\"\n    },\n    {\n      title: \"Cloud Security Workshop\",\n      date: \"Jan 28, 2025\", \n      time: \"2:00 PM EST\",\n      type: \"Workshop\",\n      description: \"Hands-on workshop covering advanced cloud security best practices\",\n      attendees: 75,\n      status: \"upcoming\"\n    },\n    {\n      title: \"User Conference 2025\",\n      date: \"Mar 12-14, 2025\",\n      time: \"All Day\",\n      type: \"Conference\",\n      description: \"Annual user conference with talks, workshops, and networking\",\n      attendees: 500,\n      status: \"early-bird\"\n    }\n  ];\n\n  const contributors = [\n    {\n      name: \"Alex Thompson\",\n      role: \"Community Leader\",\n      contributions: \"120+ answers\",\n      avatar: \"/api/placeholder/150/150\",\n      badge: \"Top Contributor\",\n      badgeColor: \"bg-gold-500/10 text-yellow-700 dark:text-yellow-300\"\n    },\n    {\n      name: \"Maria Rodriguez\",\n      role: \"Technical Writer\",\n      contributions: \"85+ tutorials\",\n      avatar: \"/api/placeholder/150/150\",\n      badge: \"Content Creator\",\n      badgeColor: \"bg-purple-500/10 text-purple-700 dark:text-purple-300\"\n    },\n    {\n      name: \"David Chen\",\n      role: \"Open Source Maintainer\",\n      contributions: \"200+ commits\",\n      avatar: \"/api/placeholder/150/150\",\n      badge: \"Code Contributor\",\n      badgeColor: \"bg-green-500/10 text-green-700 dark:text-green-300\"\n    },\n    {\n      name: \"Sarah Kim\",\n      role: \"Community Moderator\",\n      contributions: \"300+ moderated posts\",\n      avatar: \"/api/placeholder/150/150\",\n      badge: \"Moderator\",\n      badgeColor: \"bg-blue-500/10 text-blue-700 dark:text-blue-300\"\n    }\n  ];\n\n  const resources = [\n    {\n      title: \"Getting Started Guide\",\n      description: \"Complete guide for new community members\",\n      type: \"Guide\",\n      icon: BookOpen,\n      link: \"/docs/community/getting-started\"\n    },\n    {\n      title: \"Community Guidelines\",\n      description: \"Rules and best practices for participation\",\n      type: \"Guidelines\",\n      icon: Target,\n      link: \"/docs/community/guidelines\"\n    },\n    {\n      title: \"Contribution Guide\",\n      description: \"How to contribute to StackStage projects\",\n      type: \"Guide\",\n      icon: Code,\n      link: \"/docs/community/contributing\"\n    },\n    {\n      title: \"Event Calendar\",\n      description: \"Upcoming community events and meetups\",\n      type: \"Calendar\",\n      icon: Calendar,\n      link: \"/community/events\"\n    }\n  ];\n\n  const getEventStatusColor = (status: string) => {\n    switch (status) {\n      case 'upcoming': return 'bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20';\n      case 'early-bird': return 'bg-green-500/10 text-green-700 dark:text-green-300 border-green-500/20';\n      case 'sold-out': return 'bg-red-500/10 text-red-700 dark:text-red-300 border-red-500/20';\n      default: return 'bg-gray-500/10 text-gray-700 dark:text-gray-300 border-gray-500/20';\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background with smooth fade */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.2} \n          speed={2} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className=\"bg-purple-500/10 text-purple-700 dark:text-purple-300 border-purple-500/20 px-4 py-2\">\n                  <Users className=\"w-4 h-4 mr-2\" />\n                  Join Our Community\n                </Badge>\n                <h1 className=\"text-5xl md:text-6xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    Connect, Learn &\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    Grow Together\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  Join thousands of cloud professionals sharing knowledge, solving problems, \n                  and building the future of cloud infrastructure together.\n                </p>\n              </motion.div>\n\n              {/* Stats */}\n              <motion.div variants={itemVariants} className=\"grid grid-cols-2 md:grid-cols-4 gap-8 pt-8\">\n                {stats.map((stat, index) => (\n                  <div key={index} className=\"text-center\">\n                    <div className=\"text-3xl md:text-4xl font-bold text-primary mb-1\">{stat.value}</div>\n                    <div className=\"text-sm text-muted-foreground\">{stat.label}</div>\n                  </div>\n                ))}\n              </motion.div>\n\n              <motion.div variants={itemVariants} className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                  <MessageCircle className=\"w-5 h-5 mr-2\" />\n                  Join Discord\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" className=\"text-lg px-8 py-4\">\n                  <Github className=\"w-5 h-5 mr-2\" />\n                  View on GitHub\n                </Button>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Community Platforms */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Where We Connect</h2>\n                <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                  Choose your preferred platform to engage with the StackStage community\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {platforms.map((platform, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card h-full border-primary/10 hover:border-primary/30 transition-all duration-300 group\">\n                      <CardHeader>\n                        <div className=\"flex items-center justify-between mb-4\">\n                          <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center group-hover:bg-primary/20 transition-colors\">\n                            <platform.icon className=\"w-6 h-6 text-primary\" />\n                          </div>\n                          <Badge className={platform.color}>\n                            {platform.members} members\n                          </Badge>\n                        </div>\n                        <CardTitle className=\"text-xl flex items-center\">\n                          {platform.name}\n                          <ExternalLink className=\"w-4 h-4 ml-2 opacity-50\" />\n                        </CardTitle>\n                        <CardDescription className=\"text-base\">{platform.description}</CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <ul className=\"space-y-2\">\n                          {platform.features.map((feature, featureIndex) => (\n                            <li key={featureIndex} className=\"flex items-center text-sm\">\n                              <div className=\"w-1.5 h-1.5 bg-primary rounded-full mr-3\" />\n                              {feature}\n                            </li>\n                          ))}\n                        </ul>\n                        <a href={platform.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"block\">\n                          <Button variant=\"outline\" className=\"w-full group-hover:bg-primary/10\">\n                            Join {platform.name}\n                            <ArrowRight className=\"w-4 h-4 ml-2\" />\n                          </Button>\n                        </a>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Upcoming Events */}\n        <section className=\"py-16\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Upcoming Events</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Join us for meetups, workshops, and conferences\n                </p>\n              </motion.div>\n\n              <div className=\"space-y-6\">\n                {events.map((event, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card border-border/50\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"space-y-3\">\n                            <div className=\"flex items-center space-x-3\">\n                              <Badge className={getEventStatusColor(event.status)}>\n                                {event.status === 'early-bird' ? 'Early Bird' : event.status}\n                              </Badge>\n                              <Badge variant=\"outline\">{event.type}</Badge>\n                            </div>\n                            <div>\n                              <h3 className=\"text-xl font-semibold mb-2\">{event.title}</h3>\n                              <p className=\"text-muted-foreground\">{event.description}</p>\n                            </div>\n                            <div className=\"flex items-center space-x-6 text-sm\">\n                              <div className=\"flex items-center space-x-2\">\n                                <Calendar className=\"w-4 h-4 text-muted-foreground\" />\n                                <span>{event.date} at {event.time}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-2\">\n                                <Users className=\"w-4 h-4 text-muted-foreground\" />\n                                <span>{event.attendees} expected attendees</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex flex-col space-y-2\">\n                            <Button size=\"sm\">\n                              Register\n                            </Button>\n                            <Button variant=\"outline\" size=\"sm\">\n                              <Calendar className=\"w-4 h-4 mr-2\" />\n                              Add to Calendar\n                            </Button>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Community Contributors */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Community Heroes</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Meet the amazing contributors who make our community thrive\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {contributors.map((contributor, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card text-center border-primary/10 hover:border-primary/30 transition-all duration-300\">\n                      <CardHeader>\n                        <Avatar className=\"w-20 h-20 mx-auto mb-4\">\n                          <AvatarImage src={contributor.avatar} alt={contributor.name} />\n                          <AvatarFallback className=\"text-lg\">\n                            {contributor.name.split(' ').map(n => n[0]).join('')}\n                          </AvatarFallback>\n                        </Avatar>\n                        <div>\n                          <CardTitle className=\"text-lg mb-1\">{contributor.name}</CardTitle>\n                          <CardDescription className=\"text-sm\">{contributor.role}</CardDescription>\n                        </div>\n                      </CardHeader>\n                      <CardContent className=\"space-y-3\">\n                        <Badge className={contributor.badgeColor}>\n                          <Star className=\"w-3 h-3 mr-1\" />\n                          {contributor.badge}\n                        </Badge>\n                        <p className=\"text-sm text-muted-foreground\">{contributor.contributions}</p>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Community Resources */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Community Resources</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Everything you need to get started and contribute effectively\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {resources.map((resource, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card h-full border-primary/10 hover:border-primary/30 transition-all duration-300 group\">\n                      <CardHeader>\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center mb-4 group-hover:bg-primary/20 transition-colors\">\n                          <resource.icon className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-lg\">{resource.title}</CardTitle>\n                        <CardDescription>{resource.description}</CardDescription>\n                      </CardHeader>\n                      <CardContent>\n                        <Link to={resource.link}>\n                          <Button variant=\"outline\" className=\"w-full group-hover:bg-primary/10\">\n                            {resource.type}\n                            <ArrowRight className=\"w-4 h-4 ml-2\" />\n                          </Button>\n                        </Link>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-12 text-center space-y-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto\">\n                      <Heart className=\"w-8 h-8 text-primary\" />\n                    </div>\n                    <h2 className=\"text-3xl font-bold\">Ready to Join?</h2>\n                    <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                      Become part of our growing community of cloud professionals. \n                      Share knowledge, get help, and help others succeed.\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                    <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <MessageCircle className=\"w-5 h-5 mr-2\" />\n                      Join Discord Today\n                    </Button>\n                    <Button variant=\"outline\" size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <BookOpen className=\"w-5 h-5 mr-2\" />\n                      Browse Forum\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Community;","size_bytes":21505},"client/src/pages/Docs.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport {\n  Search,\n  BookOpen,\n  Code,\n  Settings,\n  Zap,\n  Shield,\n  Cloud,\n  Database,\n  Server,\n  Monitor,\n  Cpu,\n  Lock,\n  Users,\n  Rocket,\n  FileText,\n  ExternalLink,\n  Copy,\n  CheckCircle,\n  ArrowRight,\n  Star,\n  Download,\n  PlayCircle,\n  GitBranch,\n  Terminal,\n  Globe,\n  Layers,\n  BarChart3,\n  Package,\n  Lightbulb,\n  Target,\n  ChevronRight,\n  Home,\n  Menu,\n  X\n} from \"lucide-react\";\n\ninterface DocSection {\n  id: string;\n  title: string;\n  icon: any;\n  description: string;\n  articles: DocArticle[];\n}\n\ninterface DocArticle {\n  id: string;\n  title: string;\n  description: string;\n  readTime: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  tags: string[];\n}\n\nconst Docs = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedSection, setSelectedSection] = useState(\"getting-started\");\n  const [selectedArticle, setSelectedArticle] = useState(\"quick-start\");\n  const [copiedCode, setCopiedCode] = useState(\"\");\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  const docSections: DocSection[] = [\n    {\n      id: \"getting-started\",\n      title: \"Getting Started\",\n      icon: Rocket,\n      description: \"Quick setup and initial configuration\",\n      articles: [\n        {\n          id: \"quick-start\",\n          title: \"Quick Start Guide\",\n          description: \"Get up and running in 5 minutes\",\n          readTime: \"5 min\",\n          difficulty: \"beginner\",\n          tags: [\"setup\", \"basics\"]\n        },\n        {\n          id: \"installation\",\n          title: \"Installation & Setup\",\n          description: \"Complete installation instructions\",\n          readTime: \"10 min\",\n          difficulty: \"beginner\",\n          tags: [\"install\", \"config\"]\n        },\n        {\n          id: \"authentication\",\n          title: \"Authentication\",\n          description: \"Setup API keys and authentication\",\n          readTime: \"8 min\",\n          difficulty: \"intermediate\",\n          tags: [\"auth\", \"security\"]\n        }\n      ]\n    },\n    {\n      id: \"cloud-analysis\",\n      title: \"Cloud Analysis\",\n      icon: Cloud,\n      description: \"Infrastructure analysis and optimization\",\n      articles: [\n        {\n          id: \"analysis-types\",\n          title: \"Analysis Types\",\n          description: \"Overview of different analysis modes\",\n          readTime: \"12 min\",\n          difficulty: \"beginner\",\n          tags: [\"analysis\", \"features\"]\n        },\n        {\n          id: \"cost-optimization\",\n          title: \"Cost Optimization\",\n          description: \"Reduce cloud spending with AI insights\",\n          readTime: \"15 min\",\n          difficulty: \"intermediate\",\n          tags: [\"cost\", \"optimization\"]\n        },\n        {\n          id: \"security-scanning\",\n          title: \"Security Scanning\",\n          description: \"Comprehensive security vulnerability detection\",\n          readTime: \"18 min\",\n          difficulty: \"advanced\",\n          tags: [\"security\", \"scanning\"]\n        }\n      ]\n    },\n    {\n      id: \"api-reference\",\n      title: \"API Reference\",\n      icon: Code,\n      description: \"Complete API documentation\",\n      articles: [\n        {\n          id: \"rest-api\",\n          title: \"REST API Overview\",\n          description: \"Core REST API endpoints and usage\",\n          readTime: \"20 min\",\n          difficulty: \"intermediate\",\n          tags: [\"api\", \"rest\"]\n        },\n        {\n          id: \"webhooks\",\n          title: \"Webhooks\",\n          description: \"Real-time notifications and integrations\",\n          readTime: \"12 min\",\n          difficulty: \"advanced\",\n          tags: [\"webhooks\", \"integration\"]\n        },\n        {\n          id: \"sdks\",\n          title: \"SDKs & Libraries\",\n          description: \"Official SDKs for popular languages\",\n          readTime: \"8 min\",\n          difficulty: \"intermediate\",\n          tags: [\"sdk\", \"libraries\"]\n        }\n      ]\n    },\n    {\n      id: \"integrations\",\n      title: \"Integrations\",\n      icon: Layers,\n      description: \"Connect with your existing tools\",\n      articles: [\n        {\n          id: \"aws-integration\",\n          title: \"AWS Integration\",\n          description: \"Connect your AWS infrastructure\",\n          readTime: \"15 min\",\n          difficulty: \"intermediate\",\n          tags: [\"aws\", \"cloud\"]\n        },\n        {\n          id: \"kubernetes\",\n          title: \"Kubernetes\",\n          description: \"K8s cluster analysis and monitoring\",\n          readTime: \"20 min\",\n          difficulty: \"advanced\",\n          tags: [\"k8s\", \"containers\"]\n        },\n        {\n          id: \"ci-cd\",\n          title: \"CI/CD Integration\",\n          description: \"Integrate with your deployment pipeline\",\n          readTime: \"12 min\",\n          difficulty: \"intermediate\",\n          tags: [\"ci-cd\", \"devops\"]\n        }\n      ]\n    },\n    {\n      id: \"enterprise\",\n      title: \"Enterprise\",\n      icon: Shield,\n      description: \"Enterprise features and compliance\",\n      articles: [\n        {\n          id: \"sso\",\n          title: \"Single Sign-On\",\n          description: \"Configure SSO for your organization\",\n          readTime: \"10 min\",\n          difficulty: \"advanced\",\n          tags: [\"sso\", \"enterprise\"]\n        },\n        {\n          id: \"compliance\",\n          title: \"Compliance & Governance\",\n          description: \"SOC 2, GDPR, and other compliance standards\",\n          readTime: \"25 min\",\n          difficulty: \"advanced\",\n          tags: [\"compliance\", \"governance\"]\n        },\n        {\n          id: \"audit-logs\",\n          title: \"Audit Logs\",\n          description: \"Access and analyze audit logs\",\n          readTime: \"8 min\",\n          difficulty: \"intermediate\",\n          tags: [\"audit\", \"logging\"]\n        }\n      ]\n    }\n  ];\n\n  const sampleCode = {\n    \"quick-start\": `// Initialize StackStage SDK\nimport { StackStage } from '@stackstage/sdk';\n\nconst client = new StackStage({\n  apiKey: 'your-api-key',\n  environment: 'production'\n});\n\n// Run a comprehensive analysis\nconst analysis = await client.analyze({\n  type: 'comprehensive',\n  target: 'aws://your-account',\n  options: {\n    includeOptimizations: true,\n    securityScan: true\n  }\n});\n\nconsole.log('Analysis completed:', analysis.id);`,\n\n    \"rest-api\": `# Start a new analysis\ncurl -X POST https://api.stackstage.com/v1/analysis \\\\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"type\": \"comprehensive\",\n    \"target\": \"aws://123456789012\",\n    \"options\": {\n      \"includeOptimizations\": true,\n      \"securityScan\": true\n    }\n  }'\n\n# Response\n{\n  \"id\": \"analysis_12345\",\n  \"status\": \"pending\",\n  \"estimatedDuration\": \"2-3 minutes\",\n  \"webhookUrl\": \"https://your-app.com/webhooks/stackstage\"\n}`,\n\n    \"aws-integration\": `# AWS IAM Policy for StackStage\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:Describe*\",\n        \"rds:Describe*\",\n        \"s3:GetBucketLocation\",\n        \"s3:ListBucket\",\n        \"cloudwatch:GetMetricStatistics\",\n        \"costs:GetRightsizingRecommendation\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}`\n  };\n\n  const copyToClipboard = (code: string, id: string) => {\n    navigator.clipboard.writeText(code);\n    setCopiedCode(id);\n    setTimeout(() => setCopiedCode(\"\"), 2000);\n  };\n\n  const currentSection = docSections.find(s => s.id === selectedSection);\n  const currentArticle = currentSection?.articles.find(a => a.id === selectedArticle);\n\n  const filteredSections = docSections.filter(section =>\n    section.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    section.articles.some(article =>\n      article.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      article.description.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  useEffect(() => {\n    // Auto-select first article when section changes\n    if (currentSection && !currentSection.articles.find(a => a.id === selectedArticle)) {\n      setSelectedArticle(currentSection.articles[0]?.id || \"\");\n    }\n  }, [selectedSection, currentSection, selectedArticle]);\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'beginner': return 'bg-green-500/20 text-green-700 dark:text-green-300';\n      case 'intermediate': return 'bg-yellow-500/20 text-yellow-700 dark:text-yellow-300';\n      case 'advanced': return 'bg-red-500/20 text-red-700 dark:text-red-300';\n      default: return 'bg-gray-500/20 text-gray-700 dark:text-gray-300';\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora intensity={0.2} speed={2} className=\"aurora-background\" />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        <div className=\"max-w-[1600px] mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8 min-h-[calc(100vh-160px)]\">\n            \n            {/* Sidebar */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"sticky top-24 space-y-6\">\n                {/* Mobile Menu Toggle */}\n                <div className=\"lg:hidden\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                    className=\"w-full\"\n                  >\n                    <Menu className=\"w-4 h-4 mr-2\" />\n                    Documentation Menu\n                  </Button>\n                </div>\n\n                {/* Search */}\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6 }}\n                  className={`${isSidebarOpen ? 'block' : 'hidden lg:block'}`}\n                >\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search documentation...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                      className=\"pl-10 glass-input\"\n                    />\n                  </div>\n                </motion.div>\n\n                {/* Navigation */}\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: 0.1 }}\n                  className={`${isSidebarOpen ? 'block' : 'hidden lg:block'}`}\n                >\n                  <ScrollArea className=\"h-[calc(100vh-300px)]\">\n                    <div className=\"space-y-4\">\n                      {filteredSections.map((section) => (\n                        <div key={section.id}>\n                          <motion.div\n                            whileHover={{ x: 2 }}\n                            className={`cursor-pointer p-3 rounded-xl border transition-all duration-200 ${\n                              selectedSection === section.id\n                                ? 'bg-primary/10 border-primary/30 ring-1 ring-primary/20'\n                                : 'border-border/50 hover:border-primary/20 hover:bg-muted/50'\n                            }`}\n                            onClick={() => {\n                              setSelectedSection(section.id);\n                              setSelectedArticle(section.articles[0]?.id || \"\");\n                            }}\n                          >\n                            <div className=\"flex items-center space-x-3\">\n                              <div className={`w-8 h-8 rounded-lg flex items-center justify-center ${\n                                selectedSection === section.id\n                                  ? 'bg-primary/20'\n                                  : 'bg-muted/80'\n                              }`}>\n                                <section.icon className={`w-4 h-4 ${\n                                  selectedSection === section.id ? 'text-primary' : 'text-muted-foreground'\n                                }`} />\n                              </div>\n                              <div>\n                                <h4 className=\"font-semibold text-sm\">{section.title}</h4>\n                                <p className=\"text-xs text-muted-foreground\">{section.description}</p>\n                              </div>\n                            </div>\n                          </motion.div>\n                          \n                          {/* Articles */}\n                          {selectedSection === section.id && (\n                            <motion.div\n                              initial={{ opacity: 0, height: 0 }}\n                              animate={{ opacity: 1, height: \"auto\" }}\n                              exit={{ opacity: 0, height: 0 }}\n                              className=\"ml-4 mt-2 space-y-1 border-l border-border/50 pl-4\"\n                            >\n                              {section.articles.map((article) => (\n                                <motion.div\n                                  key={article.id}\n                                  whileHover={{ x: 2 }}\n                                  className={`cursor-pointer p-2 rounded-lg transition-all duration-200 ${\n                                    selectedArticle === article.id\n                                      ? 'bg-primary/5 text-primary'\n                                      : 'hover:bg-muted/50 text-muted-foreground'\n                                  }`}\n                                  onClick={() => setSelectedArticle(article.id)}\n                                >\n                                  <div className=\"text-sm font-medium\">{article.title}</div>\n                                  <div className=\"text-xs text-muted-foreground\">{article.readTime}</div>\n                                </motion.div>\n                              ))}\n                            </motion.div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </ScrollArea>\n                </motion.div>\n              </div>\n            </div>\n\n            {/* Main Content */}\n            <div className=\"lg:col-span-3\">\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.2 }}\n                className=\"space-y-8\"\n              >\n                {/* Breadcrumb */}\n                <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                  <Home className=\"w-4 h-4\" />\n                  <ChevronRight className=\"w-4 h-4\" />\n                  <span>{currentSection?.title}</span>\n                  {currentArticle && (\n                    <>\n                      <ChevronRight className=\"w-4 h-4\" />\n                      <span className=\"text-foreground font-medium\">{currentArticle.title}</span>\n                    </>\n                  )}\n                </div>\n\n                {/* Article Header */}\n                {currentArticle && (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h1 className=\"text-4xl font-bold mb-4\">{currentArticle.title}</h1>\n                      <p className=\"text-lg text-muted-foreground mb-6\">{currentArticle.description}</p>\n                      \n                      <div className=\"flex items-center space-x-4\">\n                        <Badge className={getDifficultyColor(currentArticle.difficulty)}>\n                          {currentArticle.difficulty}\n                        </Badge>\n                        <span className=\"text-sm text-muted-foreground flex items-center\">\n                          <BookOpen className=\"w-4 h-4 mr-1\" />\n                          {currentArticle.readTime} read\n                        </span>\n                        <div className=\"flex items-center space-x-2\">\n                          {currentArticle.tags.map((tag) => (\n                            <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                              {tag}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <Separator />\n                  </div>\n                )}\n\n                {/* Content */}\n                <div className=\"space-y-8\">\n                  {/* Quick Start Content */}\n                  {selectedArticle === \"quick-start\" && (\n                    <div className=\"space-y-8\">\n                      <Card className=\"glass-card border-primary/20\">\n                        <CardHeader>\n                          <CardTitle className=\"flex items-center\">\n                            <Rocket className=\"w-5 h-5 mr-2 text-primary\" />\n                            Quick Start\n                          </CardTitle>\n                          <CardDescription>\n                            Get started with StackStage in just a few steps\n                          </CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"space-y-6\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                            <div className=\"text-center p-4 rounded-xl border border-primary/20 bg-primary/5\">\n                              <div className=\"w-12 h-12 bg-primary/20 rounded-xl flex items-center justify-center mx-auto mb-3\">\n                                <span className=\"text-lg font-bold text-primary\">1</span>\n                              </div>\n                              <h4 className=\"font-semibold mb-2\">Sign Up</h4>\n                              <p className=\"text-sm text-muted-foreground\">Create your account and get API keys</p>\n                            </div>\n                            <div className=\"text-center p-4 rounded-xl border border-primary/20 bg-primary/5\">\n                              <div className=\"w-12 h-12 bg-primary/20 rounded-xl flex items-center justify-center mx-auto mb-3\">\n                                <span className=\"text-lg font-bold text-primary\">2</span>\n                              </div>\n                              <h4 className=\"font-semibold mb-2\">Connect</h4>\n                              <p className=\"text-sm text-muted-foreground\">Link your cloud infrastructure</p>\n                            </div>\n                            <div className=\"text-center p-4 rounded-xl border border-primary/20 bg-primary/5\">\n                              <div className=\"w-12 h-12 bg-primary/20 rounded-xl flex items-center justify-center mx-auto mb-3\">\n                                <span className=\"text-lg font-bold text-primary\">3</span>\n                              </div>\n                              <h4 className=\"font-semibold mb-2\">Analyze</h4>\n                              <p className=\"text-sm text-muted-foreground\">Run your first comprehensive analysis</p>\n                            </div>\n                          </div>\n\n                          <div>\n                            <h4 className=\"font-semibold mb-3 flex items-center\">\n                              <Code className=\"w-4 h-4 mr-2\" />\n                              Installation\n                            </h4>\n                            <div className=\"relative\">\n                              <pre className=\"bg-muted/50 border border-border/50 rounded-xl p-4 overflow-x-auto\">\n                                <code className=\"text-sm\">{sampleCode[\"quick-start\"]}</code>\n                              </pre>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"absolute top-2 right-2\"\n                                onClick={() => copyToClipboard(sampleCode[\"quick-start\"], \"quick-start\")}\n                              >\n                                {copiedCode === \"quick-start\" ? (\n                                  <CheckCircle className=\"w-4 h-4\" />\n                                ) : (\n                                  <Copy className=\"w-4 h-4\" />\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <Card className=\"glass-card\">\n                          <CardHeader>\n                            <CardTitle className=\"text-lg\">Next Steps</CardTitle>\n                          </CardHeader>\n                          <CardContent className=\"space-y-3\">\n                            <Link href=\"#\" className=\"flex items-center p-3 rounded-lg border border-border/50 hover:border-primary/30 transition-colors group\">\n                              <Cloud className=\"w-5 h-5 mr-3 text-primary\" />\n                              <div>\n                                <div className=\"font-medium\">Cloud Analysis</div>\n                                <div className=\"text-sm text-muted-foreground\">Learn about analysis types</div>\n                              </div>\n                              <ArrowRight className=\"w-4 h-4 ml-auto group-hover:translate-x-1 transition-transform\" />\n                            </Link>\n                            <Link href=\"#\" className=\"flex items-center p-3 rounded-lg border border-border/50 hover:border-primary/30 transition-colors group\">\n                              <Code className=\"w-5 h-5 mr-3 text-primary\" />\n                              <div>\n                                <div className=\"font-medium\">API Reference</div>\n                                <div className=\"text-sm text-muted-foreground\">Explore the REST API</div>\n                              </div>\n                              <ArrowRight className=\"w-4 h-4 ml-auto group-hover:translate-x-1 transition-transform\" />\n                            </Link>\n                          </CardContent>\n                        </Card>\n\n                        <Card className=\"glass-card\">\n                          <CardHeader>\n                            <CardTitle className=\"text-lg\">Resources</CardTitle>\n                          </CardHeader>\n                          <CardContent className=\"space-y-3\">\n                            <Link href=\"#\" className=\"flex items-center p-3 rounded-lg border border-border/50 hover:border-primary/30 transition-colors group\">\n                              <PlayCircle className=\"w-5 h-5 mr-3 text-primary\" />\n                              <div>\n                                <div className=\"font-medium\">Video Tutorials</div>\n                                <div className=\"text-sm text-muted-foreground\">Step-by-step guides</div>\n                              </div>\n                              <ExternalLink className=\"w-4 h-4 ml-auto\" />\n                            </Link>\n                            <Link href=\"#\" className=\"flex items-center p-3 rounded-lg border border-border/50 hover:border-primary/30 transition-colors group\">\n                              <Users className=\"w-5 h-5 mr-3 text-primary\" />\n                              <div>\n                                <div className=\"font-medium\">Community</div>\n                                <div className=\"text-sm text-muted-foreground\">Join our Discord</div>\n                              </div>\n                              <ExternalLink className=\"w-4 h-4 ml-auto\" />\n                            </Link>\n                          </CardContent>\n                        </Card>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* REST API Content */}\n                  {selectedArticle === \"rest-api\" && (\n                    <div className=\"space-y-8\">\n                      <Card className=\"glass-card border-primary/20\">\n                        <CardHeader>\n                          <CardTitle className=\"flex items-center\">\n                            <Code className=\"w-5 h-5 mr-2 text-primary\" />\n                            REST API Overview\n                          </CardTitle>\n                          <CardDescription>\n                            Comprehensive API endpoints for cloud infrastructure analysis\n                          </CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"space-y-6\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                            <div className=\"text-center p-4 rounded-xl border border-blue-500/20 bg-blue-500/5\">\n                              <div className=\"text-2xl font-bold text-blue-500 mb-2\">99.9%</div>\n                              <div className=\"text-sm font-medium\">Uptime SLA</div>\n                            </div>\n                            <div className=\"text-center p-4 rounded-xl border border-green-500/20 bg-green-500/5\">\n                              <div className=\"text-2xl font-bold text-green-500 mb-2\">&lt;200ms</div>\n                              <div className=\"text-sm font-medium\">Response Time</div>\n                            </div>\n                            <div className=\"text-center p-4 rounded-xl border border-purple-500/20 bg-purple-500/5\">\n                              <div className=\"text-2xl font-bold text-purple-500 mb-2\">Rate Limited</div>\n                              <div className=\"text-sm font-medium\">Secure & Reliable</div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <h4 className=\"font-semibold mb-3\">Example Request</h4>\n                            <div className=\"relative\">\n                              <pre className=\"bg-muted/50 border border-border/50 rounded-xl p-4 overflow-x-auto\">\n                                <code className=\"text-sm\">{sampleCode[\"rest-api\"]}</code>\n                              </pre>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"absolute top-2 right-2\"\n                                onClick={() => copyToClipboard(sampleCode[\"rest-api\"], \"rest-api\")}\n                              >\n                                {copiedCode === \"rest-api\" ? (\n                                  <CheckCircle className=\"w-4 h-4\" />\n                                ) : (\n                                  <Copy className=\"w-4 h-4\" />\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  )}\n\n                  {/* AWS Integration Content */}\n                  {selectedArticle === \"aws-integration\" && (\n                    <div className=\"space-y-8\">\n                      <Card className=\"glass-card border-orange-500/20\">\n                        <CardHeader>\n                          <CardTitle className=\"flex items-center\">\n                            <Cloud className=\"w-5 h-5 mr-2 text-orange-500\" />\n                            AWS Integration\n                          </CardTitle>\n                          <CardDescription>\n                            Connect and analyze your AWS infrastructure securely\n                          </CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"space-y-6\">\n                          <div>\n                            <h4 className=\"font-semibold mb-3\">Required IAM Policy</h4>\n                            <div className=\"relative\">\n                              <pre className=\"bg-muted/50 border border-border/50 rounded-xl p-4 overflow-x-auto\">\n                                <code className=\"text-sm\">{sampleCode[\"aws-integration\"]}</code>\n                              </pre>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"absolute top-2 right-2\"\n                                onClick={() => copyToClipboard(sampleCode[\"aws-integration\"], \"aws-integration\")}\n                              >\n                                {copiedCode === \"aws-integration\" ? (\n                                  <CheckCircle className=\"w-4 h-4\" />\n                                ) : (\n                                  <Copy className=\"w-4 h-4\" />\n                                )}\n                              </Button>\n                            </div>\n                          </div>\n\n                          <div className=\"bg-blue-50 dark:bg-blue-950/20 border border-blue-200 dark:border-blue-800 rounded-xl p-4\">\n                            <div className=\"flex items-center mb-2\">\n                              <Shield className=\"w-4 h-4 mr-2 text-blue-600\" />\n                              <span className=\"font-medium text-blue-900 dark:text-blue-100\">Security Best Practices</span>\n                            </div>\n                            <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                              StackStage follows principle of least privilege. The IAM policy above grants only read-only access to the minimum required services for analysis.\n                            </p>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  )}\n                </div>\n\n                {/* Article Navigation */}\n                <div className=\"flex items-center justify-between pt-8 border-t border-border/50\">\n                  <div>\n                    {currentSection && currentSection.articles.indexOf(currentArticle!) > 0 && (\n                      <Button\n                        variant=\"outline\"\n                        onClick={() => {\n                          const currentIndex = currentSection.articles.indexOf(currentArticle!);\n                          setSelectedArticle(currentSection.articles[currentIndex - 1].id);\n                        }}\n                      >\n                        <ArrowRight className=\"w-4 h-4 mr-2 rotate-180\" />\n                        Previous\n                      </Button>\n                    )}\n                  </div>\n                  <div>\n                    {currentSection && currentSection.articles.indexOf(currentArticle!) < currentSection.articles.length - 1 && (\n                      <Button\n                        onClick={() => {\n                          const currentIndex = currentSection.articles.indexOf(currentArticle!);\n                          setSelectedArticle(currentSection.articles[currentIndex + 1].id);\n                        }}\n                      >\n                        Next\n                        <ArrowRight className=\"w-4 h-4 ml-2\" />\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Docs;","size_bytes":32136},"client/src/pages/Enterprise.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Shield,\n  Building2,\n  Users,\n  Lock,\n  Globe,\n  Zap,\n  Award,\n  CheckCircle,\n  ArrowRight,\n  Phone,\n  Mail,\n  Calendar,\n  Star,\n  Database,\n  Cloud,\n  Settings,\n  BarChart3,\n  FileText,\n  Key,\n  UserCheck,\n  Briefcase,\n  Target,\n  Layers\n} from \"lucide-react\";\n\nconst Enterprise = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const features = [\n    {\n      icon: Shield,\n      title: \"Advanced Security\",\n      description: \"SOC 2 Type II, GDPR compliance, and enterprise-grade encryption\"\n    },\n    {\n      icon: Users,\n      title: \"Team Management\",\n      description: \"Role-based access control, team analytics, and user provisioning\"\n    },\n    {\n      icon: Database,\n      title: \"Data Governance\",\n      description: \"Data residency controls, audit trails, and compliance reporting\"\n    },\n    {\n      icon: Globe,\n      title: \"Global Infrastructure\",\n      description: \"Multi-region deployment with 99.99% uptime SLA\"\n    },\n    {\n      icon: Settings,\n      title: \"Custom Integrations\",\n      description: \"Dedicated API access and custom webhook configurations\"\n    },\n    {\n      icon: BarChart3,\n      title: \"Advanced Analytics\",\n      description: \"Custom dashboards, detailed reporting, and usage insights\"\n    }\n  ];\n\n  const plans = [\n    {\n      name: \"Team\",\n      price: \"$99\",\n      period: \"per month\",\n      description: \"Perfect for growing teams\",\n      features: [\n        \"Up to 25 team members\",\n        \"Advanced security features\",\n        \"Priority support\",\n        \"Custom integrations\",\n        \"Advanced analytics\"\n      ],\n      popular: false\n    },\n    {\n      name: \"Enterprise\",\n      price: \"Custom\",\n      period: \"pricing\",\n      description: \"For large organizations\",\n      features: [\n        \"Unlimited team members\",\n        \"SOC 2 Type II compliance\",\n        \"Dedicated success manager\",\n        \"Custom deployment options\",\n        \"24/7 premium support\",\n        \"Advanced data governance\"\n      ],\n      popular: true\n    }\n  ];\n\n  const stats = [\n    { value: \"500+\", label: \"Enterprise Customers\" },\n    { value: \"99.99%\", label: \"Uptime SLA\" },\n    { value: \"24/7\", label: \"Premium Support\" },\n    { value: \"50+\", label: \"Integrations\" }\n  ];\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora intensity={0.3} speed={1.5} className=\"aurora-background\" />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className=\"bg-primary/10 text-primary border-primary/20 px-4 py-2\">\n                  <Building2 className=\"w-4 h-4 mr-2\" />\n                  Enterprise Solutions\n                </Badge>\n                <h1 className=\"text-5xl md:text-7xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    Scale with\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    Confidence\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  Enterprise-grade cloud architecture analysis with advanced security, \n                  compliance, and dedicated support for organizations at scale.\n                </p>\n              </motion.div>\n\n              <motion.div variants={itemVariants} className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                  <Phone className=\"w-5 h-5 mr-2\" />\n                  Schedule Demo\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" className=\"text-lg px-8 py-4\">\n                  <Mail className=\"w-5 h-5 mr-2\" />\n                  Contact Sales\n                </Button>\n              </motion.div>\n\n              {/* Stats */}\n              <motion.div variants={itemVariants} className=\"grid grid-cols-2 md:grid-cols-4 gap-8 pt-16\">\n                {stats.map((stat, index) => (\n                  <div key={index} className=\"text-center\">\n                    <div className=\"text-3xl md:text-4xl font-bold text-primary mb-2\">{stat.value}</div>\n                    <div className=\"text-muted-foreground\">{stat.label}</div>\n                  </div>\n                ))}\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Features Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-16\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-4xl font-bold\">Enterprise Features</h2>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n                  Built for enterprise requirements with advanced security, compliance, and scalability\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {features.map((feature, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card h-full border-primary/10 hover:border-primary/30 transition-all duration-300\">\n                      <CardHeader>\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center mb-4\">\n                          <feature.icon className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <CardDescription className=\"text-base leading-relaxed\">\n                          {feature.description}\n                        </CardDescription>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Pricing Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-16\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-4xl font-bold\">Enterprise Pricing</h2>\n                <p className=\"text-xl text-muted-foreground\">\n                  Flexible pricing for teams and enterprises\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {plans.map((plan, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className={`glass-card relative h-full ${\n                      plan.popular ? 'border-primary/30 ring-1 ring-primary/20' : 'border-border/50'\n                    }`}>\n                      {plan.popular && (\n                        <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                          <Badge className=\"bg-primary text-primary-foreground px-4 py-1\">\n                            <Star className=\"w-3 h-3 mr-1\" />\n                            Most Popular\n                          </Badge>\n                        </div>\n                      )}\n                      <CardHeader className=\"text-center pb-8\">\n                        <CardTitle className=\"text-2xl\">{plan.name}</CardTitle>\n                        <div className=\"space-y-2\">\n                          <div className=\"text-4xl font-bold\">\n                            {plan.price}\n                            <span className=\"text-lg font-normal text-muted-foreground\">/{plan.period}</span>\n                          </div>\n                          <CardDescription className=\"text-base\">{plan.description}</CardDescription>\n                        </div>\n                      </CardHeader>\n                      <CardContent className=\"space-y-6\">\n                        <ul className=\"space-y-3\">\n                          {plan.features.map((feature, featureIndex) => (\n                            <li key={featureIndex} className=\"flex items-center\">\n                              <CheckCircle className=\"w-5 h-5 text-primary mr-3 flex-shrink-0\" />\n                              <span>{feature}</span>\n                            </li>\n                          ))}\n                        </ul>\n                        <Button \n                          className=\"w-full\" \n                          variant={plan.popular ? \"default\" : \"outline\"}\n                        >\n                          {plan.price === \"Custom\" ? \"Contact Sales\" : \"Get Started\"}\n                          <ArrowRight className=\"w-4 h-4 ml-2\" />\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-12 text-center space-y-6\">\n                  <div className=\"space-y-4\">\n                    <h2 className=\"text-3xl font-bold\">Ready to Scale?</h2>\n                    <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                      Join hundreds of enterprises already using StackStage to optimize their cloud infrastructure. \n                      Get started with a personalized demo today.\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                    <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <Calendar className=\"w-5 h-5 mr-2\" />\n                      Schedule Demo\n                    </Button>\n                    <Button variant=\"outline\" size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <FileText className=\"w-5 h-5 mr-2\" />\n                      Download Brochure\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Enterprise;","size_bytes":12515},"client/src/pages/Privacy.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Shield,\n  Lock,\n  Eye,\n  Database,\n  Globe,\n  FileText,\n  Mail,\n  Calendar,\n  CheckCircle,\n  AlertTriangle,\n  Info,\n  Settings,\n  UserX,\n  Download,\n  Trash2\n} from \"lucide-react\";\n\nconst Privacy = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const principles = [\n    {\n      icon: Shield,\n      title: \"Data Minimization\",\n      description: \"We only collect data that's necessary for our services\"\n    },\n    {\n      icon: Lock,\n      title: \"Encryption\",\n      description: \"All data is encrypted in transit and at rest\"\n    },\n    {\n      icon: Eye,\n      title: \"Transparency\",\n      description: \"Clear information about how we use your data\"\n    },\n    {\n      icon: Settings,\n      title: \"Control\",\n      description: \"You have full control over your personal information\"\n    }\n  ];\n\n  const dataTypes = [\n    {\n      category: \"Account Information\",\n      description: \"Name, email address, company information, and billing details\",\n      purpose: \"Account management and service delivery\",\n      retention: \"As long as your account is active\"\n    },\n    {\n      category: \"Usage Data\",\n      description: \"How you interact with our platform and features used\",\n      purpose: \"Service improvement and analytics\",\n      retention: \"Up to 2 years\"\n    },\n    {\n      category: \"Infrastructure Data\",\n      description: \"Cloud architecture configurations and analysis results\",\n      purpose: \"Providing analysis and recommendations\",\n      retention: \"As specified in your data retention settings\"\n    },\n    {\n      category: \"Technical Data\",\n      description: \"IP addresses, browser information, and device identifiers\",\n      purpose: \"Security, troubleshooting, and service optimization\",\n      retention: \"Up to 1 year\"\n    }\n  ];\n\n  const rights = [\n    {\n      icon: Eye,\n      title: \"Access\",\n      description: \"Request access to your personal data\"\n    },\n    {\n      icon: Settings,\n      title: \"Rectification\",\n      description: \"Correct inaccurate personal data\"\n    },\n    {\n      icon: UserX,\n      title: \"Erasure\",\n      description: \"Request deletion of your personal data\"\n    },\n    {\n      icon: Download,\n      title: \"Portability\",\n      description: \"Export your data in a portable format\"\n    },\n    {\n      icon: AlertTriangle,\n      title: \"Object\",\n      description: \"Object to processing of your personal data\"\n    },\n    {\n      icon: Trash2,\n      title: \"Restriction\",\n      description: \"Restrict processing of your personal data\"\n    }\n  ];\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.2} \n          speed={2} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className=\"bg-green-500/10 text-green-700 dark:text-green-300 border-green-500/20 px-4 py-2\">\n                  <Shield className=\"w-4 h-4 mr-2\" />\n                  Privacy Policy\n                </Badge>\n                <h1 className=\"text-5xl md:text-6xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    Your Privacy\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    Matters\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  We're committed to protecting your privacy and being transparent about how we collect, \n                  use, and protect your personal information.\n                </p>\n              </motion.div>\n\n              <motion.div variants={itemVariants} className=\"flex items-center justify-center space-x-6 text-sm text-muted-foreground\">\n                <div className=\"flex items-center space-x-2\">\n                  <Calendar className=\"w-4 h-4\" />\n                  <span>Last updated: January 4, 2025</span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <FileText className=\"w-4 h-4\" />\n                  <span>Version 2.1</span>\n                </div>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Principles Section */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Our Privacy Principles</h2>\n                <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                  These core principles guide how we handle your personal information\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {principles.map((principle, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card h-full text-center border-primary/10\">\n                      <CardHeader>\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                          <principle.icon className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-lg\">{principle.title}</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <CardDescription>{principle.description}</CardDescription>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Main Content */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-16\"\n            >\n              {/* Data Collection */}\n              <motion.div variants={itemVariants} className=\"space-y-8\">\n                <div className=\"space-y-4\">\n                  <h2 className=\"text-3xl font-bold flex items-center\">\n                    <Database className=\"w-8 h-8 mr-3 text-primary\" />\n                    Information We Collect\n                  </h2>\n                  <p className=\"text-lg text-muted-foreground\">\n                    We collect information to provide you with the best possible service while respecting your privacy.\n                  </p>\n                </div>\n\n                <div className=\"space-y-6\">\n                  {dataTypes.map((type, index) => (\n                    <Card key={index} className=\"glass-card border-border/50\">\n                      <CardHeader>\n                        <CardTitle className=\"text-xl\">{type.category}</CardTitle>\n                        <CardDescription className=\"text-base\">{type.description}</CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"space-y-3\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                          <div>\n                            <span className=\"font-medium text-foreground\">Purpose:</span>\n                            <p className=\"text-muted-foreground\">{type.purpose}</p>\n                          </div>\n                          <div>\n                            <span className=\"font-medium text-foreground\">Retention:</span>\n                            <p className=\"text-muted-foreground\">{type.retention}</p>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </motion.div>\n\n              {/* How We Use Data */}\n              <motion.div variants={itemVariants} className=\"space-y-6\">\n                <h2 className=\"text-3xl font-bold flex items-center\">\n                  <Settings className=\"w-8 h-8 mr-3 text-primary\" />\n                  How We Use Your Information\n                </h2>\n                \n                <Card className=\"glass-card border-border/50\">\n                  <CardContent className=\"p-8 space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-4\">\n                        <h3 className=\"text-xl font-semibold\">Service Delivery</h3>\n                        <ul className=\"space-y-2 text-muted-foreground\">\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                            Provide cloud architecture analysis\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                            Generate security recommendations\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                            Process billing and payments\n                          </li>\n                        </ul>\n                      </div>\n                      <div className=\"space-y-4\">\n                        <h3 className=\"text-xl font-semibold\">Service Improvement</h3>\n                        <ul className=\"space-y-2 text-muted-foreground\">\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                            Analyze usage patterns\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                            Improve our algorithms\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                            Enhance user experience\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              {/* Your Rights */}\n              <motion.div variants={itemVariants} className=\"space-y-8\">\n                <div className=\"space-y-4\">\n                  <h2 className=\"text-3xl font-bold flex items-center\">\n                    <Lock className=\"w-8 h-8 mr-3 text-primary\" />\n                    Your Rights & Controls\n                  </h2>\n                  <p className=\"text-lg text-muted-foreground\">\n                    You have comprehensive rights over your personal data under GDPR and other privacy laws.\n                  </p>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  {rights.map((right, index) => (\n                    <Card key={index} className=\"glass-card border-border/50\">\n                      <CardHeader>\n                        <div className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center mb-3\">\n                          <right.icon className=\"w-5 h-5 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-lg\">{right.title}</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <CardDescription>{right.description}</CardDescription>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n\n                <Card className=\"glass-card border-blue-500/20 bg-blue-500/5\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start space-x-3\">\n                      <Info className=\"w-5 h-5 text-blue-500 mt-0.5 flex-shrink-0\" />\n                      <div>\n                        <h3 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\n                          How to Exercise Your Rights\n                        </h3>\n                        <p className=\"text-blue-800 dark:text-blue-200 text-sm\">\n                          To exercise any of these rights, please contact us at{\" \"}\n                          <a href=\"mailto:privacy@stackstage.com\" className=\"underline font-medium\">\n                            privacy@stackstage.com\n                          </a>\n                          {\" \"}or use the data controls in your account settings. We'll respond within 30 days.\n                        </p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              {/* Security */}\n              <motion.div variants={itemVariants} className=\"space-y-6\">\n                <h2 className=\"text-3xl font-bold flex items-center\">\n                  <Shield className=\"w-8 h-8 mr-3 text-primary\" />\n                  Data Security\n                </h2>\n                \n                <Card className=\"glass-card border-border/50\">\n                  <CardContent className=\"p-8 space-y-6\">\n                    <p className=\"text-lg text-muted-foreground\">\n                      We implement industry-leading security measures to protect your information:\n                    </p>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                      <div className=\"space-y-4\">\n                        <h3 className=\"text-xl font-semibold\">Technical Safeguards</h3>\n                        <ul className=\"space-y-2 text-muted-foreground\">\n                          <li>• AES-256 encryption at rest</li>\n                          <li>• TLS 1.3 for data in transit</li>\n                          <li>• Multi-factor authentication</li>\n                          <li>• Regular security audits</li>\n                        </ul>\n                      </div>\n                      <div className=\"space-y-4\">\n                        <h3 className=\"text-xl font-semibold\">Organizational Measures</h3>\n                        <ul className=\"space-y-2 text-muted-foreground\">\n                          <li>• SOC 2 Type II compliance</li>\n                          <li>• Employee background checks</li>\n                          <li>• Incident response procedures</li>\n                          <li>• Regular staff training</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              {/* Contact */}\n              <motion.div variants={itemVariants} className=\"space-y-6\">\n                <h2 className=\"text-3xl font-bold flex items-center\">\n                  <Mail className=\"w-8 h-8 mr-3 text-primary\" />\n                  Contact Us\n                </h2>\n                \n                <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"space-y-6\">\n                      <p className=\"text-lg\">\n                        If you have any questions about this Privacy Policy or our data practices, \n                        please don't hesitate to contact us.\n                      </p>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div>\n                          <h3 className=\"font-semibold mb-2\">Privacy Officer</h3>\n                          <p className=\"text-muted-foreground\">\n                            <a href=\"mailto:privacy@stackstage.com\" className=\"hover:text-primary transition-colors\">\n                              privacy@stackstage.com\n                            </a>\n                          </p>\n                        </div>\n                        <div>\n                          <h3 className=\"font-semibold mb-2\">Data Protection Officer</h3>\n                          <p className=\"text-muted-foreground\">\n                            <a href=\"mailto:dpo@stackstage.com\" className=\"hover:text-primary transition-colors\">\n                              dpo@stackstage.com\n                            </a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Privacy;","size_bytes":18646},"client/src/pages/Status.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Activity,\n  CheckCircle,\n  AlertTriangle,\n  XCircle,\n  Clock,\n  Globe,\n  Server,\n  Database,\n  Shield,\n  Zap,\n  Cloud,\n  BarChart3,\n  Calendar,\n  ExternalLink,\n  TrendingUp,\n  AlertCircle\n} from \"lucide-react\";\n\nconst Status = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const overallStatus = {\n    status: \"operational\",\n    uptime: \"99.98%\",\n    responseTime: \"142ms\",\n    lastIncident: \"12 days ago\"\n  };\n\n  const services = [\n    {\n      name: \"API Services\",\n      status: \"operational\",\n      uptime: \"99.99%\",\n      responseTime: \"89ms\",\n      description: \"Core API endpoints and authentication\",\n      icon: Zap\n    },\n    {\n      name: \"Analysis Engine\",\n      status: \"operational\", \n      uptime: \"99.97%\",\n      responseTime: \"1.2s\",\n      description: \"Cloud architecture analysis and processing\",\n      icon: BarChart3\n    },\n    {\n      name: \"Web Application\",\n      status: \"operational\",\n      uptime: \"99.98%\",\n      responseTime: \"156ms\",\n      description: \"Main application interface and dashboard\",\n      icon: Globe\n    },\n    {\n      name: \"Database\",\n      status: \"operational\",\n      uptime: \"100%\",\n      responseTime: \"23ms\",\n      description: \"Primary database and data storage\",\n      icon: Database\n    },\n    {\n      name: \"Authentication\",\n      status: \"operational\",\n      uptime: \"99.96%\",\n      responseTime: \"78ms\",\n      description: \"User authentication and authorization\",\n      icon: Shield\n    },\n    {\n      name: \"File Processing\",\n      status: \"degraded\",\n      uptime: \"98.5%\",\n      responseTime: \"2.8s\",\n      description: \"File upload and processing services\",\n      icon: Cloud\n    }\n  ];\n\n  const recentIncidents = [\n    {\n      id: \"INC-2025-001\",\n      title: \"Intermittent API Response Delays\",\n      status: \"resolved\",\n      severity: \"minor\",\n      startTime: \"Jan 2, 2025 14:30 UTC\",\n      resolvedTime: \"Jan 2, 2025 15:45 UTC\",\n      description: \"Some users experienced slower than normal API response times due to increased traffic during peak hours.\",\n      impact: \"Minimal impact to service functionality\"\n    },\n    {\n      id: \"INC-2024-089\",\n      title: \"Scheduled Database Maintenance\",\n      status: \"resolved\",\n      severity: \"maintenance\",\n      startTime: \"Dec 28, 2024 02:00 UTC\",\n      resolvedTime: \"Dec 28, 2024 04:30 UTC\",\n      description: \"Planned database maintenance to improve performance and apply security updates.\",\n      impact: \"Brief service interruption during maintenance window\"\n    },\n    {\n      id: \"INC-2024-088\",\n      title: \"File Upload Service Degradation\",\n      status: \"resolved\",\n      severity: \"major\",\n      startTime: \"Dec 22, 2024 09:15 UTC\", \n      resolvedTime: \"Dec 22, 2024 12:30 UTC\",\n      description: \"File upload service experienced significant delays due to storage infrastructure issues.\",\n      impact: \"File uploads were delayed or failed intermittently\"\n    }\n  ];\n\n  const metrics = [\n    {\n      title: \"API Requests\",\n      value: \"2.3M\",\n      change: \"+12%\",\n      period: \"Last 24h\",\n      icon: TrendingUp\n    },\n    {\n      title: \"Active Users\",\n      value: \"8,542\",\n      change: \"+5%\",\n      period: \"Currently\",\n      icon: Activity\n    },\n    {\n      title: \"Analyses Run\",\n      value: \"15,230\",\n      change: \"+18%\",\n      period: \"Last 7d\",\n      icon: BarChart3\n    },\n    {\n      title: \"Data Processed\",\n      value: \"1.2TB\",\n      change: \"+8%\",\n      period: \"Last 24h\",\n      icon: Database\n    }\n  ];\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'operational': return 'text-green-500 bg-green-500/10 border-green-500/20';\n      case 'degraded': return 'text-yellow-500 bg-yellow-500/10 border-yellow-500/20';\n      case 'outage': return 'text-red-500 bg-red-500/10 border-red-500/20';\n      case 'maintenance': return 'text-blue-500 bg-blue-500/10 border-blue-500/20';\n      default: return 'text-gray-500 bg-gray-500/10 border-gray-500/20';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'operational': return CheckCircle;\n      case 'degraded': return AlertTriangle;\n      case 'outage': return XCircle;\n      case 'maintenance': return Clock;\n      default: return AlertCircle;\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'minor': return 'bg-yellow-500/10 text-yellow-700 dark:text-yellow-300 border-yellow-500/20';\n      case 'major': return 'bg-red-500/10 text-red-700 dark:text-red-300 border-red-500/20';\n      case 'critical': return 'bg-purple-500/10 text-purple-700 dark:text-purple-300 border-purple-500/20';\n      case 'maintenance': return 'bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20';\n      default: return 'bg-gray-500/10 text-gray-700 dark:text-gray-300 border-gray-500/20';\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.2} \n          speed={2} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className={`px-4 py-2 ${getStatusColor(overallStatus.status)}`}>\n                  <CheckCircle className=\"w-4 h-4 mr-2\" />\n                  All Systems Operational\n                </Badge>\n                <h1 className=\"text-5xl md:text-6xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    System\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    Status\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  Real-time status and performance metrics for all StackStage services. \n                  Stay informed about service availability and planned maintenance.\n                </p>\n              </motion.div>\n\n              {/* Overall Metrics */}\n              <motion.div variants={itemVariants} className=\"grid grid-cols-2 md:grid-cols-4 gap-8 pt-8\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-green-500 mb-1\">{overallStatus.uptime}</div>\n                  <div className=\"text-sm text-muted-foreground\">Uptime (30d)</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-blue-500 mb-1\">{overallStatus.responseTime}</div>\n                  <div className=\"text-sm text-muted-foreground\">Avg Response</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-purple-500 mb-1\">{overallStatus.lastIncident}</div>\n                  <div className=\"text-sm text-muted-foreground\">Last Incident</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-orange-500 mb-1\">6</div>\n                  <div className=\"text-sm text-muted-foreground\">Services</div>\n                </div>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Current Status */}\n        <section className=\"py-16\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Current Status</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Live status of all StackStage services and infrastructure\n                </p>\n              </motion.div>\n\n              <div className=\"space-y-4\">\n                {services.map((service, index) => {\n                  const StatusIcon = getStatusIcon(service.status);\n                  return (\n                    <motion.div key={index} variants={itemVariants}>\n                      <Card className=\"glass-card border-border/50\">\n                        <CardContent className=\"p-6\">\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center space-x-4\">\n                              <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center\">\n                                <service.icon className=\"w-6 h-6 text-primary\" />\n                              </div>\n                              <div>\n                                <h3 className=\"text-lg font-semibold\">{service.name}</h3>\n                                <p className=\"text-sm text-muted-foreground\">{service.description}</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center space-x-6 text-sm\">\n                              <div className=\"text-center\">\n                                <div className=\"font-medium\">{service.uptime}</div>\n                                <div className=\"text-muted-foreground\">Uptime</div>\n                              </div>\n                              <div className=\"text-center\">\n                                <div className=\"font-medium\">{service.responseTime}</div>\n                                <div className=\"text-muted-foreground\">Response</div>\n                              </div>\n                              <Badge className={`${getStatusColor(service.status)} capitalize`}>\n                                <StatusIcon className=\"w-3 h-3 mr-1\" />\n                                {service.status}\n                              </Badge>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </motion.div>\n                  );\n                })}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Performance Metrics */}\n        <section className=\"py-16\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Performance Metrics</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Key performance indicators and usage statistics\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {metrics.map((metric, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card border-primary/10\">\n                      <CardHeader className=\"pb-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <metric.icon className=\"w-8 h-8 text-primary\" />\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {metric.period}\n                          </Badge>\n                        </div>\n                      </CardHeader>\n                      <CardContent className=\"space-y-2\">\n                        <div className=\"text-2xl font-bold\">{metric.value}</div>\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-sm text-muted-foreground\">{metric.title}</span>\n                          <span className=\"text-sm text-green-500 font-medium\">{metric.change}</span>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Recent Incidents */}\n        <section className=\"py-16\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Recent Incidents</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Latest incidents and maintenance activities\n                </p>\n              </motion.div>\n\n              <div className=\"space-y-6\">\n                {recentIncidents.map((incident, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card border-border/50\">\n                      <CardHeader>\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"space-y-2\">\n                            <div className=\"flex items-center space-x-3\">\n                              <Badge className={getSeverityColor(incident.severity)}>\n                                {incident.severity}\n                              </Badge>\n                              <Badge variant=\"outline\" className=\"capitalize\">\n                                {incident.status}\n                              </Badge>\n                              <span className=\"text-sm text-muted-foreground\">#{incident.id}</span>\n                            </div>\n                            <CardTitle className=\"text-xl\">{incident.title}</CardTitle>\n                          </div>\n                          <div className=\"text-right text-sm text-muted-foreground\">\n                            <div className=\"flex items-center space-x-1\">\n                              <Calendar className=\"w-4 h-4\" />\n                              <span>{incident.startTime}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <p className=\"text-muted-foreground\">{incident.description}</p>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                          <div>\n                            <span className=\"font-medium\">Impact:</span>\n                            <p className=\"text-muted-foreground mt-1\">{incident.impact}</p>\n                          </div>\n                          <div>\n                            <span className=\"font-medium\">Resolution:</span>\n                            <p className=\"text-muted-foreground mt-1\">{incident.resolvedTime}</p>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Subscribe to Updates */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-12 text-center space-y-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto\">\n                      <Activity className=\"w-8 h-8 text-primary\" />\n                    </div>\n                    <h2 className=\"text-3xl font-bold\">Stay Updated</h2>\n                    <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                      Subscribe to status updates and be the first to know about incidents, \n                      maintenance, and service improvements.\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                    <a href=\"https://status.stackstage.com/subscribe\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                        <Card className=\"glass-card border-primary/20 p-6 cursor-pointer hover:border-primary/40 transition-all duration-300\">\n                          <div className=\"text-center space-y-2\">\n                            <Server className=\"w-8 h-8 text-primary mx-auto\" />\n                            <div className=\"font-semibold\">Email Notifications</div>\n                            <div className=\"text-sm text-muted-foreground\">Get updates via email</div>\n                          </div>\n                        </Card>\n                      </motion.div>\n                    </a>\n                    <a href=\"https://status.stackstage.com/rss\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                        <Card className=\"glass-card border-primary/20 p-6 cursor-pointer hover:border-primary/40 transition-all duration-300\">\n                          <div className=\"text-center space-y-2\">\n                            <Globe className=\"w-8 h-8 text-primary mx-auto\" />\n                            <div className=\"font-semibold\">RSS Feed</div>\n                            <div className=\"text-sm text-muted-foreground\">Subscribe to RSS</div>\n                          </div>\n                        </Card>\n                      </motion.div>\n                    </a>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Status;","size_bytes":19765},"client/src/pages/Support.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  HelpCircle,\n  MessageCircle,\n  Mail,\n  Phone,\n  Clock,\n  Book,\n  Search,\n  FileText,\n  Video,\n  Users,\n  Zap,\n  Shield,\n  Star,\n  ExternalLink,\n  ChevronRight,\n  CheckCircle,\n  AlertCircle,\n  Info,\n  Headphones,\n  Calendar,\n  Download\n} from \"lucide-react\";\n\nconst Support = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const supportChannels = [\n    {\n      icon: MessageCircle,\n      title: \"Live Chat\",\n      description: \"Get instant help from our support team\",\n      availability: \"24/7 for Enterprise customers\",\n      action: \"Start Chat\",\n      priority: \"high\"\n    },\n    {\n      icon: Mail,\n      title: \"Email Support\",\n      description: \"Send us a detailed message about your issue\",\n      availability: \"Response within 24 hours\",\n      action: \"Send Email\",\n      priority: \"medium\"\n    },\n    {\n      icon: Phone,\n      title: \"Phone Support\",\n      description: \"Speak directly with our technical experts\",\n      availability: \"Business hours (Enterprise only)\",\n      action: \"Schedule Call\",\n      priority: \"high\"\n    },\n    {\n      icon: Book,\n      title: \"Documentation\",\n      description: \"Browse our comprehensive guides and tutorials\",\n      availability: \"Available 24/7\",\n      action: \"Browse Docs\",\n      priority: \"low\"\n    }\n  ];\n\n  const commonIssues = [\n    {\n      category: \"Getting Started\",\n      icon: Zap,\n      issues: [\n        \"How to set up my first analysis\",\n        \"Connecting cloud accounts\",\n        \"Understanding analysis results\",\n        \"Setting up team access\"\n      ]\n    },\n    {\n      category: \"Billing & Plans\",\n      icon: Star,\n      issues: [\n        \"Upgrading my subscription\",\n        \"Understanding billing cycles\",\n        \"Downloading invoices\",\n        \"Managing team licenses\"\n      ]\n    },\n    {\n      category: \"Technical Issues\",\n      icon: Shield,\n      issues: [\n        \"Analysis not completing\",\n        \"API integration problems\",\n        \"Data export issues\",\n        \"Performance optimization\"\n      ]\n    },\n    {\n      category: \"Account Management\",\n      icon: Users,\n      issues: [\n        \"Resetting my password\",\n        \"Managing team members\",\n        \"Security settings\",\n        \"Data retention policies\"\n      ]\n    }\n  ];\n\n  const resources = [\n    {\n      icon: FileText,\n      title: \"Documentation\",\n      description: \"Comprehensive guides and API references\",\n      link: \"/docs\",\n      external: false\n    },\n    {\n      icon: Video,\n      title: \"Video Tutorials\",\n      description: \"Step-by-step video walkthroughs\",\n      link: \"https://youtube.com/stackstage\",\n      external: true\n    },\n    {\n      icon: Users,\n      title: \"Community Forum\",\n      description: \"Connect with other StackStage users\",\n      link: \"https://community.stackstage.com\",\n      external: true\n    },\n    {\n      icon: Download,\n      title: \"Status Page\",\n      description: \"Check current system status and uptime\",\n      link: \"https://status.stackstage.com\",\n      external: true\n    }\n  ];\n\n  const stats = [\n    { value: \"< 1 min\", label: \"Average Chat Response\" },\n    { value: \"4.9/5\", label: \"Customer Satisfaction\" },\n    { value: \"24/7\", label: \"Enterprise Support\" },\n    { value: \"99.9%\", label: \"Resolution Rate\" }\n  ];\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background with smooth fade */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.2} \n          speed={2} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className=\"bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20 px-4 py-2\">\n                  <HelpCircle className=\"w-4 h-4 mr-2\" />\n                  Support Center\n                </Badge>\n                <h1 className=\"text-5xl md:text-6xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    How can we\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    help you?\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  Get the help you need with our comprehensive support resources, \n                  expert assistance, and active community.\n                </p>\n              </motion.div>\n\n              {/* Quick Search */}\n              <motion.div variants={itemVariants} className=\"max-w-2xl mx-auto\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Search for help articles, guides, or common issues...\"\n                    className=\"pl-12 h-14 text-lg glass-input\"\n                  />\n                  <Button className=\"absolute right-2 top-2 h-10\">\n                    Search\n                  </Button>\n                </div>\n              </motion.div>\n\n              {/* Stats */}\n              <motion.div variants={itemVariants} className=\"grid grid-cols-2 md:grid-cols-4 gap-8 pt-8\">\n                {stats.map((stat, index) => (\n                  <div key={index} className=\"text-center\">\n                    <div className=\"text-2xl md:text-3xl font-bold text-primary mb-1\">{stat.value}</div>\n                    <div className=\"text-sm text-muted-foreground\">{stat.label}</div>\n                  </div>\n                ))}\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Support Channels */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Get Support</h2>\n                <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                  Choose the best way to get help based on your needs and subscription plan\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {supportChannels.map((channel, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className={`glass-card h-full border-primary/10 hover:border-primary/30 transition-all duration-300 ${\n                      channel.priority === 'high' ? 'ring-1 ring-primary/20' : ''\n                    }`}>\n                      <CardHeader>\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center mb-4\">\n                          <channel.icon className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-xl\">{channel.title}</CardTitle>\n                        <CardDescription className=\"text-base\">{channel.description}</CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <div className=\"flex items-center space-x-2 text-sm\">\n                          <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                          <span className=\"text-muted-foreground\">{channel.availability}</span>\n                        </div>\n                        <Button className=\"w-full\" variant={channel.priority === 'high' ? 'default' : 'outline'}>\n                          {channel.action}\n                          <ChevronRight className=\"w-4 h-4 ml-2\" />\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Common Issues */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Common Issues</h2>\n                <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                  Quick answers to frequently asked questions\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {commonIssues.map((category, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card border-border/50\">\n                      <CardHeader>\n                        <CardTitle className=\"text-xl flex items-center\">\n                          <category.icon className=\"w-5 h-5 mr-3 text-primary\" />\n                          {category.category}\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <ul className=\"space-y-3\">\n                          {category.issues.map((issue, issueIndex) => (\n                            <li key={issueIndex}>\n                              <a href=\"#\" className=\"flex items-center space-x-3 p-2 rounded-lg hover:bg-muted/30 transition-colors group\">\n                                <HelpCircle className=\"w-4 h-4 text-muted-foreground group-hover:text-primary\" />\n                                <span className=\"text-sm group-hover:text-primary\">{issue}</span>\n                                <ChevronRight className=\"w-4 h-4 text-muted-foreground group-hover:text-primary ml-auto opacity-0 group-hover:opacity-100 transition-opacity\" />\n                              </a>\n                            </li>\n                          ))}\n                        </ul>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Contact Form */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Contact Support</h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Can't find what you're looking for? Send us a message and we'll get back to you.\n                </p>\n              </motion.div>\n\n              <motion.div variants={itemVariants}>\n                <Card className=\"glass-card border-primary/20\">\n                  <CardContent className=\"p-8\">\n                    <form className=\"space-y-6\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div className=\"space-y-2\">\n                          <label className=\"text-sm font-medium\">Name</label>\n                          <Input placeholder=\"Your full name\" />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <label className=\"text-sm font-medium\">Email</label>\n                          <Input type=\"email\" placeholder=\"your@email.com\" />\n                        </div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div className=\"space-y-2\">\n                          <label className=\"text-sm font-medium\">Issue Type</label>\n                          <Select>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select issue type\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"technical\">Technical Issue</SelectItem>\n                              <SelectItem value=\"billing\">Billing Question</SelectItem>\n                              <SelectItem value=\"account\">Account Management</SelectItem>\n                              <SelectItem value=\"feature\">Feature Request</SelectItem>\n                              <SelectItem value=\"other\">Other</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div className=\"space-y-2\">\n                          <label className=\"text-sm font-medium\">Priority</label>\n                          <Select>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select priority\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"low\">Low</SelectItem>\n                              <SelectItem value=\"medium\">Medium</SelectItem>\n                              <SelectItem value=\"high\">High</SelectItem>\n                              <SelectItem value=\"urgent\">Urgent</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <label className=\"text-sm font-medium\">Subject</label>\n                        <Input placeholder=\"Brief description of your issue\" />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <label className=\"text-sm font-medium\">Message</label>\n                        <Textarea \n                          placeholder=\"Please provide as much detail as possible about your issue...\"\n                          className=\"min-h-32\"\n                        />\n                      </div>\n\n                      <Button type=\"submit\" className=\"w-full text-lg py-3\">\n                        <Mail className=\"w-5 h-5 mr-2\" />\n                        Send Message\n                      </Button>\n                    </form>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Resources */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Self-Service Resources</h2>\n                <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                  Explore our comprehensive resources to find answers and learn more\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {resources.map((resource, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card h-full border-primary/10 hover:border-primary/30 transition-all duration-300 group\">\n                      <CardHeader>\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center mb-4 group-hover:bg-primary/20 transition-colors\">\n                          <resource.icon className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-xl flex items-center\">\n                          {resource.title}\n                          {resource.external && (\n                            <ExternalLink className=\"w-4 h-4 ml-2 opacity-50\" />\n                          )}\n                        </CardTitle>\n                        <CardDescription className=\"text-base\">{resource.description}</CardDescription>\n                      </CardHeader>\n                      <CardContent>\n                        {resource.external ? (\n                          <a href={resource.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button variant=\"outline\" className=\"w-full group-hover:bg-primary/10\">\n                              Explore\n                              <ChevronRight className=\"w-4 h-4 ml-2\" />\n                            </Button>\n                          </a>\n                        ) : (\n                          <Link to={resource.link}>\n                            <Button variant=\"outline\" className=\"w-full group-hover:bg-primary/10\">\n                              Explore\n                              <ChevronRight className=\"w-4 h-4 ml-2\" />\n                            </Button>\n                          </Link>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Enterprise Support CTA */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-12 text-center space-y-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"w-16 h-16 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto\">\n                      <Headphones className=\"w-8 h-8 text-primary\" />\n                    </div>\n                    <h2 className=\"text-3xl font-bold\">Need Priority Support?</h2>\n                    <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                      Enterprise customers get 24/7 priority support, dedicated success managers, \n                      and guaranteed response times. Upgrade today for premium support.\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col sm:flex-row items-center justify-center gap-4\">\n                    <Button size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <Star className=\"w-5 h-5 mr-2\" />\n                      Upgrade to Enterprise\n                    </Button>\n                    <Button variant=\"outline\" size=\"lg\" className=\"text-lg px-8 py-4\">\n                      <Calendar className=\"w-5 h-5 mr-2\" />\n                      Schedule Demo\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Support;","size_bytes":21132},"client/src/pages/Terms.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport Aurora from \"@/components/ui/aurora\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Scale,\n  FileText,\n  Shield,\n  AlertTriangle,\n  CheckCircle,\n  Calendar,\n  Mail,\n  Building2,\n  CreditCard,\n  RefreshCw,\n  UserX,\n  Globe,\n  Lock,\n  Info\n} from \"lucide-react\";\n\nconst Terms = () => {\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6 }\n    }\n  };\n\n  const keyTerms = [\n    {\n      icon: Building2,\n      title: \"Service Definition\",\n      description: \"StackStage provides cloud architecture analysis and optimization services\"\n    },\n    {\n      icon: CreditCard,\n      title: \"Billing & Payment\",\n      description: \"Subscription fees, billing cycles, and payment processing terms\"\n    },\n    {\n      icon: Shield,\n      title: \"Data & Privacy\",\n      description: \"How we handle your data in accordance with our Privacy Policy\"\n    },\n    {\n      icon: RefreshCw,\n      title: \"Service Availability\",\n      description: \"99.9% uptime SLA with scheduled maintenance windows\"\n    }\n  ];\n\n  const sections = [\n    {\n      id: \"acceptance\",\n      title: \"1. Acceptance of Terms\",\n      content: [\n        \"By accessing or using StackStage services, you agree to be bound by these Terms of Service and our Privacy Policy.\",\n        \"If you disagree with any part of these terms, you may not access or use our services.\",\n        \"We may modify these terms at any time, and such modifications will be effective immediately upon posting.\"\n      ]\n    },\n    {\n      id: \"description\",\n      title: \"2. Description of Service\",\n      content: [\n        \"StackStage provides cloud architecture analysis, security scanning, cost optimization recommendations, and related services.\",\n        \"Our services are provided on a subscription basis with different tiers offering varying levels of functionality.\",\n        \"We reserve the right to modify, suspend, or discontinue any part of our service at any time with reasonable notice.\"\n      ]\n    },\n    {\n      id: \"accounts\",\n      title: \"3. User Accounts and Registration\",\n      content: [\n        \"You must create an account to access our services and provide accurate, complete registration information.\",\n        \"You are responsible for maintaining the confidentiality of your account credentials.\",\n        \"You must immediately notify us of any unauthorized use of your account.\",\n        \"One person or legal entity may not maintain more than one free account.\"\n      ]\n    },\n    {\n      id: \"acceptable-use\",\n      title: \"4. Acceptable Use Policy\",\n      content: [\n        \"You may not use our services for any unlawful purpose or in violation of any local, state, national, or international law.\",\n        \"You may not attempt to gain unauthorized access to our systems or other users' accounts.\",\n        \"You may not use our services to transmit malware, spam, or other harmful content.\",\n        \"You may not reverse engineer, decompile, or attempt to extract source code from our services.\"\n      ]\n    },\n    {\n      id: \"billing\",\n      title: \"5. Billing and Payment\",\n      content: [\n        \"Subscription fees are billed in advance on a monthly or annual basis depending on your selected plan.\",\n        \"All fees are non-refundable except as required by law or as specifically provided in these terms.\",\n        \"We may change our pricing with 30 days' notice to existing subscribers.\",\n        \"Failure to pay fees may result in suspension or termination of your account.\"\n      ]\n    },\n    {\n      id: \"intellectual-property\",\n      title: \"6. Intellectual Property Rights\",\n      content: [\n        \"StackStage and our licensors own all rights, title, and interest in our services and technology.\",\n        \"You retain ownership of your data and content, subject to our rights to use such data to provide services.\",\n        \"You grant us a license to use your data solely for the purpose of providing and improving our services.\",\n        \"You may not use our trademarks, logos, or branding without prior written consent.\"\n      ]\n    },\n    {\n      id: \"data-security\",\n      title: \"7. Data Security and Privacy\",\n      content: [\n        \"We implement industry-standard security measures to protect your data as described in our Privacy Policy.\",\n        \"You acknowledge that no method of transmission over the internet is 100% secure.\",\n        \"We are not responsible for data breaches resulting from your failure to secure your account credentials.\",\n        \"You may export your data at any time through our data export functionality.\"\n      ]\n    },\n    {\n      id: \"limitation\",\n      title: \"8. Limitation of Liability\",\n      content: [\n        \"Our total liability for any claims arising from these terms or our services shall not exceed the amount you paid us in the 12 months preceding the claim.\",\n        \"We shall not be liable for any indirect, incidental, special, consequential, or punitive damages.\",\n        \"We provide our services 'as is' without warranties of any kind, either express or implied.\",\n        \"Some jurisdictions do not allow limitation of liability, so these limitations may not apply to you.\"\n      ]\n    },\n    {\n      id: \"termination\",\n      title: \"9. Termination\",\n      content: [\n        \"You may terminate your account at any time through your account settings.\",\n        \"We may terminate or suspend your account immediately for violation of these terms.\",\n        \"Upon termination, your right to use our services ceases immediately.\",\n        \"We will provide you with reasonable access to export your data following termination.\"\n      ]\n    },\n    {\n      id: \"governing-law\",\n      title: \"10. Governing Law and Disputes\",\n      content: [\n        \"These terms are governed by the laws of Delaware, United States, without regard to conflict of law principles.\",\n        \"Any disputes arising from these terms or our services shall be resolved through binding arbitration.\",\n        \"You waive any right to participate in class action lawsuits or class-wide arbitration.\",\n        \"The arbitration shall be conducted in English in Delaware, United States.\"\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      {/* Aurora Background */}\n      <div className=\"absolute inset-0\">\n        <Aurora \n          intensity={0.2} \n          speed={2} \n          className=\"aurora-background\"\n          fadeHeight={250}\n          fadeDirection=\"bottom\"\n        />\n      </div>\n\n      <main className=\"relative flex-1 pt-20\">\n        {/* Hero Section */}\n        <section className=\"py-24\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              className=\"text-center space-y-8\"\n            >\n              <motion.div variants={itemVariants} className=\"space-y-4\">\n                <Badge className=\"bg-blue-500/10 text-blue-700 dark:text-blue-300 border-blue-500/20 px-4 py-2\">\n                  <Scale className=\"w-4 h-4 mr-2\" />\n                  Terms of Service\n                </Badge>\n                <h1 className=\"text-5xl md:text-6xl font-bold\">\n                  <span className=\"bg-gradient-to-r from-foreground via-foreground/90 to-foreground/70 bg-clip-text text-transparent\">\n                    Terms of\n                  </span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-primary via-primary-glow to-purple-600 bg-clip-text text-transparent\">\n                    Service\n                  </span>\n                </h1>\n                <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n                  Please read these terms carefully before using StackStage. \n                  They govern your use of our services and outline our mutual responsibilities.\n                </p>\n              </motion.div>\n\n              <motion.div variants={itemVariants} className=\"flex items-center justify-center space-x-6 text-sm text-muted-foreground\">\n                <div className=\"flex items-center space-x-2\">\n                  <Calendar className=\"w-4 h-4\" />\n                  <span>Last updated: January 4, 2025</span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <FileText className=\"w-4 h-4\" />\n                  <span>Version 3.0</span>\n                </div>\n              </motion.div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Key Terms Overview */}\n        <section className=\"py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              <motion.div variants={itemVariants} className=\"text-center space-y-4\">\n                <h2 className=\"text-3xl font-bold\">Key Terms Overview</h2>\n                <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                  A quick overview of the most important aspects of our terms\n                </p>\n              </motion.div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {keyTerms.map((term, index) => (\n                  <motion.div key={index} variants={itemVariants}>\n                    <Card className=\"glass-card h-full text-center border-primary/10\">\n                      <CardHeader>\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                          <term.icon className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <CardTitle className=\"text-lg\">{term.title}</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <CardDescription>{term.description}</CardDescription>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Important Notice */}\n        <section className=\"py-8\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <Card className=\"glass-card border-orange-500/20 bg-orange-500/5\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start space-x-3\">\n                    <AlertTriangle className=\"w-5 h-5 text-orange-500 mt-0.5 flex-shrink-0\" />\n                    <div>\n                      <h3 className=\"font-semibold text-orange-900 dark:text-orange-100 mb-2\">\n                        Important Notice\n                      </h3>\n                      <p className=\"text-orange-800 dark:text-orange-200 text-sm\">\n                        These terms include important provisions such as a binding arbitration clause and class action waiver \n                        that affect your legal rights. Please read them carefully before using our services.\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Terms Content */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true }}\n              className=\"space-y-12\"\n            >\n              {sections.map((section, index) => (\n                <motion.div key={section.id} variants={itemVariants} id={section.id}>\n                  <Card className=\"glass-card border-border/50\">\n                    <CardHeader>\n                      <CardTitle className=\"text-2xl\">{section.title}</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      {section.content.map((paragraph, pIndex) => (\n                        <p key={pIndex} className=\"text-muted-foreground leading-relaxed\">\n                          {paragraph}\n                        </p>\n                      ))}\n                    </CardContent>\n                  </Card>\n                  {index < sections.length - 1 && <Separator className=\"opacity-30\" />}\n                </motion.div>\n              ))}\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Contact Section */}\n        <section className=\"py-16\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n            >\n              <Card className=\"glass-card border-primary/20 bg-gradient-to-br from-primary/5 to-purple-500/5\">\n                <CardContent className=\"p-8\">\n                  <div className=\"text-center space-y-6\">\n                    <div className=\"space-y-4\">\n                      <h2 className=\"text-3xl font-bold flex items-center justify-center\">\n                        <Mail className=\"w-8 h-8 mr-3 text-primary\" />\n                        Questions About These Terms?\n                      </h2>\n                      <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                        If you have any questions about these Terms of Service, please contact our legal team.\n                      </p>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div className=\"text-center\">\n                        <h3 className=\"font-semibold mb-2\">Legal Team</h3>\n                        <p className=\"text-muted-foreground\">\n                          <a href=\"mailto:legal@stackstage.com\" className=\"hover:text-primary transition-colors\">\n                            legal@stackstage.com\n                          </a>\n                        </p>\n                      </div>\n                      <div className=\"text-center\">\n                        <h3 className=\"font-semibold mb-2\">General Support</h3>\n                        <p className=\"text-muted-foreground\">\n                          <a href=\"mailto:support@stackstage.com\" className=\"hover:text-primary transition-colors\">\n                            support@stackstage.com\n                          </a>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Acknowledgment */}\n        <section className=\"py-8\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <Card className=\"glass-card border-green-500/20 bg-green-500/5\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"w-5 h-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                    <div>\n                      <h3 className=\"font-semibold text-green-900 dark:text-green-100 mb-2\">\n                        Acknowledgment\n                      </h3>\n                      <p className=\"text-green-800 dark:text-green-200 text-sm\">\n                        By using StackStage, you acknowledge that you have read, understood, and agree to be bound by these Terms of Service.\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Terms;","size_bytes":17050}}}